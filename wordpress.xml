<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2017-05-02 05:13"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>bob-roberts.net</title>
<link>http://bob-roberts.net</link>
<description>Ruby on Rails Developer Phoenix AZ</description>
<pubDate>Tue, 02 May 2017 05:13:45 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://bob-roberts.net</wp:base_blog_url>
<wp:author>
  <wp:author_login>broberts65</wp:author_login>
  <wp:author_email>broberts_az@yahoo.com</wp:author_email>
  <wp:author_display_name><![CDATA[Bob Roberts]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>42224488</wp:term_id>
  <wp:category_nicename>geoprocessing-with-python</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Geoprocessing with Python]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>832</wp:term_id>
  <wp:category_nicename>python</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Python]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11456025</wp:term_id>
  <wp:category_nicename>route-optimization</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Route Optimization]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>3601</wp:term_id>
  <wp:category_nicename>ruby-on-rails</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Ruby on Rails]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>42165130</wp:term_id>
  <wp:tag_slug>active-record-pattern</wp:tag_slug>
  <wp:tag_name><![CDATA[Active record pattern]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>75400</wp:term_id>
  <wp:tag_slug>bdd</wp:tag_slug>
  <wp:tag_name><![CDATA[bdd]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1365498</wp:term_id>
  <wp:tag_slug>behavior-driven-development</wp:tag_slug>
  <wp:tag_name><![CDATA[Behavior Driven Development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>880648</wp:term_id>
  <wp:tag_slug>capybara</wp:tag_slug>
  <wp:tag_name><![CDATA[Capybara]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>102821</wp:term_id>
  <wp:tag_slug>customer-relationship-management</wp:tag_slug>
  <wp:tag_name><![CDATA[Customer relationship management]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>690131</wp:term_id>
  <wp:tag_slug>factory-girl</wp:tag_slug>
  <wp:tag_name><![CDATA[Factory Girl]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>18825257</wp:term_id>
  <wp:tag_slug>factorygirl</wp:tag_slug>
  <wp:tag_name><![CDATA[factorygirl]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>45348</wp:term_id>
  <wp:tag_slug>frameworks</wp:tag_slug>
  <wp:tag_name><![CDATA[Frameworks]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1449696</wp:term_id>
  <wp:tag_slug>freelance-programmer</wp:tag_slug>
  <wp:tag_name><![CDATA[freelance programmer]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>41104691</wp:term_id>
  <wp:tag_slug>gis-geoprocessing-in-python</wp:tag_slug>
  <wp:tag_name><![CDATA[GIS Geoprocessing in Python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>209196</wp:term_id>
  <wp:tag_slug>git</wp:tag_slug>
  <wp:tag_name><![CDATA[Git]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5603054</wp:term_id>
  <wp:tag_slug>github</wp:tag_slug>
  <wp:tag_name><![CDATA[Github]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1423975</wp:term_id>
  <wp:tag_slug>haml</wp:tag_slug>
  <wp:tag_name><![CDATA[HAML]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>105397</wp:term_id>
  <wp:tag_slug>harvard-business-review</wp:tag_slug>
  <wp:tag_name><![CDATA[Harvard Business Review]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4977067</wp:term_id>
  <wp:tag_slug>heroku</wp:tag_slug>
  <wp:tag_name><![CDATA[Heroku]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>53242</wp:term_id>
  <wp:tag_slug>html5</wp:tag_slug>
  <wp:tag_name><![CDATA[HTML5]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>10179</wp:term_id>
  <wp:tag_slug>i</wp:tag_slug>
  <wp:tag_name><![CDATA[I]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1408921</wp:term_id>
  <wp:tag_slug>ie-8</wp:tag_slug>
  <wp:tag_name><![CDATA[IE 8]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>457</wp:term_id>
  <wp:tag_slug>javascript</wp:tag_slug>
  <wp:tag_name><![CDATA[JavaScript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>203308</wp:term_id>
  <wp:tag_slug>jquery</wp:tag_slug>
  <wp:tag_name><![CDATA[JQuery]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>72721</wp:term_id>
  <wp:tag_slug>json</wp:tag_slug>
  <wp:tag_name><![CDATA[JSON]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2761</wp:term_id>
  <wp:tag_slug>languages</wp:tag_slug>
  <wp:tag_name><![CDATA[Languages]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3348</wp:term_id>
  <wp:tag_slug>mac-os-x</wp:tag_slug>
  <wp:tag_name><![CDATA[Mac OS X]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>21954763</wp:term_id>
  <wp:tag_slug>mongodb</wp:tag_slug>
  <wp:tag_name><![CDATA[MongoDB]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4419</wp:term_id>
  <wp:tag_slug>mysql</wp:tag_slug>
  <wp:tag_name><![CDATA[MySQL]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>697649</wp:term_id>
  <wp:tag_slug>nginx</wp:tag_slug>
  <wp:tag_name><![CDATA[Nginx]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25</wp:term_id>
  <wp:tag_slug>open-source</wp:tag_slug>
  <wp:tag_name><![CDATA[Open source]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>144614</wp:term_id>
  <wp:tag_slug>phoenix-az</wp:tag_slug>
  <wp:tag_name><![CDATA[Phoenix AZ]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>73250600</wp:term_id>
  <wp:tag_slug>pivotal-story</wp:tag_slug>
  <wp:tag_name><![CDATA[pivotal story]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>277872</wp:term_id>
  <wp:tag_slug>pragmatic-programmer</wp:tag_slug>
  <wp:tag_name><![CDATA[pragmatic programmer]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>196</wp:term_id>
  <wp:tag_slug>programming</wp:tag_slug>
  <wp:tag_name><![CDATA[Programming]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>57049</wp:term_id>
  <wp:tag_slug>programming-language</wp:tag_slug>
  <wp:tag_name><![CDATA[Programming language]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>832</wp:term_id>
  <wp:tag_slug>python</wp:tag_slug>
  <wp:tag_name><![CDATA[Python]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>320212</wp:term_id>
  <wp:tag_slug>rackspace</wp:tag_slug>
  <wp:tag_name><![CDATA[Rackspace]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6652</wp:term_id>
  <wp:tag_slug>rails</wp:tag_slug>
  <wp:tag_name><![CDATA[Rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>61287041</wp:term_id>
  <wp:tag_slug>rebel-outpost</wp:tag_slug>
  <wp:tag_name><![CDATA[rebel outpost]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>79527818</wp:term_id>
  <wp:tag_slug>rebelhold</wp:tag_slug>
  <wp:tag_name><![CDATA[Rebelhold]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>72911230</wp:term_id>
  <wp:tag_slug>request-specs</wp:tag_slug>
  <wp:tag_name><![CDATA[request specs]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>889420</wp:term_id>
  <wp:tag_slug>rspec</wp:tag_slug>
  <wp:tag_name><![CDATA[RSpec]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4872</wp:term_id>
  <wp:tag_slug>ruby</wp:tag_slug>
  <wp:tag_name><![CDATA[Ruby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>84858879</wp:term_id>
  <wp:tag_slug>ruby-az</wp:tag_slug>
  <wp:tag_name><![CDATA[ruby az]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3601</wp:term_id>
  <wp:tag_slug>ruby-on-rails</wp:tag_slug>
  <wp:tag_name><![CDATA[Ruby on Rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8615411</wp:term_id>
  <wp:tag_slug>ruby-on-rails-developers</wp:tag_slug>
  <wp:tag_name><![CDATA[Ruby on Rails developers]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>34613</wp:term_id>
  <wp:tag_slug>sass</wp:tag_slug>
  <wp:tag_name><![CDATA[SASS]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>194471</wp:term_id>
  <wp:tag_slug>software-as-a-service</wp:tag_slug>
  <wp:tag_name><![CDATA[Software as a service]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>99281118</wp:term_id>
  <wp:tag_slug>steve-tong</wp:tag_slug>
  <wp:tag_name><![CDATA[Steve Tong]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>130907</wp:term_id>
  <wp:tag_slug>sudo</wp:tag_slug>
  <wp:tag_name><![CDATA[Sudo]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>189684</wp:term_id>
  <wp:tag_slug>telecommuting</wp:tag_slug>
  <wp:tag_name><![CDATA[Telecommuting]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>78073</wp:term_id>
  <wp:tag_slug>test-driven-development</wp:tag_slug>
  <wp:tag_name><![CDATA[test driven development]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>68975846</wp:term_id>
  <wp:tag_slug>twitter-bootstrap</wp:tag_slug>
  <wp:tag_name><![CDATA[Twitter Bootstrap]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>203176</wp:term_id>
  <wp:tag_slug>unicorn</wp:tag_slug>
  <wp:tag_name><![CDATA[Unicorn]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>242750570</wp:term_id>
  <wp:tag_slug>unicorn-server</wp:tag_slug>
  <wp:tag_name><![CDATA[Unicorn server]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2896</wp:term_id>
  <wp:tag_slug>web-application</wp:tag_slug>
  <wp:tag_name><![CDATA[Web application]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>21799</wp:term_id>
  <wp:tag_slug>wxpython</wp:tag_slug>
  <wp:tag_name><![CDATA[wxPython]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://secure.gravatar.com/blavatar/829e5e05bfef6782080b03e5f12bc251?s=96&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>bob-roberts.net</title>
		<link>http://bob-roberts.net</link>
	</image>
	<item>
  <title>cropped-python-logo-glassy.jpg</title>
  <link>http://bob-roberts.net/cropped-python-logo-glassy-jpg/</link>
  <pubDate>Sat, 14 Aug 2010 00:07:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/08/cropped-python-logo-glassy.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/08/cropped-python-logo-glassy.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>4</wp:post_id>
  <wp:post_date>2010-08-13 17:07:14</wp:post_date>
  <wp:post_date_gmt>2010-08-14 00:07:14</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-python-logo-glassy-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/08/cropped-python-logo-glassy.jpg</wp:attachment_url>
</item>
<item>
  <title>python-logo-glassy1.png</title>
  <link>http://bob-roberts.net/python-logo-glassy1-png/</link>
  <pubDate>Sat, 14 Aug 2010 00:13:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/08/python-logo-glassy1.png</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/08/python-logo-glassy1.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2010-08-13 17:13:46</wp:post_date>
  <wp:post_date_gmt>2010-08-14 00:13:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-logo-glassy1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/08/python-logo-glassy1.png</wp:attachment_url>
</item>
<item>
  <title>python-logo-glassy2.png</title>
  <link>http://bob-roberts.net/python-logo-glassy2-png/</link>
  <pubDate>Sat, 14 Aug 2010 00:14:39 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/08/python-logo-glassy2.png</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/08/python-logo-glassy2.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>6</wp:post_id>
  <wp:post_date>2010-08-13 17:14:39</wp:post_date>
  <wp:post_date_gmt>2010-08-14 00:14:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-logo-glassy2-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/08/python-logo-glassy2.png</wp:attachment_url>
</item>
<item>
  <title>cropped-binary-code.jpg</title>
  <link>http://bob-roberts.net/cropped-binary-code-jpg/</link>
  <pubDate>Sat, 11 Sep 2010 23:01:47 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/09/cropped-binary-code.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/09/cropped-binary-code.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>72</wp:post_id>
  <wp:post_date>2010-09-11 16:01:47</wp:post_date>
  <wp:post_date_gmt>2010-09-11 23:01:47</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-binary-code-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/09/cropped-binary-code.jpg</wp:attachment_url>
</item>
<item>
  <title>gisprogramming.jpg</title>
  <link>http://bob-roberts.net/gisprogramming-jpg/</link>
  <pubDate>Sat, 11 Sep 2010 23:13:01 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/09/gisprogramming.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/09/gisprogramming.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>73</wp:post_id>
  <wp:post_date>2010-09-11 16:13:01</wp:post_date>
  <wp:post_date_gmt>2010-09-11 23:13:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gisprogramming-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/09/gisprogramming.jpg</wp:attachment_url>
</item>
<item>
  <title>cropped-numbers_show-bg.jpg</title>
  <link>http://bob-roberts.net/cropped-numbers_show-bg-jpg/</link>
  <pubDate>Sat, 11 Sep 2010 23:14:26 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/09/cropped-numbers_show-bg.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/09/cropped-numbers_show-bg.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>74</wp:post_id>
  <wp:post_date>2010-09-11 16:14:26</wp:post_date>
  <wp:post_date_gmt>2010-09-11 23:14:26</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-numbers_show-bg-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/09/cropped-numbers_show-bg.jpg</wp:attachment_url>
</item>
<item>
  <title>binary-code1.jpg</title>
  <link>http://bob-roberts.net/binary-code1-jpg/</link>
  <pubDate>Sat, 11 Sep 2010 23:16:13 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2010/09/binary-code1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2010/09/binary-code1.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>75</wp:post_id>
  <wp:post_date>2010-09-11 16:16:13</wp:post_date>
  <wp:post_date_gmt>2010-09-11 23:16:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>binary-code1-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2010/09/binary-code1.jpg</wp:attachment_url>
</item>
<item>
  <title>013111_0015_AddingaPyth1.png</title>
  <link>http://bob-roberts.net/013111_0015_addingapyth1-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:15:24 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>150</wp:post_id>
  <wp:post_date>2011-01-30 17:15:24</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:15:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0015_addingapyth1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth1.png</wp:attachment_url>
</item>
<item>
  <title>013111_0015_AddingaPyth2.png</title>
  <link>http://bob-roberts.net/013111_0015_addingapyth2-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:15:26 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>151</wp:post_id>
  <wp:post_date>2011-01-30 17:15:26</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:15:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0015_addingapyth2-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth2.png</wp:attachment_url>
</item>
<item>
  <title>013111_0015_AddingaPyth3.png</title>
  <link>http://bob-roberts.net/013111_0015_addingapyth3-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:15:31 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>152</wp:post_id>
  <wp:post_date>2011-01-30 17:15:31</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:15:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0015_addingapyth3-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth3.png</wp:attachment_url>
</item>
<item>
  <title>013111_0015_AddingaPyth4.png</title>
  <link>http://bob-roberts.net/013111_0015_addingapyth4-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:15:34 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>153</wp:post_id>
  <wp:post_date>2011-01-30 17:15:34</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:15:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0015_addingapyth4-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth4.png</wp:attachment_url>
</item>
<item>
  <title>013111_0015_AddingaPyth5.png</title>
  <link>http://bob-roberts.net/013111_0015_addingapyth5-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:15:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>154</wp:post_id>
  <wp:post_date>2011-01-30 17:15:36</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:15:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0015_addingapyth5-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0015_addingapyth5.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth1.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth1-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:04 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>155</wp:post_id>
  <wp:post_date>2011-01-30 17:16:04</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth1.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth2.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth2-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>156</wp:post_id>
  <wp:post_date>2011-01-30 17:16:05</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth2-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth2.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth3.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth3-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:06 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>157</wp:post_id>
  <wp:post_date>2011-01-30 17:16:06</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth3-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth3.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth4.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth4-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:07 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>158</wp:post_id>
  <wp:post_date>2011-01-30 17:16:07</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth4-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth4.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth5.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth5-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:08 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>159</wp:post_id>
  <wp:post_date>2011-01-30 17:16:08</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth5-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth5.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth6.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth6-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:10 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth6.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>160</wp:post_id>
  <wp:post_date>2011-01-30 17:16:10</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth6-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth6.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth7.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth7-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:11 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth7.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>161</wp:post_id>
  <wp:post_date>2011-01-30 17:16:11</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth7-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth7.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth8.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth8-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth8.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>162</wp:post_id>
  <wp:post_date>2011-01-30 17:16:12</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth8-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth8.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth9.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth9-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:13 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth9.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>163</wp:post_id>
  <wp:post_date>2011-01-30 17:16:13</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth9-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth9.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth10.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth10-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth10.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>164</wp:post_id>
  <wp:post_date>2011-01-30 17:16:14</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth10-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth10.png</wp:attachment_url>
</item>
<item>
  <title>013111_0016_AddingaPyth11.png</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/013111_0016_addingapyth11-png/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:15 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth11.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>165</wp:post_id>
  <wp:post_date>2011-01-30 17:16:15</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>013111_0016_addingapyth11-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>166</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth11.png</wp:attachment_url>
</item>
<item>
  <title>Eric Pimpler - 2011-02-07 07:44:43</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=234</link>
  <pubDate>Mon, 07 Feb 2011 14:44:43 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?post_type=feedback&amp;p=234</guid>
  <description/>
  <content:encoded><![CDATA[Hi Bob,

I recently ran across your blog and really like your articles.  I am the owner of GeoSpatial Training Services and also the GeoChalkboard Blog (geochalkboard.wordpress.com).  I wanted to touch base with you on a couple things.  First, would you be interested in re-publishing some of your articles on our blog?  We could drive a lot of traffic to your site as we have about 11,000 subscribers to our weekly email newsletter.  I'm also looking for someone to develop an advanced e-learning course for Python and ArcGIS and was wondering if this is something you might be interested in.  We currently have a GIS Programming 101 for ArcGIS: Mastering Python course which has been extremely popular.  

Thanks,

Eric
<!--more-->
AUTHOR: Eric Pimpler
AUTHOR EMAIL: eric@geospatialtraining.com
AUTHOR URL: http://www.geospatialtraining.com
SUBJECT: Email from Blog
IP: 209.99.19.8
Array
(
    [Name] =&gt; Eric Pimpler
    [Email] =&gt; eric@geospatialtraining.com
    [Website] =&gt; http://www.geospatialtraining.com
    [Comment] =&gt; Hi Bob,

I recently ran across your blog and really like your articles.  I am the owner of GeoSpatial Training Services and also the GeoChalkboard Blog (geochalkboard.wordpress.com).  I wanted to touch base with you on a couple things.  First, would you be interested in re-publishing some of your articles on our blog?  We could drive a lot of traffic to your site as we have about 11,000 subscribers to our weekly email newsletter.  I'm also looking for someone to develop an advanced e-learning course for Python and ArcGIS and was wondering if this is something you might be interested in.  We currently have a GIS Programming 101 for ArcGIS: Mastering Python course which has been extremely popular.  

Thanks,

Eric
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>234</wp:post_id>
  <wp:post_date>2011-02-07 07:44:43</wp:post_date>
  <wp:post_date_gmt>2011-02-07 14:44:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>490a70cefec7d1878e13f7412de5f873</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Eric Pimpler]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[eric@geospatialtraining.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.geospatialtraining.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[209.99.19.8]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:12:"Eric Pimpler";s:5:"Email";s:27:"eric@geospatialtraining.com";s:7:"Website";s:33:"http://www.geospatialtraining.com";s:7:"Comment";s:727:"Hi Bob,

I recently ran across your blog and really like your articles.  I am the owner of GeoSpatial Training Services and also the GeoChalkboard Blog (geochalkboard.wordpress.com).  I wanted to touch base with you on a couple things.  First, would you be interested in re-publishing some of your articles on our blog?  We could drive a lot of traffic to your site as we have about 11,000 subscribers to our weekly email newsletter.  I'm also looking for someone to develop an advanced e-learning course for Python and ArcGIS and was wondering if this is something you might be interested in.  We currently have a GIS Programming 101 for ArcGIS: Mastering Python course which has been extremely popular.  

Thanks,

Eric";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:945:"Name: Eric Pimpler
Email: eric@geospatialtraining.com
Website: http://www.geospatialtraining.com
Comment: Hi Bob,

I recently ran across your blog and really like your articles.  I am the owner of GeoSpatial Training Services and also the GeoChalkboard Blog (geochalkboard.wordpress.com).  I wanted to touch base with you on a couple things.  First, would you be interested in re-publishing some of your articles on our blog?  We could drive a lot of traffic to your site as we have about 11,000 subscribers to our weekly email newsletter.  I'm also looking for someone to develop an advanced e-learning course for Python and ArcGIS and was wondering if this is something you might be interested in.  We currently have a GIS Programming 101 for ArcGIS: Mastering Python course which has been extremely popular.  

Thanks,

Eric


Time: Monday February 7, 2011 at 7:44 am
IP Address: 209.99.19.8

Sent by an unverified visitor to your site.";s:7:"headers";s:130:"From: Eric Pimpler <eric@geospatialtraining.com>
Reply-To: eric@geospatialtraining.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Kevin Bell - 2011-02-07 08:59:18</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=235</link>
  <pubDate>Mon, 07 Feb 2011 15:59:18 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?post_type=feedback&amp;p=235</guid>
  <description/>
  <content:encoded><![CDATA[http://gis.utah.gov/python

Here's a link to the python section of the Utah GIS Portal.  I am the GIS Coordinator for Salt Lake City, and I post things here now and again.  Feel free to link to it.

Great Blog!
<!--more-->
AUTHOR: Kevin Bell
AUTHOR EMAIL: kevin.bell@slcgov.com
AUTHOR URL: http://gis.utah.gov/python
SUBJECT: Email from Blog
IP: 204.124.13.151
Array
(
    [Name] =&gt; Kevin Bell
    [Email] =&gt; kevin.bell@slcgov.com
    [Website] =&gt; http://gis.utah.gov/python
    [Comment] =&gt; http://gis.utah.gov/python

Here's a link to the python section of the Utah GIS Portal.  I am the GIS Coordinator for Salt Lake City, and I post things here now and again.  Feel free to link to it.

Great Blog!
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>235</wp:post_id>
  <wp:post_date>2011-02-07 08:59:18</wp:post_date>
  <wp:post_date_gmt>2011-02-07 15:59:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>8a2d09c4df4c66455d983e01e67589e4</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Kevin Bell]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[kevin.bell@slcgov.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://gis.utah.gov/python]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[204.124.13.151]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:10:"Kevin Bell";s:5:"Email";s:21:"kevin.bell@slcgov.com";s:7:"Website";s:26:"http://gis.utah.gov/python";s:7:"Comment";s:214:"http://gis.utah.gov/python

Here's a link to the python section of the Utah GIS Portal.  I am the GIS Coordinator for Salt Lake City, and I post things here now and again.  Feel free to link to it.

Great Blog!";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:420:"Name: Kevin Bell
Email: kevin.bell@slcgov.com
Website: http://gis.utah.gov/python
Comment: http://gis.utah.gov/python

Here's a link to the python section of the Utah GIS Portal.  I am the GIS Coordinator for Salt Lake City, and I post things here now and again.  Feel free to link to it.

Great Blog!


Time: Monday February 7, 2011 at 8:59 am
IP Address: 204.124.13.151

Sent by an unverified visitor to your site.";s:7:"headers";s:116:"From: Kevin Bell <kevin.bell@slcgov.com>
Reply-To: kevin.bell@slcgov.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rengifo - 2011-02-11 17:43:55</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=273</link>
  <pubDate>Sat, 12 Feb 2011 00:43:55 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.com/?post_type=feedback&amp;p=273</guid>
  <description/>
  <content:encoded><![CDATA[Dear Bob,
I am new to python and to Geodjango as well. 
However,the few things I have read about django indicates that it might solve my problem:
Description:

We run a web application based in ESRI products.. Arcgis server 9.3.1 (SDE) on the top of MS-SQL server
Our application uses Javascript API. So my question: How to create a html template using gjango, which request information from the database  and deliver to the user  as a infowindow.

In other words; I want to  make a request to the database, through the web server and get a reponse as html.

Do you know about someone making trying this in ArcGIS server 9.3.1

Best regards
Rengifo
<!--more-->
AUTHOR: Rengifo
AUTHOR EMAIL: rengifoo@yahoo.de
AUTHOR URL: http://geoendemics.wordpress.com/about/
SUBJECT: Email from Blog
IP: 84.215.167.36
Array
(
    [Name] =&gt; Rengifo 
    [Email] =&gt; rengifoo@yahoo.de
    [Website] =&gt; http://geoendemics.wordpress.com/about/
    [Comment] =&gt; Dear Bob,
I am new to python and to Geodjango as well. 
However,the few things I have read about django indicates that it might solve my problem:
Description:

We run a web application based in ESRI products.. Arcgis server 9.3.1 (SDE) on the top of MS-SQL server
Our application uses Javascript API. So my question: How to create a html template using gjango, which request information from the database  and deliver to the user  as a infowindow.

In other words; I want to  make a request to the database, through the web server and get a reponse as html.

Do you know about someone making trying this in ArcGIS server 9.3.1

Best regards
Rengifo



)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>273</wp:post_id>
  <wp:post_date>2011-02-11 17:43:55</wp:post_date>
  <wp:post_date_gmt>2011-02-12 00:43:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>0c34424a9b6d1e8cc9723d133aadc5d3</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Rengifo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[rengifoo@yahoo.de]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://geoendemics.wordpress.com/about/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[84.215.167.36]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:8:"Rengifo ";s:5:"Email";s:17:"rengifoo@yahoo.de";s:7:"Website";s:39:"http://geoendemics.wordpress.com/about/";s:7:"Comment";s:667:"Dear Bob,
I am new to python and to Geodjango as well. 
However,the few things I have read about django indicates that it might solve my problem:
Description:

We run a web application based in ESRI products.. Arcgis server 9.3.1 (SDE) on the top of MS-SQL server
Our application uses Javascript API. So my question: How to create a html template using gjango, which request information from the database  and deliver to the user  as a infowindow.

In other words; I want to  make a request to the database, through the web server and get a reponse as html.

Do you know about someone making trying this in ArcGIS server 9.3.1

Best regards
Rengifo


";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:873:"Name: Rengifo
Email: rengifoo@yahoo.de
Website: http://geoendemics.wordpress.com/about/
Comment: Dear Bob,
I am new to python and to Geodjango as well. 
However,the few things I have read about django indicates that it might solve my problem:
Description:

We run a web application based in ESRI products.. Arcgis server 9.3.1 (SDE) on the top of MS-SQL server
Our application uses Javascript API. So my question: How to create a html template using gjango, which request information from the database  and deliver to the user  as a infowindow.

In other words; I want to  make a request to the database, through the web server and get a reponse as html.

Do you know about someone making trying this in ArcGIS server 9.3.1

Best regards
Rengifo


Time: Friday February 11, 2011 at 5:43 pm
IP Address: 84.215.167.36

Sent by an unverified visitor to your site.";s:7:"headers";s:105:"From: Rengifo <rengifoo@yahoo.de>
Reply-To: rengifoo@yahoo.de
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>James Abel - 2011-02-11 21:40:38</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=274</link>
  <pubDate>Sat, 12 Feb 2011 04:40:38 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.com/?post_type=feedback&amp;p=274</guid>
  <description/>
  <content:encoded><![CDATA[Hi Bob,
A friend of mine is looking to hire a rockstar Python/Django developer.  It's a startup with significant potential.  Preferably Phoenix or LA based.  Do you know of anyone?
Thanks!
James
<!--more-->
AUTHOR: James Abel
AUTHOR EMAIL: James@JamesAbel.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 24.251.57.98
Array
(
    [Name] =&gt; James Abel
    [Email] =&gt; James@JamesAbel.com
    [Website] =&gt; 
    [Comment] =&gt; Hi Bob,
A friend of mine is looking to hire a rockstar Python/Django developer.  It's a startup with significant potential.  Preferably Phoenix or LA based.  Do you know of anyone?
Thanks!
James
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>274</wp:post_id>
  <wp:post_date>2011-02-11 21:40:38</wp:post_date>
  <wp:post_date_gmt>2011-02-12 04:40:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2f433157c93ad93511e680ddf50a8c53</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[James Abel]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[James@JamesAbel.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[24.251.57.98]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:10:"James Abel";s:5:"Email";s:19:"James@JamesAbel.com";s:7:"Website";s:0:"";s:7:"Comment";s:197:"Hi Bob,
A friend of mine is looking to hire a rockstar Python/Django developer.  It's a startup with significant potential.  Preferably Phoenix or LA based.  Do you know of anyone?
Thanks!
James";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:374:"Name: James Abel
Email: James@JamesAbel.com
Website: 
Comment: Hi Bob,
A friend of mine is looking to hire a rockstar Python/Django developer.  It's a startup with significant potential.  Preferably Phoenix or LA based.  Do you know of anyone?
Thanks!
James


Time: Friday February 11, 2011 at 9:40 pm
IP Address: 24.251.57.98

Sent by an unverified visitor to your site.";s:7:"headers";s:112:"From: James Abel <James@JamesAbel.com>
Reply-To: James@JamesAbel.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>021311_2110_Creatingasi1.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi1-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:15 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>277</wp:post_id>
  <wp:post_date>2011-02-13 14:10:15</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi1.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi2.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi2-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:16 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>278</wp:post_id>
  <wp:post_date>2011-02-13 14:10:16</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi2-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi2.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi3.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi3-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:17 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi3.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>279</wp:post_id>
  <wp:post_date>2011-02-13 14:10:17</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi3-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi3.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi4.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi4-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:18 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi4.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>280</wp:post_id>
  <wp:post_date>2011-02-13 14:10:18</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi4-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi4.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi5.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi5-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:19 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi5.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>281</wp:post_id>
  <wp:post_date>2011-02-13 14:10:19</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi5-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi5.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi6.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi6-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:20 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi6.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>282</wp:post_id>
  <wp:post_date>2011-02-13 14:10:20</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi6-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi6.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi7.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi7-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi7.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>283</wp:post_id>
  <wp:post_date>2011-02-13 14:10:21</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi7-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi7.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi8.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi8-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:22 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi8.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>284</wp:post_id>
  <wp:post_date>2011-02-13 14:10:22</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi8-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi8.png</wp:attachment_url>
</item>
<item>
  <title>021311_2110_Creatingasi9.png</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/021311_2110_creatingasi9-png/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:24 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi9.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>285</wp:post_id>
  <wp:post_date>2011-02-13 14:10:24</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>021311_2110_creatingasi9-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>286</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi9.png</wp:attachment_url>
</item>
<item>
  <title>My Contact Info</title>
  <link>http://bob-roberts.net/qrchart/</link>
  <pubDate>Thu, 24 Mar 2011 20:53:20 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/03/qrchart.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>337</wp:post_id>
  <wp:post_date>2011-03-24 13:53:20</wp:post_date>
  <wp:post_date_gmt>2011-03-24 20:53:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>qrchart</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/03/qrchart.png</wp:attachment_url>
</item>
<item>
  <title>Follow me</title>
  <link>http://bob-roberts.net/follow-me/</link>
  <pubDate>Sat, 26 Mar 2011 18:35:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2011/03/follow-me.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>348</wp:post_id>
  <wp:post_date>2011-03-26 11:35:14</wp:post_date>
  <wp:post_date_gmt>2011-03-26 18:35:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>follow-me</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2011/03/follow-me.png</wp:attachment_url>
</item>
<item>
  <title>Magda - 2011-04-07 14:49:06</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=354</link>
  <pubDate>Thu, 07 Apr 2011 21:49:06 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.com/?post_type=feedback&amp;p=354</guid>
  <description/>
  <content:encoded><![CDATA[Hi,
I was wondering if you know if it is possible to programmatically (via python or java) add in a basemap?  The way it is done in arcMap is File-&gt;Add Data-&gt;new basemap but I am trying to create a custom tool to automate some features of map production.  I am using python as well as ArcMap Add-ins using Java. 

Thanks for your help.
Magda
<!--more-->
AUTHOR: Magda
AUTHOR EMAIL: magdakosior@gmail.com
AUTHOR URL: http://none
SUBJECT: Email from Blog
IP: 99.199.62.88
Array
(
    [Name] =&gt; Magda
    [Email] =&gt; magdakosior@gmail.com
    [Website] =&gt; none
    [Comment] =&gt; Hi,
I was wondering if you know if it is possible to programmatically (via python or java) add in a basemap?  The way it is done in arcMap is File-&gt;Add Data-&gt;new basemap but I am trying to create a custom tool to automate some features of map production.  I am using python as well as ArcMap Add-ins using Java. 

Thanks for your help.
Magda
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>354</wp:post_id>
  <wp:post_date>2011-04-07 14:49:06</wp:post_date>
  <wp:post_date_gmt>2011-04-07 21:49:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>7c9ae2287553c4c62f90cba3a1b98302</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Magda]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[magdakosior@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://none]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[99.199.62.88]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bobspython.com/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:5:"Magda";s:5:"Email";s:21:"magdakosior@gmail.com";s:7:"Website";s:4:"none";s:7:"Comment";s:351:"Hi,
I was wondering if you know if it is possible to programmatically (via python or java) add in a basemap?  The way it is done in arcMap is File-&gt;Add Data-&gt;new basemap but I am trying to create a custom tool to automate some features of map production.  I am using python as well as ArcMap Add-ins using Java. 

Thanks for your help.
Magda";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:583:"Name: Magda
Email: magdakosior@gmail.com
Website: http://none
Comment: Hi,
I was wondering if you know if it is possible to programmatically (via python or java) add in a basemap?  The way it is done in arcMap is File-&gt;Add Data-&gt;new basemap but I am trying to create a custom tool to automate some features of map production.  I am using python as well as ArcMap Add-ins using Java. 

Thanks for your help.
Magda


Time: Thursday April 7, 2011 at 2:49 pm
IP Address: 99.199.62.88
Contact Form URL: http://bobspython.com/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:111:"From: Magda <magdakosior@gmail.com>
Reply-To: magdakosior@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Candace Gillhoolley - 2011-04-12 08:48:05</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=361</link>
  <pubDate>Tue, 12 Apr 2011 15:48:05 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.com/?post_type=feedback&amp;p=361</guid>
  <description/>
  <content:encoded><![CDATA[I would love to send you a copy of Machine Learning in Action by Peter Harrington.  Would a complimentary copy be of interest?

Best, Candace
<!--more-->
AUTHOR: Candace Gillhoolley
AUTHOR EMAIL: cagi@manning.com
AUTHOR URL: http://www.manning.com
SUBJECT: Email from Blog
IP: 174.93.169.147
Array
(
    [Name] =&gt; Candace Gillhoolley
    [Email] =&gt; cagi@manning.com
    [Website] =&gt; www.manning.com
    [Comment] =&gt; I would love to send you a copy of Machine Learning in Action by Peter Harrington.  Would a complimentary copy be of interest?

Best, Candace
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>361</wp:post_id>
  <wp:post_date>2011-04-12 08:48:05</wp:post_date>
  <wp:post_date_gmt>2011-04-12 15:48:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>b85711d383c66c2d7a78891717b00e4f</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[cagi@manning.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Candace Gillhoolley]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.manning.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[174.93.169.147]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bobspython.com/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:19:"Candace Gillhoolley";s:5:"Email";s:16:"cagi@manning.com";s:7:"Website";s:15:"www.manning.com";s:7:"Comment";s:143:"I would love to send you a copy of Machine Learning in Action by Peter Harrington.  Would a complimentary copy be of interest?

Best, Candace";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:397:"Name: Candace Gillhoolley
Email: cagi@manning.com
Website: http://www.manning.com
Comment: I would love to send you a copy of Machine Learning in Action by Peter Harrington.  Would a complimentary copy be of interest?

Best, Candace


Time: Tuesday April 12, 2011 at 8:48 am
IP Address: 174.93.169.147
Contact Form URL: http://bobspython.com/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:115:"From: Candace Gillhoolley <cagi@manning.com>
Reply-To: cagi@manning.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Deborah - 2011-04-26 17:00:29</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=376</link>
  <pubDate>Wed, 27 Apr 2011 00:00:29 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bobspython.com/?post_type=feedback&amp;p=376</guid>
  <description/>
  <content:encoded><![CDATA[Hi there!  I am a recruiter looking for a QA Tester with automation and Python software experience for a company here in the Phoenix area and yes you are correct I havent had much luck with locatin a group that specializes in the Python world.  
Any suggestions on where to look?

Thanks for your time! :)
<!--more-->
AUTHOR: Deborah
AUTHOR EMAIL: dbowden@pt-corp.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 98.190.153.245
Array
(
    [Name] =&gt; Deborah
    [Email] =&gt; dbowden@pt-corp.com
    [Website] =&gt; 
    [Comment] =&gt; Hi there!  I am a recruiter looking for a QA Tester with automation and Python software experience for a company here in the Phoenix area and yes you are correct I havent had much luck with locatin a group that specializes in the Python world.  
Any suggestions on where to look?

Thanks for your time! :)
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>376</wp:post_id>
  <wp:post_date>2011-04-26 17:00:29</wp:post_date>
  <wp:post_date_gmt>2011-04-27 00:00:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>b059a907b73230396c8d286e4cc328d8</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Deborah]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[dbowden@pt-corp.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[98.190.153.245]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bobspython.com/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:7:"Deborah";s:5:"Email";s:19:"dbowden@pt-corp.com";s:7:"Website";s:0:"";s:7:"Comment";s:308:"Hi there!  I am a recruiter looking for a QA Tester with automation and Python software experience for a company here in the Phoenix area and yes you are correct I havent had much luck with locatin a group that specializes in the Python world.  
Any suggestions on where to look?

Thanks for your time! :)";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:531:"Name: Deborah
Email: dbowden@pt-corp.com
Website: 
Comment: Hi there!  I am a recruiter looking for a QA Tester with automation and Python software experience for a company here in the Phoenix area and yes you are correct I havent had much luck with locatin a group that specializes in the Python world.  
Any suggestions on where to look?

Thanks for your time! :)


Time: Tuesday April 26, 2011 at 5:00 pm
IP Address: 98.190.153.245
Contact Form URL: http://bobspython.com/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:109:"From: Deborah <dbowden@pt-corp.com>
Reply-To: dbowden@pt-corp.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Matthew Small - 2011-06-11 16:17:22</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=403</link>
  <pubDate>Sat, 11 Jun 2011 23:17:22 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=403</guid>
  <description/>
  <content:encoded><![CDATA[RightScale android app is written by tony.spataro@rightscale.com

Cheers,

Matt
<!--more-->
AUTHOR: Matthew Small
AUTHOR EMAIL: matthew@rightscale.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 68.6.68.253
Array
(
    [Name] =&gt; Matthew Small
    [Email] =&gt; matthew@rightscale.com
    [Website] =&gt; 
    [Comment] =&gt; RightScale android app is written by tony.spataro@rightscale.com

Cheers,

Matt
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>403</wp:post_id>
  <wp:post_date>2011-06-11 16:17:22</wp:post_date>
  <wp:post_date_gmt>2011-06-11 23:17:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>f697baf2d2f2583ba8722791acf53ed9</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Matthew Small]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[matthew@rightscale.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[68.6.68.253]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:13:"Matthew Small";s:5:"Email";s:22:"matthew@rightscale.com";s:7:"Website";s:0:"";s:7:"Comment";s:83:"RightScale android app is written by tony.spataro@rightscale.com

Cheers,

Matt";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:313:"Name: Matthew Small
Email: matthew@rightscale.com
Website: 
Comment: RightScale android app is written by tony.spataro@rightscale.com

Cheers,

Matt


Time: Saturday June 11, 2011 at 4:17 pm
IP Address: 68.6.68.253
Contact Form URL: http://bob-roberts.net/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:121:"From: Matthew Small <matthew@rightscale.com>
Reply-To: matthew@rightscale.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Diane Wilson - 2011-06-21 08:34:07</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=418</link>
  <pubDate>Tue, 21 Jun 2011 15:34:07 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=418</guid>
  <description/>
  <content:encoded><![CDATA[Hello - 
Found your blog yesterday and have been reading through everything - thanks for all the great information! 
But I am having trouble downloading the PowerPoint presentation. Would it be possible for someone to send me the Routing Presentation directly via an email, or send a different link? 
Thank you 
Diane Wilson
Waste Management IT
Phone: 713-328-7587
Email: dwilso21@wm.com
<!--more-->
AUTHOR: Diane Wilson
AUTHOR EMAIL: dwilso21@wm.com
AUTHOR URL: http://www.wm.com
SUBJECT: Email from Blog
IP: 156.101.1.5
Array
(
    [Name] =&gt; Diane Wilson
    [Email] =&gt; dwilso21@wm.com
    [Website] =&gt; www.wm.com
    [Comment] =&gt; Hello - 
Found your blog yesterday and have been reading through everything - thanks for all the great information! 
But I am having trouble downloading the PowerPoint presentation. Would it be possible for someone to send me the Routing Presentation directly via an email, or send a different link? 
Thank you 
Diane Wilson
Waste Management IT
Phone: 713-328-7587
Email: dwilso21@wm.com
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>418</wp:post_id>
  <wp:post_date>2011-06-21 08:34:07</wp:post_date>
  <wp:post_date_gmt>2011-06-21 15:34:07</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>b0edb85cee30b646d3b71c26157ab2fe</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Diane Wilson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[dwilso21@wm.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.wm.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[156.101.1.5]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:12:"Diane Wilson";s:5:"Email";s:15:"dwilso21@wm.com";s:7:"Website";s:10:"www.wm.com";s:7:"Comment";s:394:"Hello - 
Found your blog yesterday and have been reading through everything - thanks for all the great information! 
But I am having trouble downloading the PowerPoint presentation. Would it be possible for someone to send me the Routing Presentation directly via an email, or send a different link? 
Thank you 
Diane Wilson
Waste Management IT
Phone: 713-328-7587
Email: dwilso21@wm.com";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:632:"Name: Diane Wilson
Email: dwilso21@wm.com
Website: http://www.wm.com
Comment: Hello - 
Found your blog yesterday and have been reading through everything - thanks for all the great information! 
But I am having trouble downloading the PowerPoint presentation. Would it be possible for someone to send me the Routing Presentation directly via an email, or send a different link? 
Thank you 
Diane Wilson
Waste Management IT
Phone: 713-328-7587
Email: dwilso21@wm.com


Time: Tuesday June 21, 2011 at 8:34 am
IP Address: 156.101.1.5
Contact Form URL: http://bob-roberts.net/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:106:"From: Diane Wilson <dwilso21@wm.com>
Reply-To: dwilso21@wm.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SHaron Nelson - 2011-08-18 16:43:26</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=431</link>
  <pubDate>Thu, 18 Aug 2011 23:43:26 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=431</guid>
  <description/>
  <content:encoded><![CDATA[Hello,

Do you know any Python Developers that are looking for a contract in the Scotsdale area?  Call or email me and I will send you the details.

Sharon 
srn@softexconsulting.com
<!--more-->
AUTHOR: SHaron Nelson
AUTHOR EMAIL: srn@softexconsulting.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 98.149.24.173
Array
(
    [Name] =&gt; SHaron Nelson
    [Email] =&gt; srn@softexconsulting.com
    [Website] =&gt; 
    [Comment] =&gt; Hello,

Do you know any Python Developers that are looking for a contract in the Scotsdale area?  Call or email me and I will send you the details.

Sharon 
srn@softexconsulting.com 
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>431</wp:post_id>
  <wp:post_date>2011-08-18 16:43:26</wp:post_date>
  <wp:post_date_gmt>2011-08-18 23:43:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>3be0fb83ac08f33dd3238a96d8cb98f1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[98.149.24.173]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[SHaron Nelson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:13:"SHaron Nelson";s:5:"Email";s:24:"srn@softexconsulting.com";s:7:"Website";s:0:"";s:7:"Comment";s:187:"Hello,

Do you know any Python Developers that are looking for a contract in the Scotsdale area?  Call or email me and I will send you the details.

Sharon 
srn@softexconsulting.com ";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[srn@softexconsulting.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:422:"Name: SHaron Nelson
Email: srn@softexconsulting.com
Website: 
Comment: Hello,

Do you know any Python Developers that are looking for a contract in the Scotsdale area?  Call or email me and I will send you the details.

Sharon 
srn@softexconsulting.com


Time: Thursday August 18, 2011 at 4:43 pm
IP Address: 98.149.24.173
Contact Form URL: http://bob-roberts.net/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:125:"From: SHaron Nelson <srn@softexconsulting.com>
Reply-To: srn@softexconsulting.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Andrew K - 2011-10-11 12:01:52</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=449</link>
  <pubDate>Tue, 11 Oct 2011 19:01:52 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=449</guid>
  <description/>
  <content:encoded><![CDATA[Hello Bob, would you be able to help me add a small modification to your 'join dbf to shp' script you shared last August ? It works great, but I just need some assistance with error handling and how to make the script continue to run when it hits an error.

Thanks again !

Andrew
<!--more-->
AUTHOR: Andrew K
AUTHOR EMAIL: andrew@boundarysolutions.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 173.164.172.118
Array
(
    [Name] =&gt; Andrew K
    [Email] =&gt; andrew@boundarysolutions.com
    [Website] =&gt; 
    [Comment] =&gt; Hello Bob, would you be able to help me add a small modification to your 'join dbf to shp' script you shared last August ? It works great, but I just need some assistance with error handling and how to make the script continue to run when it hits an error.

Thanks again !

Andrew
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>449</wp:post_id>
  <wp:post_date>2011-10-11 12:01:52</wp:post_date>
  <wp:post_date_gmt>2011-10-11 19:01:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>57238dc3f34740be7dd57e8a001f866a</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Andrew K]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[andrew@boundarysolutions.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[173.164.172.118]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:8:"Andrew K";s:5:"Email";s:28:"andrew@boundarysolutions.com";s:7:"Website";s:0:"";s:7:"Comment";s:284:"Hello Bob, would you be able to help me add a small modification to your 'join dbf to shp' script you shared last August ? It works great, but I just need some assistance with error handling and how to make the script continue to run when it hits an error.

Thanks again !

Andrew";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:522:"Name: Andrew K
Email: andrew@boundarysolutions.com
Website: 
Comment: Hello Bob, would you be able to help me add a small modification to your 'join dbf to shp' script you shared last August ? It works great, but I just need some assistance with error handling and how to make the script continue to run when it hits an error.

Thanks again !

Andrew


Time: Tuesday October 11, 2011 at 12:01 pm
IP Address: 173.164.172.118
Contact Form URL: http://bob-roberts.net/contact/

Sent by an unverified visitor to your site.";s:7:"headers";s:128:"From: Andrew K <andrew@boundarysolutions.com>
Reply-To: andrew@boundarysolutions.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Hannah Tsui - 2012-01-20 16:27:02</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=577</link>
  <pubDate>Fri, 20 Jan 2012 23:27:02 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=577</guid>
  <description/>
  <content:encoded><![CDATA[Hello, Are you interested in the monetization of your RSS feed or online e-newsletter? Thanks, Hannah
<!--more-->
AUTHOR: Hannah Tsui
AUTHOR EMAIL: hannah@launchbit.com
AUTHOR URL: http://www.launchbit.com
SUBJECT: Email from Blog
IP: 75.144.255.22
Array
(
    [Name] =&gt; Hannah Tsui
    [Email] =&gt; hannah@launchbit.com
    [Website] =&gt; www.launchbit.com
    [Comment] =&gt; Hello, Are you interested in the monetization of your RSS feed or online e-newsletter? Thanks, Hannah
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>577</wp:post_id>
  <wp:post_date>2012-01-20 16:27:02</wp:post_date>
  <wp:post_date_gmt>2012-01-20 23:27:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>57722399d9db51ff25f3c486dc7bd621</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Hannah Tsui]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[hannah@launchbit.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.launchbit.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[75.144.255.22]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:11:"Hannah Tsui";s:5:"Email";s:20:"hannah@launchbit.com";s:7:"Website";s:17:"www.launchbit.com";s:7:"Comment";s:101:"Hello, Are you interested in the monetization of your RSS feed or online e-newsletter? Thanks, Hannah";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:352:"Name: Hannah Tsui
Email: hannah@launchbit.com
Website: http://www.launchbit.com
Comment: Hello, Are you interested in the monetization of your RSS feed or online e-newsletter? Thanks, Hannah

Time: Friday January 20, 2012 at 4:27 pm
IP Address: 75.144.255.22
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:115:"From: Hannah Tsui <hannah@launchbit.com>
Reply-To: hannah@launchbit.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>R.D. - 2012-02-01 12:32:56</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=592</link>
  <pubDate>Wed, 01 Feb 2012 19:32:56 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=592</guid>
  <description/>
  <content:encoded><![CDATA[HeyBob!
I just read your blog/discussion on "What's in a Name -programmer or developer?"
Very interesting and I never really thought about it.  When I fill out those forms at trade show or conferences, I always put "programmer/developer" !
Based on your blog (which I totally agree with), here at ADCi, I'm definitely a Developer.  Guess I'm going to start putting "Developer" on those forms instead of "programmer/developer" which now seems to me, redundant!
Hope this are going well for you.
Talk to you later.
R.D.
<!--more-->
AUTHOR: R.D.
AUTHOR EMAIL: rdh@new.rr.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 69.28.8.210
Array
(
    [Name] =&gt; R.D.
    [Email] =&gt; rdh@new.rr.com
    [Website] =&gt; 
    [Comment] =&gt; HeyBob!
I just read your blog/discussion on "What's in a Name -programmer or developer?"
Very interesting and I never really thought about it.  When I fill out those forms at trade show or conferences, I always put "programmer/developer" !
Based on your blog (which I totally agree with), here at ADCi, I'm definitely a Developer.  Guess I'm going to start putting "Developer" on those forms instead of "programmer/developer" which now seems to me, redundant!
Hope this are going well for you.
Talk to you later.
R.D.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>592</wp:post_id>
  <wp:post_date>2012-02-01 12:32:56</wp:post_date>
  <wp:post_date_gmt>2012-02-01 19:32:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>30baf16064caba46245e8ca299950eaa</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[rdh@new.rr.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[R.D.]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[69.28.8.210]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:4:"R.D.";s:5:"Email";s:14:"rdh@new.rr.com";s:7:"Website";s:0:"";s:7:"Comment";s:523:"HeyBob!
I just read your blog/discussion on "What's in a Name -programmer or developer?"
Very interesting and I never really thought about it.  When I fill out those forms at trade show or conferences, I always put "programmer/developer" !
Based on your blog (which I totally agree with), here at ADCi, I'm definitely a Developer.  Guess I'm going to start putting "Developer" on those forms instead of "programmer/developer" which now seems to me, redundant!
Hope this are going well for you.
Talk to you later.
R.D.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:729:"Name: R.D.
Email: rdh@new.rr.com
Comment: HeyBob!
I just read your blog/discussion on "What's in a Name -programmer or developer?"
Very interesting and I never really thought about it.  When I fill out those forms at trade show or conferences, I always put "programmer/developer" !
Based on your blog (which I totally agree with), here at ADCi, I'm definitely a Developer.  Guess I'm going to start putting "Developer" on those forms instead of "programmer/developer" which now seems to me, redundant!
Hope this are going well for you.
Talk to you later.
R.D.

Time: Wednesday February 1, 2012 at 12:32 pm
IP Address: 69.28.8.210
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:96:"From: R.D. <rdh@new.rr.com>
Reply-To: rdh@new.rr.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruthie - 2012-02-02 12:17:33</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=593</link>
  <pubDate>Thu, 02 Feb 2012 19:17:33 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=593</guid>
  <description/>
  <content:encoded><![CDATA[Bob,

I am a technical recruiter at Wildfire (www.wildfireapp.com); a rapidly growing, VC funded tech start up positioned squarely on top of the social media marketing revolution.  In collaboration with our VP of Engineering, we have narrowed in on the type of candidates we are looking to fill our Ruby developer positions.  We wanted to know if you were in the market or would be open to having a discussion with our team about our open roles, our company, and where you could be a fit.  If you are not looking, no pressure.  We were impressed by your profiles and contributions and would be interested if you are.

I have included some information on our company and role for you to look at.  Profitable since our product launch in Fall 2009, our technology allows companies of all sizes to create interactive social media advertising campaigns and publish them across various social media platforms.  We are looking for talented, full-stack engineers to help evolve the existing app, build new apps from scratch, and take overall architecture to the next level.  The core technology stack consists of Ruby on Rails, and we are using other technologies such as Sinatra, EventMachine, Cassandra, Redis, and Chef.  

Check out our team - https://github.com/wildfireapp.

We are growing our engineering team as there are still many exciting and challenging problems we can’t wait to jump into.  We were recently named one of the top 250 private companies to work for in the world by Always On, and we're a 2X winner of the Facebook Fund.  We serve tens of thousands of companies including major brands such as Pepsi, Fox, Electronic Arts, the NFL, Toyota and American Express.  Here are a few links to articles highlighting our success:

http://gigaom.com/2011/06/21/wildfire-interactive/
http://techcrunch.com/2011/06/21/wildfire-gets-a-major-upgrade-launches-facebook-page-builder-analytics-and-more/


Please let me know if you would be interested in exploring the opportunity, and feel free and reach out with any questions.

Thanks,

Ruthie
<!--more-->
AUTHOR: Ruthie
AUTHOR EMAIL: ruthie@wildfireapp.com
AUTHOR URL: http://www.wildfireapp.com
SUBJECT: Email from Blog
IP: 216.75.227.188
Array
(
    [Name] =&gt; Ruthie
    [Email] =&gt; ruthie@wildfireapp.com
    [Website] =&gt; www.wildfireapp.com
    [Comment] =&gt; Bob,

I am a technical recruiter at Wildfire (www.wildfireapp.com); a rapidly growing, VC funded tech start up positioned squarely on top of the social media marketing revolution.  In collaboration with our VP of Engineering, we have narrowed in on the type of candidates we are looking to fill our Ruby developer positions.  We wanted to know if you were in the market or would be open to having a discussion with our team about our open roles, our company, and where you could be a fit.  If you are not looking, no pressure.  We were impressed by your profiles and contributions and would be interested if you are.

I have included some information on our company and role for you to look at.  Profitable since our product launch in Fall 2009, our technology allows companies of all sizes to create interactive social media advertising campaigns and publish them across various social media platforms.  We are looking for talented, full-stack engineers to help evolve the existing app, build new apps from scratch, and take overall architecture to the next level.  The core technology stack consists of Ruby on Rails, and we are using other technologies such as Sinatra, EventMachine, Cassandra, Redis, and Chef.  

Check out our team - https://github.com/wildfireapp.

We are growing our engineering team as there are still many exciting and challenging problems we can’t wait to jump into.  We were recently named one of the top 250 private companies to work for in the world by Always On, and we're a 2X winner of the Facebook Fund.  We serve tens of thousands of companies including major brands such as Pepsi, Fox, Electronic Arts, the NFL, Toyota and American Express.  Here are a few links to articles highlighting our success:

http://gigaom.com/2011/06/21/wildfire-interactive/
http://techcrunch.com/2011/06/21/wildfire-gets-a-major-upgrade-launches-facebook-page-builder-analytics-and-more/


Please let me know if you would be interested in exploring the opportunity, and feel free and reach out with any questions.

Thanks,

Ruthie
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>593</wp:post_id>
  <wp:post_date>2012-02-02 12:17:33</wp:post_date>
  <wp:post_date_gmt>2012-02-02 19:17:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>994eedce5bb05415c885f51a5f43106d</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ruthie]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[ruthie@wildfireapp.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.wildfireapp.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[216.75.227.188]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:6:"Ruthie";s:5:"Email";s:22:"ruthie@wildfireapp.com";s:7:"Website";s:19:"www.wildfireapp.com";s:7:"Comment";s:2065:"Bob,

I am a technical recruiter at Wildfire (www.wildfireapp.com); a rapidly growing, VC funded tech start up positioned squarely on top of the social media marketing revolution.  In collaboration with our VP of Engineering, we have narrowed in on the type of candidates we are looking to fill our Ruby developer positions.  We wanted to know if you were in the market or would be open to having a discussion with our team about our open roles, our company, and where you could be a fit.  If you are not looking, no pressure.  We were impressed by your profiles and contributions and would be interested if you are.

I have included some information on our company and role for you to look at.  Profitable since our product launch in Fall 2009, our technology allows companies of all sizes to create interactive social media advertising campaigns and publish them across various social media platforms.  We are looking for talented, full-stack engineers to help evolve the existing app, build new apps from scratch, and take overall architecture to the next level.  The core technology stack consists of Ruby on Rails, and we are using other technologies such as Sinatra, EventMachine, Cassandra, Redis, and Chef.  

Check out our team - https://github.com/wildfireapp.

We are growing our engineering team as there are still many exciting and challenging problems we can’t wait to jump into.  We were recently named one of the top 250 private companies to work for in the world by Always On, and we're a 2X winner of the Facebook Fund.  We serve tens of thousands of companies including major brands such as Pepsi, Fox, Electronic Arts, the NFL, Toyota and American Express.  Here are a few links to articles highlighting our success:

http://gigaom.com/2011/06/21/wildfire-interactive/
http://techcrunch.com/2011/06/21/wildfire-gets-a-major-upgrade-launches-facebook-page-builder-analytics-and-more/


Please let me know if you would be interested in exploring the opportunity, and feel free and reach out with any questions.

Thanks,

Ruthie";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:2319:"Name: Ruthie
Email: ruthie@wildfireapp.com
Website: http://www.wildfireapp.com
Comment: Bob,

I am a technical recruiter at Wildfire (www.wildfireapp.com); a rapidly growing, VC funded tech start up positioned squarely on top of the social media marketing revolution.  In collaboration with our VP of Engineering, we have narrowed in on the type of candidates we are looking to fill our Ruby developer positions.  We wanted to know if you were in the market or would be open to having a discussion with our team about our open roles, our company, and where you could be a fit.  If you are not looking, no pressure.  We were impressed by your profiles and contributions and would be interested if you are.

I have included some information on our company and role for you to look at.  Profitable since our product launch in Fall 2009, our technology allows companies of all sizes to create interactive social media advertising campaigns and publish them across various social media platforms.  We are looking for talented, full-stack engineers to help evolve the existing app, build new apps from scratch, and take overall architecture to the next level.  The core technology stack consists of Ruby on Rails, and we are using other technologies such as Sinatra, EventMachine, Cassandra, Redis, and Chef.  

Check out our team - https://github.com/wildfireapp.

We are growing our engineering team as there are still many exciting and challenging problems we can’t wait to jump into.  We were recently named one of the top 250 private companies to work for in the world by Always On, and we're a 2X winner of the Facebook Fund.  We serve tens of thousands of companies including major brands such as Pepsi, Fox, Electronic Arts, the NFL, Toyota and American Express.  Here are a few links to articles highlighting our success:

http://gigaom.com/2011/06/21/wildfire-interactive/
http://techcrunch.com/2011/06/21/wildfire-gets-a-major-upgrade-launches-facebook-page-builder-analytics-and-more/


Please let me know if you would be interested in exploring the opportunity, and feel free and reach out with any questions.

Thanks,

Ruthie

Time: Thursday February 2, 2012 at 12:17 pm
IP Address: 216.75.227.188
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:114:"From: Ruthie <ruthie@wildfireapp.com>
Reply-To: ruthie@wildfireapp.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Darren - 2012-02-06 10:23:52</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=594</link>
  <pubDate>Mon, 06 Feb 2012 17:23:52 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=594</guid>
  <description/>
  <content:encoded><![CDATA[Do you offer Python scripting services for ArcGIS? We need a small, simple script which will place a unique image on a set of Data Driven Pages. If this is something you can assist with please drop me an email.

Darren
<!--more-->
AUTHOR: Darren
AUTHOR EMAIL: darren.enns@banff.ca
AUTHOR URL: http://banff.ca
SUBJECT: Email from Blog
IP: 66.18.236.108
Array
(
    [Name] =&gt; Darren
    [Email] =&gt; darren.enns@banff.ca
    [Website] =&gt; banff.ca
    [Comment] =&gt; Do you offer Python scripting services for ArcGIS? We need a small, simple script which will place a unique image on a set of Data Driven Pages. If this is something you can assist with please drop me an email.

Darren
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>594</wp:post_id>
  <wp:post_date>2012-02-06 10:23:52</wp:post_date>
  <wp:post_date_gmt>2012-02-06 17:23:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>4e3fbb2c865a9a9492a26d5b0ff33dee</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Darren]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[darren.enns@banff.ca]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://banff.ca]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[66.18.236.108]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:6:"Darren";s:5:"Email";s:20:"darren.enns@banff.ca";s:7:"Website";s:8:"banff.ca";s:7:"Comment";s:220:"Do you offer Python scripting services for ArcGIS? We need a small, simple script which will place a unique image on a set of Data Driven Pages. If this is something you can assist with please drop me an email.

Darren";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:458:"Name: Darren
Email: darren.enns@banff.ca
Website: http://banff.ca
Comment: Do you offer Python scripting services for ArcGIS? We need a small, simple script which will place a unique image on a set of Data Driven Pages. If this is something you can assist with please drop me an email.

Darren

Time: Monday February 6, 2012 at 10:23 am
IP Address: 66.18.236.108
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:110:"From: Darren <darren.enns@banff.ca>
Reply-To: darren.enns@banff.ca
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Kundan Dhakal - 2012-02-27 12:27:36</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=614</link>
  <pubDate>Mon, 27 Feb 2012 19:27:36 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=614</guid>
  <description/>
  <content:encoded><![CDATA[Greetings Bob:

I am a grad student at Oklahoma State Univ. with no previous python and programming experience. For  my research I need to interpolate some of the weather variables across the entire state. I have data for multiple weather stations and multiple years in a single spreadsheet ( I have uploaded it at go.unl.edu/gha). 

I need to write a script to interpolate it on a daily basis or monthly basis and also generate general statistics (mean. median, standard deviation)..Would you be able to help me? The first thing I need is to generate separate tables for separate years..I have spend couple of days trying to find some tutorials but no luck so far!

I would appreciate your help.

Kundan
<!--more-->
AUTHOR: Kundan Dhakal
AUTHOR EMAIL: kundan@okstate.edu
AUTHOR URL: http://NA
SUBJECT: Email from Blog
IP: 139.78.40.59
Array
(
    [Name] =&gt; Kundan Dhakal
    [Email] =&gt; kundan@okstate.edu
    [Website] =&gt; NA
    [Comment] =&gt; Greetings Bob:

I am a grad student at Oklahoma State Univ. with no previous python and programming experience. For  my research I need to interpolate some of the weather variables across the entire state. I have data for multiple weather stations and multiple years in a single spreadsheet ( I have uploaded it at go.unl.edu/gha). 

I need to write a script to interpolate it on a daily basis or monthly basis and also generate general statistics (mean. median, standard deviation)..Would you be able to help me? The first thing I need is to generate separate tables for separate years..I have spend couple of days trying to find some tutorials but no luck so far!

I would appreciate your help.

Kundan
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>614</wp:post_id>
  <wp:post_date>2012-02-27 12:27:36</wp:post_date>
  <wp:post_date_gmt>2012-02-27 19:27:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ad1a9492ba2597ffee4c4c4dd9add431</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Kundan Dhakal]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[kundan@okstate.edu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://NA]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[139.78.40.59]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:13:"Kundan Dhakal";s:5:"Email";s:18:"kundan@okstate.edu";s:7:"Website";s:2:"NA";s:7:"Comment";s:712:"Greetings Bob:

I am a grad student at Oklahoma State Univ. with no previous python and programming experience. For  my research I need to interpolate some of the weather variables across the entire state. I have data for multiple weather stations and multiple years in a single spreadsheet ( I have uploaded it at go.unl.edu/gha). 

I need to write a script to interpolate it on a daily basis or monthly basis and also generate general statistics (mean. median, standard deviation)..Would you be able to help me? The first thing I need is to generate separate tables for separate years..I have spend couple of days trying to find some tutorials but no luck so far!

I would appreciate your help.

Kundan";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:949:"Name: Kundan Dhakal
Email: kundan@okstate.edu
Website: http://NA
Comment: Greetings Bob:

I am a grad student at Oklahoma State Univ. with no previous python and programming experience. For  my research I need to interpolate some of the weather variables across the entire state. I have data for multiple weather stations and multiple years in a single spreadsheet ( I have uploaded it at go.unl.edu/gha). 

I need to write a script to interpolate it on a daily basis or monthly basis and also generate general statistics (mean. median, standard deviation)..Would you be able to help me? The first thing I need is to generate separate tables for separate years..I have spend couple of days trying to find some tutorials but no luck so far!

I would appreciate your help.

Kundan

Time: Monday February 27, 2012 at 12:27 pm
IP Address: 139.78.40.59
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:113:"From: Kundan Dhakal <kundan@okstate.edu>
Reply-To: kundan@okstate.edu
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>karthik bharadwaj - 2012-03-08 20:30:59</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=627</link>
  <pubDate>Fri, 09 Mar 2012 03:30:59 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=627</guid>
  <description/>
  <content:encoded><![CDATA[Hi, I want to display shapefiles in wxpython perform interactions as we do in arcmap like highlighting features. Please do suggest me a way to do it.
<!--more-->
AUTHOR: karthik bharadwaj
AUTHOR EMAIL: t.k.bharadwaj@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 203.143.159.19
Array
(
    [Name] =&gt; karthik bharadwaj
    [Email] =&gt; t.k.bharadwaj@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; Hi, I want to display shapefiles in wxpython perform interactions as we do in arcmap like highlighting features. Please do suggest me a way to do it. 
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>627</wp:post_id>
  <wp:post_date>2012-03-08 20:30:59</wp:post_date>
  <wp:post_date_gmt>2012-03-09 03:30:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ee4315c0ec4c95b27b88e163196af121</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[karthik bharadwaj]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[t.k.bharadwaj@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[203.143.159.19]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:17:"karthik bharadwaj";s:5:"Email";s:23:"t.k.bharadwaj@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:150:"Hi, I want to display shapefiles in wxpython perform interactions as we do in arcmap like highlighting features. Please do suggest me a way to do it. ";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:375:"Name: karthik bharadwaj
Email: t.k.bharadwaj@gmail.com
Comment: Hi, I want to display shapefiles in wxpython perform interactions as we do in arcmap like highlighting features. Please do suggest me a way to do it.

Time: Thursday March 8, 2012 at 8:30 pm
IP Address: 203.143.159.19
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:127:"From: karthik bharadwaj <t.k.bharadwaj@gmail.com>
Reply-To: t.k.bharadwaj@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>manli - 2012-04-11 04:52:25</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=645</link>
  <pubDate>Wed, 11 Apr 2012 11:52:25 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=645</guid>
  <description/>
  <content:encoded><![CDATA[I need to read the x and y values into an array and create a polygon using them in python script. but i am facing an issue with reading the y coordinates.the text that i used in the script is in the fol. format:-

x,y
0.0,722.9
-70.5,718.6
-141.0,708.5
-209.8,691.5
-276.9,667.7
-340.6,637.1
-401.8,600.6
-458.7,558.9
-510.5,510.5
-558.9,458.7
-600.6,401.8
-637.1,340.6
-667.7,276.9
-691.5,209.8
-708.5,141.0
-718.6,70.5
-722.9,0.0
-718.6,-70.5
-708.5,-141.0
-691.5,-209.8
-667.7,-276.9
-637.1,-340.6
-600.6,-401.8
-558.9,-458.7
-510.5,-510.5
-458.7,-558.9
-401.8,-600.6
-340.6,-637.1
-276.9,-667.7
-209.8,-691.5
-141.0,-708.5
-70.5,-718.6
0.0,-722.9
70.5,-718.6
141.0,-708.5
209.8,-691.5
276.9,-667.7
340.6,-637.1
401.8,-600.6
458.7,-558.9
510.5,-510.5
558.9,-458.7
600.6,-401.8
637.1,-340.6
667.7,-276.9
691.5,-209.8
708.5,-141.0
718.6,-70.5
722.9,0.0
718.6,70.5
708.5,141.0
691.5,209.8
667.7,276.9
637.1,340.6
600.6,401.8
558.9,458.7
510.5,510.5
458.7,558.9
401.8,600.6
340.6,637.1
276.9,667.7
209.8,691.5
141.0,708.5
70.5,718.6
0.0,722.9

and my python code is:-
can you help me with the issue??

import arcpy, sys,os

pointFilePath = "D:manlipython trialstest3.txt"

# Open the file and read the first (and only) line
pointFile = open(pointFilePath, "r")
headerLine = pointFile.readline()

# Make a Python list out of the coordinates. , is the delimiter
valueList = headerLine.split(",")

latValueIndex = valueList.index("lat")
lonValueIndex = valueList.index("lon")
##print latValueIndex
coordList = []
for line in pointFile.readlines():
    segmentedLine = line.split(",")
    coordList.append([segmentedLine[lonValueIndex], segmentedLine[latValueIndex]])
   
print coordList


# This Array object will hold a clockwise "ring" of Point
#  objects, thereby making a polygon.
polygonArray = arcpy.CreateObject("Array")


for line in pointFile.readlines():
    segmentedLine = line.split(",")
    latValue = segmentedLine[latValueIndex]
    #lonValue = segmentedLine[lonValueIndex]


# Loop through each coordinate pair and make a Point object

    currentPoint = arcpy.CreateObject("Point")
    currentPoint.X = lonValue # X coordinate
    currentPoint.Y = latValue # Y coordinate

    # Add the newly-created Point to your Array    
    polygonArray.add(currentPoint)
    polygonArray.append([segmentedLine[latValueIndex]])

print polygonArray
arcpy.AddMessage(polygonArray)
<!--more-->
AUTHOR: manli
AUTHOR EMAIL: cmanli24@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 203.199.47.172
Array
(
    [Name] =&gt; manli
    [Email] =&gt; cmanli24@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; I need to read the x and y values into an array and create a polygon using them in python script. but i am facing an issue with reading the y coordinates.the text that i used in the script is in the fol. format:-

x,y
0.0,722.9
-70.5,718.6
-141.0,708.5
-209.8,691.5
-276.9,667.7
-340.6,637.1
-401.8,600.6
-458.7,558.9
-510.5,510.5
-558.9,458.7
-600.6,401.8
-637.1,340.6
-667.7,276.9
-691.5,209.8
-708.5,141.0
-718.6,70.5
-722.9,0.0
-718.6,-70.5
-708.5,-141.0
-691.5,-209.8
-667.7,-276.9
-637.1,-340.6
-600.6,-401.8
-558.9,-458.7
-510.5,-510.5
-458.7,-558.9
-401.8,-600.6
-340.6,-637.1
-276.9,-667.7
-209.8,-691.5
-141.0,-708.5
-70.5,-718.6
0.0,-722.9
70.5,-718.6
141.0,-708.5
209.8,-691.5
276.9,-667.7
340.6,-637.1
401.8,-600.6
458.7,-558.9
510.5,-510.5
558.9,-458.7
600.6,-401.8
637.1,-340.6
667.7,-276.9
691.5,-209.8
708.5,-141.0
718.6,-70.5
722.9,0.0
718.6,70.5
708.5,141.0
691.5,209.8
667.7,276.9
637.1,340.6
600.6,401.8
558.9,458.7
510.5,510.5
458.7,558.9
401.8,600.6
340.6,637.1
276.9,667.7
209.8,691.5
141.0,708.5
70.5,718.6
0.0,722.9

and my python code is:-
can you help me with the issue??

import arcpy, sys,os

pointFilePath = "D:\manli\python trials\test3.txt"

# Open the file and read the first (and only) line
pointFile = open(pointFilePath, "r")
headerLine = pointFile.readline()

# Make a Python list out of the coordinates. , is the delimiter
valueList = headerLine.split(",")

latValueIndex = valueList.index("lat")
lonValueIndex = valueList.index("lon")
##print latValueIndex
coordList = []
for line in pointFile.readlines():
    segmentedLine = line.split(",")
    coordList.append([segmentedLine[lonValueIndex], segmentedLine[latValueIndex]])
   
print coordList


# This Array object will hold a clockwise "ring" of Point
#  objects, thereby making a polygon.
polygonArray = arcpy.CreateObject("Array")


for line in pointFile.readlines():
    segmentedLine = line.split(",")
    latValue = segmentedLine[latValueIndex]
    #lonValue = segmentedLine[lonValueIndex]


# Loop through each coordinate pair and make a Point object

    currentPoint = arcpy.CreateObject("Point")
    currentPoint.X = lonValue # X coordinate
    currentPoint.Y = latValue # Y coordinate

    # Add the newly-created Point to your Array    
    polygonArray.add(currentPoint)
    polygonArray.append([segmentedLine[latValueIndex]])

print polygonArray
arcpy.AddMessage(polygonArray)
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>645</wp:post_id>
  <wp:post_date>2012-04-11 04:52:25</wp:post_date>
  <wp:post_date_gmt>2012-04-11 11:52:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>8f654a1dd27151b45c7c6949b6b30f24</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[manli]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[cmanli24@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[203.199.47.172]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:5:"manli";s:5:"Email";s:18:"cmanli24@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:2499:"I need to read the x and y values into an array and create a polygon using them in python script. but i am facing an issue with reading the y coordinates.the text that i used in the script is in the fol. format:-

x,y
0.0,722.9
-70.5,718.6
-141.0,708.5
-209.8,691.5
-276.9,667.7
-340.6,637.1
-401.8,600.6
-458.7,558.9
-510.5,510.5
-558.9,458.7
-600.6,401.8
-637.1,340.6
-667.7,276.9
-691.5,209.8
-708.5,141.0
-718.6,70.5
-722.9,0.0
-718.6,-70.5
-708.5,-141.0
-691.5,-209.8
-667.7,-276.9
-637.1,-340.6
-600.6,-401.8
-558.9,-458.7
-510.5,-510.5
-458.7,-558.9
-401.8,-600.6
-340.6,-637.1
-276.9,-667.7
-209.8,-691.5
-141.0,-708.5
-70.5,-718.6
0.0,-722.9
70.5,-718.6
141.0,-708.5
209.8,-691.5
276.9,-667.7
340.6,-637.1
401.8,-600.6
458.7,-558.9
510.5,-510.5
558.9,-458.7
600.6,-401.8
637.1,-340.6
667.7,-276.9
691.5,-209.8
708.5,-141.0
718.6,-70.5
722.9,0.0
718.6,70.5
708.5,141.0
691.5,209.8
667.7,276.9
637.1,340.6
600.6,401.8
558.9,458.7
510.5,510.5
458.7,558.9
401.8,600.6
340.6,637.1
276.9,667.7
209.8,691.5
141.0,708.5
70.5,718.6
0.0,722.9

and my python code is:-
can you help me with the issue??

import arcpy, sys,os

pointFilePath = "D:\manli\python trials\test3.txt"

# Open the file and read the first (and only) line
pointFile = open(pointFilePath, "r")
headerLine = pointFile.readline()

# Make a Python list out of the coordinates. , is the delimiter
valueList = headerLine.split(",")

latValueIndex = valueList.index("lat")
lonValueIndex = valueList.index("lon")
##print latValueIndex
coordList = []
for line in pointFile.readlines():
    segmentedLine = line.split(",")
    coordList.append([segmentedLine[lonValueIndex], segmentedLine[latValueIndex]])
   
print coordList


# This Array object will hold a clockwise "ring" of Point
#  objects, thereby making a polygon.
polygonArray = arcpy.CreateObject("Array")


for line in pointFile.readlines():
    segmentedLine = line.split(",")
    latValue = segmentedLine[latValueIndex]
    #lonValue = segmentedLine[lonValueIndex]


# Loop through each coordinate pair and make a Point object

    currentPoint = arcpy.CreateObject("Point")
    currentPoint.X = lonValue # X coordinate
    currentPoint.Y = latValue # Y coordinate

    # Add the newly-created Point to your Array    
    polygonArray.add(currentPoint)
    polygonArray.append([segmentedLine[latValueIndex]])

print polygonArray
arcpy.AddMessage(polygonArray)";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:2707:"Name: manli
Email: cmanli24@gmail.com
Comment: I need to read the x and y values into an array and create a polygon using them in python script. but i am facing an issue with reading the y coordinates.the text that i used in the script is in the fol. format:-

x,y
0.0,722.9
-70.5,718.6
-141.0,708.5
-209.8,691.5
-276.9,667.7
-340.6,637.1
-401.8,600.6
-458.7,558.9
-510.5,510.5
-558.9,458.7
-600.6,401.8
-637.1,340.6
-667.7,276.9
-691.5,209.8
-708.5,141.0
-718.6,70.5
-722.9,0.0
-718.6,-70.5
-708.5,-141.0
-691.5,-209.8
-667.7,-276.9
-637.1,-340.6
-600.6,-401.8
-558.9,-458.7
-510.5,-510.5
-458.7,-558.9
-401.8,-600.6
-340.6,-637.1
-276.9,-667.7
-209.8,-691.5
-141.0,-708.5
-70.5,-718.6
0.0,-722.9
70.5,-718.6
141.0,-708.5
209.8,-691.5
276.9,-667.7
340.6,-637.1
401.8,-600.6
458.7,-558.9
510.5,-510.5
558.9,-458.7
600.6,-401.8
637.1,-340.6
667.7,-276.9
691.5,-209.8
708.5,-141.0
718.6,-70.5
722.9,0.0
718.6,70.5
708.5,141.0
691.5,209.8
667.7,276.9
637.1,340.6
600.6,401.8
558.9,458.7
510.5,510.5
458.7,558.9
401.8,600.6
340.6,637.1
276.9,667.7
209.8,691.5
141.0,708.5
70.5,718.6
0.0,722.9

and my python code is:-
can you help me with the issue??

import arcpy, sys,os

pointFilePath = "D:manlipython trialstest3.txt"

# Open the file and read the first (and only) line
pointFile = open(pointFilePath, "r")
headerLine = pointFile.readline()

# Make a Python list out of the coordinates. , is the delimiter
valueList = headerLine.split(",")

latValueIndex = valueList.index("lat")
lonValueIndex = valueList.index("lon")
##print latValueIndex
coordList = []
for line in pointFile.readlines():
    segmentedLine = line.split(",")
    coordList.append([segmentedLine[lonValueIndex], segmentedLine[latValueIndex]])
   
print coordList


# This Array object will hold a clockwise "ring" of Point
#  objects, thereby making a polygon.
polygonArray = arcpy.CreateObject("Array")


for line in pointFile.readlines():
    segmentedLine = line.split(",")
    latValue = segmentedLine[latValueIndex]
    #lonValue = segmentedLine[lonValueIndex]


# Loop through each coordinate pair and make a Point object

    currentPoint = arcpy.CreateObject("Point")
    currentPoint.X = lonValue # X coordinate
    currentPoint.Y = latValue # Y coordinate

    # Add the newly-created Point to your Array    
    polygonArray.add(currentPoint)
    polygonArray.append([segmentedLine[latValueIndex]])

print polygonArray
arcpy.AddMessage(polygonArray)

Time: Wednesday April 11, 2012 at 4:52 am
IP Address: 203.199.47.172
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:105:"From: manli <cmanli24@gmail.com>
Reply-To: cmanli24@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Syed Arshad - 2012-04-24 12:05:18</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=646</link>
  <pubDate>Tue, 24 Apr 2012 19:05:18 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=646</guid>
  <description/>
  <content:encoded><![CDATA[Hello Bob,

My name is Syed, and I'm reaching out to you in regards to a Ruby on Rails developer role with my direct client in Chandler, AZ. I came across your profile on LInkedin, and thought I should reach you out here. The project deals a lot with web development on Ruby, and also experience with HTML5 and web services such as JavaScript, JQuery and Ajax are mandatory. 

If interested, please reach out to me at 877-861-8347 EXT 3023 so we can chat more about this in details.

Best,

Syed Arshad, Technical Recruiter
Volt Technical Resources
<!--more-->
AUTHOR: Syed Arshad
AUTHOR EMAIL: starshad@volt.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 198.246.22.251
Array
(
    [Name] =&gt; Syed Arshad
    [Email] =&gt; starshad@volt.com
    [Website] =&gt; 
    [Comment] =&gt; Hello Bob,

My name is Syed, and I'm reaching out to you in regards to a Ruby on Rails developer role with my direct client in Chandler, AZ. I came across your profile on LInkedin, and thought I should reach you out here. The project deals a lot with web development on Ruby, and also experience with HTML5 and web services such as JavaScript, JQuery and Ajax are mandatory. 

If interested, please reach out to me at 877-861-8347 EXT 3023 so we can chat more about this in details.

Best,

Syed Arshad, Technical Recruiter
Volt Technical Resources

)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>646</wp:post_id>
  <wp:post_date>2012-04-24 12:05:18</wp:post_date>
  <wp:post_date_gmt>2012-04-24 19:05:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>528a1640540a7dc7318811c784537d58</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:11:"Syed Arshad";s:5:"Email";s:17:"starshad@volt.com";s:7:"Website";s:0:"";s:7:"Comment";s:559:"Hello Bob,

My name is Syed, and I'm reaching out to you in regards to a Ruby on Rails developer role with my direct client in Chandler, AZ. I came across your profile on LInkedin, and thought I should reach you out here. The project deals a lot with web development on Ruby, and also experience with HTML5 and web services such as JavaScript, JQuery and Ajax are mandatory. 

If interested, please reach out to me at 877-861-8347 EXT 3023 so we can chat more about this in details.

Best,

Syed Arshad, Technical Recruiter
Volt Technical Resources
";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[198.246.22.251]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Syed Arshad]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[starshad@volt.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:772:"Name: Syed Arshad
Email: starshad@volt.com
Comment: Hello Bob,

My name is Syed, and I'm reaching out to you in regards to a Ruby on Rails developer role with my direct client in Chandler, AZ. I came across your profile on LInkedin, and thought I should reach you out here. The project deals a lot with web development on Ruby, and also experience with HTML5 and web services such as JavaScript, JQuery and Ajax are mandatory. 

If interested, please reach out to me at 877-861-8347 EXT 3023 so we can chat more about this in details.

Best,

Syed Arshad, Technical Recruiter
Volt Technical Resources

Time: Tuesday April 24, 2012 at 12:05 pm
IP Address: 198.246.22.251
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:109:"From: Syed Arshad <starshad@volt.com>
Reply-To: starshad@volt.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ryan Murphy - 2012-04-26 09:21:44</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=647</link>
  <pubDate>Thu, 26 Apr 2012 16:21:44 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=647</guid>
  <description/>
  <content:encoded><![CDATA[Do you have any referrals for RoR developers? I have a contract in Phoenix for a RoR developer. I can pay a referral bonus. Thank you. My cell number is 480-652-6690.
<!--more-->
AUTHOR: Ryan Murphy
AUTHOR EMAIL: ryan.murphy@yoh.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 98.172.91.149
Array
(
    [Name] =&gt; Ryan Murphy
    [Email] =&gt; ryan.murphy@yoh.com
    [Website] =&gt; 
    [Comment] =&gt; Do you have any referrals for RoR developers? I have a contract in Phoenix for a RoR developer. I can pay a referral bonus. Thank you. My cell number is 480-652-6690. 
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>647</wp:post_id>
  <wp:post_date>2012-04-26 09:21:44</wp:post_date>
  <wp:post_date_gmt>2012-04-26 16:21:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>b82a40ead1333fa88ad8328b7f0db629</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ryan Murphy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[ryan.murphy@yoh.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[98.172.91.149]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:11:"Ryan Murphy";s:5:"Email";s:19:"ryan.murphy@yoh.com";s:7:"Website";s:0:"";s:7:"Comment";s:167:"Do you have any referrals for RoR developers? I have a contract in Phoenix for a RoR developer. I can pay a referral bonus. Thank you. My cell number is 480-652-6690. ";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:382:"Name: Ryan Murphy
Email: ryan.murphy@yoh.com
Comment: Do you have any referrals for RoR developers? I have a contract in Phoenix for a RoR developer. I can pay a referral bonus. Thank you. My cell number is 480-652-6690.

Time: Thursday April 26, 2012 at 9:21 am
IP Address: 98.172.91.149
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:113:"From: Ryan Murphy <ryan.murphy@yoh.com>
Reply-To: ryan.murphy@yoh.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Steve - 2012-04-28 07:41:43</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=654</link>
  <pubDate>Sat, 28 Apr 2012 14:41:43 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=654</guid>
  <description/>
  <content:encoded><![CDATA[Hi,
We're a couple of developers in Toronto at the planning stages of setting up a web developer collective. We'd love to talk to you guys and find out more about how you guys are doing it.
<!--more-->
AUTHOR: Steve
AUTHOR EMAIL: Philosopher.Dog@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 70.54.238.82
Array
(
    [Name] =&gt; Steve
    [Email] =&gt; Philosopher.Dog@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; Hi,
We're a couple of developers in Toronto at the planning stages of setting up a web developer collective. We'd love to talk to you guys and find out more about how you guys are doing it. 
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>654</wp:post_id>
  <wp:post_date>2012-04-28 07:41:43</wp:post_date>
  <wp:post_date_gmt>2012-04-28 14:41:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>40d5a9bc2e3cdd5a00513f5d1e938c40</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Steve]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[Philosopher.Dog@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[70.54.238.82]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:5:"Steve";s:5:"Email";s:25:"Philosopher.Dog@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:191:"Hi,
We're a couple of developers in Toronto at the planning stages of setting up a web developer collective. We'd love to talk to you guys and find out more about how you guys are doing it. ";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:405:"Name: Steve
Email: Philosopher.Dog@gmail.com
Comment: Hi,
We're a couple of developers in Toronto at the planning stages of setting up a web developer collective. We'd love to talk to you guys and find out more about how you guys are doing it.

Time: Saturday April 28, 2012 at 7:41 am
IP Address: 70.54.238.82
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:119:"From: Steve <Philosopher.Dog@gmail.com>
Reply-To: Philosopher.Dog@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>S Narayanan - 2012-05-24 05:08:40</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=670</link>
  <pubDate>Thu, 24 May 2012 12:08:40 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=670</guid>
  <description/>
  <content:encoded><![CDATA[Hi Bob,

I hope your doing well.

I am Narayanan from Marlabs, Inc. 

We are presently looking for Sr Ruby on Rails Developers for multiple locations across USA.

As I have noticed your profile in LinkedIn.com, your profile is matching exactly the same as per the requirements.

Please forward the updated resume as well as contact details for quick processing of the profile.

You can forward resume at: narayanan.subramanian@marlabs.com

You can also please let me know any references – friends / colleagues, who will be interested to work for the position.

I am looking forward your response.

Thanks &amp; Take care.
 
Best Regards,
S Narayanan
Marlabs Inc
<!--more-->
AUTHOR: S Narayanan
AUTHOR EMAIL: narayanan.subramanian@marlabs.com
AUTHOR URL: http://narayanan.subramanian@marlabs.com
SUBJECT: Email from Blog
IP: 121.243.86.14
Array
(
    [Name] =&gt; S Narayanan
    [Email] =&gt; narayanan.subramanian@marlabs.com
    [Website] =&gt; narayanan.subramanian@marlabs.com
    [Comment] =&gt; Hi Bob,

I hope your doing well.

I am Narayanan from Marlabs, Inc. 

We are presently looking for Sr Ruby on Rails Developers for multiple locations across USA.

As I have noticed your profile in LinkedIn.com, your profile is matching exactly the same as per the requirements.

Please forward the updated resume as well as contact details for quick processing of the profile.

You can forward resume at: narayanan.subramanian@marlabs.com

You can also please let me know any references – friends / colleagues, who will be interested to work for the position.

I am looking forward your response.

Thanks &amp; Take care.
 
Best Regards,
S Narayanan
Marlabs Inc
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>670</wp:post_id>
  <wp:post_date>2012-05-24 05:08:40</wp:post_date>
  <wp:post_date_gmt>2012-05-24 12:08:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ff695725b4ddf696e8cfc5f26677664f</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[S Narayanan]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[narayanan.subramanian@marlabs.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://narayanan.subramanian@marlabs.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[121.243.86.14]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:11:"S Narayanan";s:5:"Email";s:33:"narayanan.subramanian@marlabs.com";s:7:"Website";s:33:"narayanan.subramanian@marlabs.com";s:7:"Comment";s:685:"Hi Bob,

I hope your doing well.

I am Narayanan from Marlabs, Inc. 

We are presently looking for Sr Ruby on Rails Developers for multiple locations across USA.

As I have noticed your profile in LinkedIn.com, your profile is matching exactly the same as per the requirements.

Please forward the updated resume as well as contact details for quick processing of the profile.

You can forward resume at: narayanan.subramanian@marlabs.com

You can also please let me know any references – friends / colleagues, who will be interested to work for the position.

I am looking forward your response.

Thanks &amp; Take care.
 
Best Regards,
S Narayanan
Marlabs Inc";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:963:"Name: S Narayanan
Email: narayanan.subramanian@marlabs.com
Website: http://narayanan.subramanian@marlabs.com
Comment: Hi Bob,

I hope your doing well.

I am Narayanan from Marlabs, Inc. 

We are presently looking for Sr Ruby on Rails Developers for multiple locations across USA.

As I have noticed your profile in LinkedIn.com, your profile is matching exactly the same as per the requirements.

Please forward the updated resume as well as contact details for quick processing of the profile.

You can forward resume at: narayanan.subramanian@marlabs.com

You can also please let me know any references – friends / colleagues, who will be interested to work for the position.

I am looking forward your response.

Thanks &amp; Take care.
 
Best Regards,
S Narayanan
Marlabs Inc

Time: Thursday May 24, 2012 at 5:08 am
IP Address: 121.243.86.14
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:141:"From: S Narayanan <narayanan.subramanian@marlabs.com>
Reply-To: narayanan.subramanian@marlabs.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Andrew Zimba - 2012-05-30 07:27:40</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=671</link>
  <pubDate>Wed, 30 May 2012 14:27:40 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=671</guid>
  <description/>
  <content:encoded><![CDATA[Hi, I'm hoping you can help me out.  I am looking to export all the layers in a given mxd, determine if they are point/line/poly features, and if so, export them as shapefiles to a new directory.  I would like to include ONLY the .shp, .shx, .dbf, and .prj components of the shapefile if possible.
<!--more-->
AUTHOR: Andrew Zimba
AUTHOR EMAIL: andrew.zimba@hdrinc.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 199.168.243.252
Array
(
    [Name] =&gt; Andrew Zimba
    [Email] =&gt; andrew.zimba@hdrinc.com
    [Website] =&gt; 
    [Comment] =&gt; Hi, I'm hoping you can help me out.  I am looking to export all the layers in a given mxd, determine if they are point/line/poly features, and if so, export them as shapefiles to a new directory.  I would like to include ONLY the .shp, .shx, .dbf, and .prj components of the shapefile if possible.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>671</wp:post_id>
  <wp:post_date>2012-05-30 07:27:40</wp:post_date>
  <wp:post_date_gmt>2012-05-30 14:27:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>db166cf8910a7a88d95cc08dbcc6b40e</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Andrew Zimba]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[andrew.zimba@hdrinc.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[199.168.243.252]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:12:"Andrew Zimba";s:5:"Email";s:23:"andrew.zimba@hdrinc.com";s:7:"Website";s:0:"";s:7:"Comment";s:297:"Hi, I'm hoping you can help me out.  I am looking to export all the layers in a given mxd, determine if they are point/line/poly features, and if so, export them as shapefiles to a new directory.  I would like to include ONLY the .shp, .shx, .dbf, and .prj components of the shapefile if possible.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:519:"Name: Andrew Zimba
Email: andrew.zimba@hdrinc.com
Comment: Hi, I'm hoping you can help me out.  I am looking to export all the layers in a given mxd, determine if they are point/line/poly features, and if so, export them as shapefiles to a new directory.  I would like to include ONLY the .shp, .shx, .dbf, and .prj components of the shapefile if possible.

Time: Wednesday May 30, 2012 at 7:27 am
IP Address: 199.168.243.252
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:122:"From: Andrew Zimba <andrew.zimba@hdrinc.com>
Reply-To: andrew.zimba@hdrinc.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Giovanni Palombi - 2012-06-02 06:27:35</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=672</link>
  <pubDate>Sat, 02 Jun 2012 13:27:35 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=672</guid>
  <description/>
  <content:encoded><![CDATA[Good Evening,

Excuse me if i disturb You.

We are launching a new portal site, it's a marketplace for people who works in Information and Telecommunication Technology, you can see it at http://www.devstaff.biz , it's completelly free and registrations are open now!

We start to fill profiles right now and we will distribute  to our customers (Ericsson, Telecom Italia). It will be reserved only to consultants and companies who works in ICT. 

We prefer only specialized profiles and we don't send money only presenting people one to another, for this reason registration and use of our portal will be completelly free.

The portal site is "skill focused" and it will give to users many tools to complete their daily activities; there are videoconference tools (for meetings and interviews),  project management tool and much more... These tools are completelly free!!

Please, say to every people that you know us, just remember DevStaff portal is reserved to consultants and companies who works in ICT.

Send us any kind of suggestion or troubleshoot (also language mistakes and items to add in know how page), you should see in portal site using link positioned in bottom part of every portal page.

I know that You can hink this is SPAM, but believe me, really is not spam, we are really finding ICT people contacts to give to our customers.

Thank You and excuse me again if i've disturbed You
Giovanni Palombi

RadLab S.r.l.
Amministratore Unico
Via Cetteo Ciglia, 54
65128 Pescara (PE)
Italy
E-Mail: giovanni.palombi@radlab.it
Website: http://www.devstaff.biz
<!--more-->
AUTHOR: Giovanni Palombi
AUTHOR EMAIL: giovanni.palombi@radlab.it
AUTHOR URL: http://www.devstaff.biz
SUBJECT: Email from Blog
IP: 79.23.221.129
Array
(
    [Name] =&gt; Giovanni Palombi
    [Email] =&gt; giovanni.palombi@radlab.it
    [Website] =&gt; www.devstaff.biz
    [Comment] =&gt; Good Evening,

Excuse me if i disturb You.

We are launching a new portal site, it's a marketplace for people who works in Information and Telecommunication Technology, you can see it at http://www.devstaff.biz , it's completelly free and registrations are open now!

We start to fill profiles right now and we will distribute  to our customers (Ericsson, Telecom Italia). It will be reserved only to consultants and companies who works in ICT. 

We prefer only specialized profiles and we don't send money only presenting people one to another, for this reason registration and use of our portal will be completelly free.

The portal site is "skill focused" and it will give to users many tools to complete their daily activities; there are videoconference tools (for meetings and interviews),  project management tool and much more... These tools are completelly free!!

Please, say to every people that you know us, just remember DevStaff portal is reserved to consultants and companies who works in ICT.

Send us any kind of suggestion or troubleshoot (also language mistakes and items to add in know how page), you should see in portal site using link positioned in bottom part of every portal page.

I know that You can hink this is SPAM, but believe me, really is not spam, we are really finding ICT people contacts to give to our customers.

Thank You and excuse me again if i've disturbed You
Giovanni Palombi

RadLab S.r.l.
Amministratore Unico
Via Cetteo Ciglia, 54
65128 Pescara (PE)
Italy
E-Mail: giovanni.palombi@radlab.it
Website: http://www.devstaff.biz
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>672</wp:post_id>
  <wp:post_date>2012-06-02 06:27:35</wp:post_date>
  <wp:post_date_gmt>2012-06-02 13:27:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>16ddf08e6f7562059699253bbe7355f0</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Giovanni Palombi]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[giovanni.palombi@radlab.it]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.devstaff.biz]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[79.23.221.129]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:16:"Giovanni Palombi";s:5:"Email";s:26:"giovanni.palombi@radlab.it";s:7:"Website";s:16:"www.devstaff.biz";s:7:"Comment";s:1596:"Good Evening,

Excuse me if i disturb You.

We are launching a new portal site, it's a marketplace for people who works in Information and Telecommunication Technology, you can see it at http://www.devstaff.biz , it's completelly free and registrations are open now!

We start to fill profiles right now and we will distribute  to our customers (Ericsson, Telecom Italia). It will be reserved only to consultants and companies who works in ICT. 

We prefer only specialized profiles and we don't send money only presenting people one to another, for this reason registration and use of our portal will be completelly free.

The portal site is "skill focused" and it will give to users many tools to complete their daily activities; there are videoconference tools (for meetings and interviews),  project management tool and much more... These tools are completelly free!!

Please, say to every people that you know us, just remember DevStaff portal is reserved to consultants and companies who works in ICT.

Send us any kind of suggestion or troubleshoot (also language mistakes and items to add in know how page), you should see in portal site using link positioned in bottom part of every portal page.

I know that You can hink this is SPAM, but believe me, really is not spam, we are really finding ICT people contacts to give to our customers.

Thank You and excuse me again if i've disturbed You
Giovanni Palombi

RadLab S.r.l.
Amministratore Unico
Via Cetteo Ciglia, 54
65128 Pescara (PE)
Italy
E-Mail: giovanni.palombi@radlab.it
Website: http://www.devstaff.biz";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:1855:"Name: Giovanni Palombi
Email: giovanni.palombi@radlab.it
Website: http://www.devstaff.biz
Comment: Good Evening,

Excuse me if i disturb You.

We are launching a new portal site, it's a marketplace for people who works in Information and Telecommunication Technology, you can see it at http://www.devstaff.biz , it's completelly free and registrations are open now!

We start to fill profiles right now and we will distribute  to our customers (Ericsson, Telecom Italia). It will be reserved only to consultants and companies who works in ICT. 

We prefer only specialized profiles and we don't send money only presenting people one to another, for this reason registration and use of our portal will be completelly free.

The portal site is "skill focused" and it will give to users many tools to complete their daily activities; there are videoconference tools (for meetings and interviews),  project management tool and much more... These tools are completelly free!!

Please, say to every people that you know us, just remember DevStaff portal is reserved to consultants and companies who works in ICT.

Send us any kind of suggestion or troubleshoot (also language mistakes and items to add in know how page), you should see in portal site using link positioned in bottom part of every portal page.

I know that You can hink this is SPAM, but believe me, really is not spam, we are really finding ICT people contacts to give to our customers.

Thank You and excuse me again if i've disturbed You
Giovanni Palombi

RadLab S.r.l.
Amministratore Unico
Via Cetteo Ciglia, 54
65128 Pescara (PE)
Italy
E-Mail: giovanni.palombi@radlab.it
Website: http://www.devstaff.biz

Time: Saturday June 2, 2012 at 6:27 am
IP Address: 79.23.221.129
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:132:"From: Giovanni Palombi <giovanni.palombi@radlab.it>
Reply-To: giovanni.palombi@radlab.it
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>amy - 2012-06-06 10:48:04</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=673</link>
  <pubDate>Wed, 06 Jun 2012 17:48:04 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=673</guid>
  <description/>
  <content:encoded><![CDATA[I have a very established client that is looking to hire a SR Ruby on Rails Developer Scottsdale at a salary range of $80k-$120k based on experience.  If you are interested or know someone who may be, please reach out to me ASAP.

Thank you!
Amy Gill
770-597-1970
agill@corus360.com
<!--more-->
AUTHOR: amy
AUTHOR EMAIL: agill@corus360.com
AUTHOR URL: http://www.corus360.com
SUBJECT: Email from Blog
IP: 72.152.207.202
Array
(
    [Name] =&gt; amy
    [Email] =&gt; agill@corus360.com
    [Website] =&gt; www.corus360.com
    [Comment] =&gt; I have a very established client that is looking to hire a SR Ruby on Rails Developer Scottsdale at a salary range of $80k-$120k based on experience.  If you are interested or know someone who may be, please reach out to me ASAP.

Thank you!
Amy Gill
770-597-1970
agill@corus360.com
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>673</wp:post_id>
  <wp:post_date>2012-06-06 10:48:04</wp:post_date>
  <wp:post_date_gmt>2012-06-06 17:48:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>8d22b45515d5d3a9a89d5dda22ff1e9c</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[amy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[agill@corus360.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.corus360.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[72.152.207.202]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:3:"amy";s:5:"Email";s:18:"agill@corus360.com";s:7:"Website";s:16:"www.corus360.com";s:7:"Comment";s:287:"I have a very established client that is looking to hire a SR Ruby on Rails Developer Scottsdale at a salary range of $80k-$120k based on experience.  If you are interested or know someone who may be, please reach out to me ASAP.

Thank you!
Amy Gill
770-597-1970
agill@corus360.com";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:528:"Name: amy
Email: agill@corus360.com
Website: http://www.corus360.com
Comment: I have a very established client that is looking to hire a SR Ruby on Rails Developer Scottsdale at a salary range of $80k-$120k based on experience.  If you are interested or know someone who may be, please reach out to me ASAP.

Thank you!
Amy Gill
770-597-1970
agill@corus360.com

Time: Wednesday June 6, 2012 at 10:48 am
IP Address: 72.152.207.202
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:103:"From: amy <agill@corus360.com>
Reply-To: agill@corus360.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Bhanu prasad madala - 2012-06-24 21:37:24</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=677</link>
  <pubDate>Mon, 25 Jun 2012 04:37:24 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=677</guid>
  <description/>
  <content:encoded><![CDATA[Hi,


I am Bhanu Prasad madala and this is my profile http://in.linkedin.com/in/prasadb .


I have a small software shop where we develop web applications using ruby on rails, node.js and PHP.


We worked with many many start ups and also for big companies and also we worked with many companies under white label agreement.


I saw your services and even we do similar things and we are proficient in backbone.js also.


As you own a small shop  i wanted to find out if you are looking for any new collaborations.


I am interested in partnering with you where we can provide technology for you under white label agreement also.


WE follow rails conventions and we write tests and we get updated ourselves about latest technologies regularly.


Please do let me know if you are interested in this type of collaboration.
.
Thanks,
Bhanu
<!--more-->
AUTHOR: Bhanu prasad madala
AUTHOR EMAIL: bhanuprasad143@gmail.com
AUTHOR URL: http://in.linkedin.com/in/prasadb
SUBJECT: Email from Blog
IP: 124.123.245.181
Array
(
    [Name] =&gt; Bhanu prasad madala
    [Email] =&gt; bhanuprasad143@gmail.com
    [Website] =&gt; http://in.linkedin.com/in/prasadb
    [Comment] =&gt; Hi,


I am Bhanu Prasad madala and this is my profile http://in.linkedin.com/in/prasadb .


I have a small software shop where we develop web applications using ruby on rails, node.js and PHP.


We worked with many many start ups and also for big companies and also we worked with many companies under white label agreement.


I saw your services and even we do similar things and we are proficient in backbone.js also.


As you own a small shop  i wanted to find out if you are looking for any new collaborations.


I am interested in partnering with you where we can provide technology for you under white label agreement also.


WE follow rails conventions and we write tests and we get updated ourselves about latest technologies regularly.


Please do let me know if you are interested in this type of collaboration.
.
Thanks,
Bhanu
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>677</wp:post_id>
  <wp:post_date>2012-06-24 21:37:24</wp:post_date>
  <wp:post_date_gmt>2012-06-25 04:37:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2a0120590990793a9fa187b5eeea5689</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Bhanu prasad madala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[bhanuprasad143@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://in.linkedin.com/in/prasadb]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[124.123.245.181]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:19:"Bhanu prasad madala";s:5:"Email";s:24:"bhanuprasad143@gmail.com";s:7:"Website";s:33:"http://in.linkedin.com/in/prasadb";s:7:"Comment";s:864:"Hi,


I am Bhanu Prasad madala and this is my profile http://in.linkedin.com/in/prasadb .


I have a small software shop where we develop web applications using ruby on rails, node.js and PHP.


We worked with many many start ups and also for big companies and also we worked with many companies under white label agreement.


I saw your services and even we do similar things and we are proficient in backbone.js also.


As you own a small shop  i wanted to find out if you are looking for any new collaborations.


I am interested in partnering with you where we can provide technology for you under white label agreement also.


WE follow rails conventions and we write tests and we get updated ourselves about latest technologies regularly.


Please do let me know if you are interested in this type of collaboration.
.
Thanks,
Bhanu";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:1135:"Name: Bhanu prasad madala
Email: bhanuprasad143@gmail.com
Website: http://in.linkedin.com/in/prasadb
Comment: Hi,


I am Bhanu Prasad madala and this is my profile http://in.linkedin.com/in/prasadb .


I have a small software shop where we develop web applications using ruby on rails, node.js and PHP.


We worked with many many start ups and also for big companies and also we worked with many companies under white label agreement.


I saw your services and even we do similar things and we are proficient in backbone.js also.


As you own a small shop  i wanted to find out if you are looking for any new collaborations.


I am interested in partnering with you where we can provide technology for you under white label agreement also.


WE follow rails conventions and we write tests and we get updated ourselves about latest technologies regularly.


Please do let me know if you are interested in this type of collaboration.
.
Thanks,
Bhanu

Time: Sunday June 24, 2012 at 9:37 pm
IP Address: 124.123.245.181
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:131:"From: Bhanu prasad madala <bhanuprasad143@gmail.com>
Reply-To: bhanuprasad143@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Eric Posner - 2012-06-29 13:18:40</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=680</link>
  <pubDate>Fri, 29 Jun 2012 20:18:40 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=680</guid>
  <description/>
  <content:encoded><![CDATA[Hi Bob,
I connected with Rick Carlino and he mentioned you may be seeking a RoR Developer opportunity, after your current project is completed. I am working on a Direct Hire Sr RoR Developer position here in the Phx area. Will you be looking after the project is completed? Or do you know anyone looking?

Thanks for your time.
<!--more-->
AUTHOR: Eric Posner
AUTHOR EMAIL: eric@aztechfinders.com
AUTHOR URL: http://www.aztechfinders.com
SUBJECT: Email from Blog
IP: 70.166.97.181
Array
(
    [Name] =&gt; Eric Posner
    [Email] =&gt; eric@aztechfinders.com
    [Website] =&gt; www.aztechfinders.com
    [Comment] =&gt; Hi Bob,
I connected with Rick Carlino and he mentioned you may be seeking a RoR Developer opportunity, after your current project is completed. I am working on a Direct Hire Sr RoR Developer position here in the Phx area. Will you be looking after the project is completed? Or do you know anyone looking?

Thanks for your time.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>680</wp:post_id>
  <wp:post_date>2012-06-29 13:18:40</wp:post_date>
  <wp:post_date_gmt>2012-06-29 20:18:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>c2e81691ce9bec4c470e5ced943cb2c8</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Eric Posner]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[eric@aztechfinders.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.aztechfinders.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[70.166.97.181]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:11:"Eric Posner";s:5:"Email";s:22:"eric@aztechfinders.com";s:7:"Website";s:21:"www.aztechfinders.com";s:7:"Comment";s:330:"Hi Bob,
I connected with Rick Carlino and he mentioned you may be seeking a RoR Developer opportunity, after your current project is completed. I am working on a Direct Hire Sr RoR Developer position here in the Phx area. Will you be looking after the project is completed? Or do you know anyone looking?

Thanks for your time.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:584:"Name: Eric Posner
Email: eric@aztechfinders.com
Website: http://www.aztechfinders.com
Comment: Hi Bob,
I connected with Rick Carlino and he mentioned you may be seeking a RoR Developer opportunity, after your current project is completed. I am working on a Direct Hire Sr RoR Developer position here in the Phx area. Will you be looking after the project is completed? Or do you know anyone looking?

Thanks for your time.

Time: Friday June 29, 2012 at 1:18 pm
IP Address: 70.166.97.181
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:119:"From: Eric Posner <eric@aztechfinders.com>
Reply-To: eric@aztechfinders.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ahmed Shams - 2012-07-10 16:11:01</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=684</link>
  <pubDate>Tue, 10 Jul 2012 23:11:01 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=684</guid>
  <description/>
  <content:encoded><![CDATA[Need some programming help with my website.  Please contact me to discuss.
<!--more-->
AUTHOR: Ahmed Shams
AUTHOR EMAIL: ahmed@sourceonedental.com
AUTHOR URL: http://108.166.77.239
SUBJECT: Email from Blog
IP: 174.26.154.187
Array
(
    [Name] =&gt; Ahmed Shams
    [Email] =&gt; ahmed@sourceonedental.com
    [Website] =&gt; http://108.166.77.239
    [Comment] =&gt; Need some programming help with my website.  Please contact me to discuss.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>684</wp:post_id>
  <wp:post_date>2012-07-10 16:11:01</wp:post_date>
  <wp:post_date_gmt>2012-07-10 23:11:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>43409859a3895ddabe4e398003569fdb</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ahmed Shams]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[ahmed@sourceonedental.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://108.166.77.239]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[174.26.154.187]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:11:"Ahmed Shams";s:5:"Email";s:25:"ahmed@sourceonedental.com";s:7:"Website";s:21:"http://108.166.77.239";s:7:"Comment";s:74:"Need some programming help with my website.  Please contact me to discuss.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:326:"Name: Ahmed Shams
Email: ahmed@sourceonedental.com
Website: http://108.166.77.239
Comment: Need some programming help with my website.  Please contact me to discuss.

Time: Tuesday July 10, 2012 at 4:11 pm
IP Address: 174.26.154.187
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:125:"From: Ahmed Shams <ahmed@sourceonedental.com>
Reply-To: ahmed@sourceonedental.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Allison Morris - 2012-08-03 08:09:35</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=737</link>
  <pubDate>Fri, 03 Aug 2012 15:09:35 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=737</guid>
  <description/>
  <content:encoded><![CDATA[Hi,

I’m reaching out to connect with you about a graphic I helped create which takes a look into the success and failure of startups.

I came across this post on your site: http://bob-roberts.net/2012/02/17/successful-entrepreneur-in-az/ and given that you might have an interest, I thought it’d be a great fit and wanted to see if you’d be interested in taking a look at the piece. If so, let me know and I’d love to pass it along!

Thanks,
Allison M.
<!--more-->
AUTHOR: Allison Morris
AUTHOR EMAIL: allison.morris85@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 121.96.61.130
Array
(
    [Name] =&gt; Allison Morris
    [Email] =&gt; allison.morris85@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; Hi,

I’m reaching out to connect with you about a graphic I helped create which takes a look into the success and failure of startups.

I came across this post on your site: http://bob-roberts.net/2012/02/17/successful-entrepreneur-in-az/ and given that you might have an interest, I thought it’d be a great fit and wanted to see if you’d be interested in taking a look at the piece. If so, let me know and I’d love to pass it along!

Thanks,
Allison M.

)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>737</wp:post_id>
  <wp:post_date>2012-08-03 08:09:35</wp:post_date>
  <wp:post_date_gmt>2012-08-03 15:09:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>6de9fe63351f497184dfe88029584e89</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[allison.morris85@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Allison Morris]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[121.96.61.130]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:14:"Allison Morris";s:5:"Email";s:26:"allison.morris85@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:470:"Hi,

I’m reaching out to connect with you about a graphic I helped create which takes a look into the success and failure of startups.

I came across this post on your site: http://bob-roberts.net/2012/02/17/successful-entrepreneur-in-az/ and given that you might have an interest, I thought it’d be a great fit and wanted to see if you’d be interested in taking a look at the piece. If so, let me know and I’d love to pass it along!

Thanks,
Allison M.
";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:692:"Name: Allison Morris
Email: allison.morris85@gmail.com
Comment: Hi,

I’m reaching out to connect with you about a graphic I helped create which takes a look into the success and failure of startups.

I came across this post on your site: http://bob-roberts.net/2012/02/17/successful-entrepreneur-in-az/ and given that you might have an interest, I thought it’d be a great fit and wanted to see if you’d be interested in taking a look at the piece. If so, let me know and I’d love to pass it along!

Thanks,
Allison M.

Time: Friday August 3, 2012 at 8:09 am
IP Address: 121.96.61.130
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:130:"From: Allison Morris <allison.morris85@gmail.com>
Reply-To: allison.morris85@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>octocat</title>
  <link>http://bob-roberts.net/octocat/</link>
  <pubDate>Thu, 06 Sep 2012 20:13:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2012/09/octocat.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>773</wp:post_id>
  <wp:post_date>2012-09-06 13:13:14</wp:post_date>
  <wp:post_date_gmt>2012-09-06 20:13:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>octocat</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2012/09/octocat.jpeg</wp:attachment_url>
</item>
<item>
  <title>Jen - 2012-09-19 09:46:31</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=809</link>
  <pubDate>Wed, 19 Sep 2012 16:46:31 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=809</guid>
  <description/>
  <content:encoded><![CDATA[Hi,
The company I work for is looking to make some changes to the website and I am wondering if you would be interested.
Thanks
Jen
<!--more-->
AUTHOR: Jen
AUTHOR EMAIL: jen@garagefloorcoating.com
AUTHOR URL: http://www.garagefloorcoating.com
SUBJECT: Email from Blog
IP: 184.183.14.212
Array
(
    [Name] =&gt; Jen
    [Email] =&gt; jen@garagefloorcoating.com
    [Website] =&gt; www.garagefloorcoating.com
    [Comment] =&gt; Hi,
The company I work for is looking to make some changes to the website and I am wondering if you would be interested.
Thanks
Jen
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>809</wp:post_id>
  <wp:post_date>2012-09-19 09:46:31</wp:post_date>
  <wp:post_date_gmt>2012-09-19 16:46:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>e2d4e5bf9e89b78d2a086366563bb93d</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Jen]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[jen@garagefloorcoating.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.garagefloorcoating.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[184.183.14.212]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:3:"Jen";s:5:"Email";s:26:"jen@garagefloorcoating.com";s:7:"Website";s:26:"www.garagefloorcoating.com";s:7:"Comment";s:134:"Hi,
The company I work for is looking to make some changes to the website and I am wondering if you would be interested.
Thanks
Jen";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:398:"Name: Jen
Email: jen@garagefloorcoating.com
Website: http://www.garagefloorcoating.com
Comment: Hi,
The company I work for is looking to make some changes to the website and I am wondering if you would be interested.
Thanks
Jen

Time: Wednesday September 19, 2012 at 9:46 am
IP Address: 184.183.14.212
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:119:"From: Jen <jen@garagefloorcoating.com>
Reply-To: jen@garagefloorcoating.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ann - 2012-10-09 08:52:22</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=823</link>
  <pubDate>Tue, 09 Oct 2012 15:52:22 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=823</guid>
  <description/>
  <content:encoded><![CDATA[Your posts are really helpful in jumpstarting python. Thanks for the same.
Can you please help me with a python/geocoding question. I am trying to write a code which will take street address as user input and write it to a dbf file. How can I write it in python?

Thanks in advance
-Ann
<!--more-->
AUTHOR: Ann
AUTHOR EMAIL: ann.crystal@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 76.7.95.112
Array
(
    [Name] =&gt; Ann
    [Email] =&gt; ann.crystal@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; Your posts are really helpful in jumpstarting python. Thanks for the same.
Can you please help me with a python/geocoding question. I am trying to write a code which will take street address as user input and write it to a dbf file. How can I write it in python?

Thanks in advance
-Ann
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>823</wp:post_id>
  <wp:post_date>2012-10-09 08:52:22</wp:post_date>
  <wp:post_date_gmt>2012-10-09 15:52:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>c7462651a268fc70483df346e61bb91d</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[ann.crystal@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ann]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[76.7.95.112]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:3:"Ann";s:5:"Email";s:21:"ann.crystal@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:290:"Your posts are really helpful in jumpstarting python. Thanks for the same.
Can you please help me with a python/geocoding question. I am trying to write a code which will take street address as user input and write it to a dbf file. How can I write it in python?

Thanks in advance
-Ann";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:498:"Name: Ann
Email: ann.crystal@gmail.com
Comment: Your posts are really helpful in jumpstarting python. Thanks for the same.
Can you please help me with a python/geocoding question. I am trying to write a code which will take street address as user input and write it to a dbf file. How can I write it in python?

Thanks in advance
-Ann

Time: Tuesday October 9, 2012 at 8:52 am
IP Address: 76.7.95.112
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:109:"From: Ann <ann.crystal@gmail.com>
Reply-To: ann.crystal@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ricky Ricardo - 2012-10-22 22:20:00</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=839</link>
  <pubDate>Tue, 23 Oct 2012 05:20:00 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=839</guid>
  <description/>
  <content:encoded><![CDATA[What's going on over here!?
<!--more-->
AUTHOR: Ricky Ricardo
AUTHOR EMAIL: rick.carlino@gmail.com
AUTHOR URL: http://rickcarlino.com
SUBJECT: Email from Blog
IP: 165.132.5.4
Array
(
    [Name] =&gt; Ricky Ricardo
    [Email] =&gt; rick.carlino@gmail.com
    [Website] =&gt; rickcarlino.com
    [Comment] =&gt; What's going on over here!?
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>839</wp:post_id>
  <wp:post_date>2012-10-22 22:20:00</wp:post_date>
  <wp:post_date_gmt>2012-10-23 05:20:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>9cd1004a47fff1016b2872fac32b0b1b</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Ricky Ricardo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[rick.carlino@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://rickcarlino.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[165.132.5.4]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:13:"Ricky Ricardo";s:5:"Email";s:22:"rick.carlino@gmail.com";s:7:"Website";s:15:"rickcarlino.com";s:7:"Comment";s:27:"What's going on over here!?";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:279:"Name: Ricky Ricardo
Email: rick.carlino@gmail.com
Website: http://rickcarlino.com
Comment: What's going on over here!?

Time: Monday October 22, 2012 at 10:20 pm
IP Address: 165.132.5.4
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:121:"From: Ricky Ricardo <rick.carlino@gmail.com>
Reply-To: rick.carlino@gmail.com
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Matt Rantala - 2012-11-15 16:58:55</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=851</link>
  <pubDate>Thu, 15 Nov 2012 23:58:55 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=851</guid>
  <description/>
  <content:encoded><![CDATA[Bob,

I've been following your blog for a couple years and we had an email conversation a few years ago when you were working for the garbage truck routing company.

I was wondering if you could provide me with a ball park idea of what that software costs.  I work for a company that has an AVL product ( http://eliteextra.com ) that has been mostly used for the delivery of auto parts, it uses cell phones to provide location data.

We have steered away from the garbage collection/high density type industries because of all the routing requirements involved and it just didn't fit our product.

We just saw an RFP for a smaller city that is looking for something for use in their vehicles that does fit our product--their not looking for something to create new routes, just track their vehicles. We are considering pursuing this opportunity but are think we would only be competitive if our price is lower than the software provided by companies such as your former employer. 

So that is what I'm just curious about. The specific city in question has 10 garbage trucks and one dispatcher.

If you had any idea what the software might cost from a vendor like the one you use to work for, I would appreciate any info you could provide.

And, just to be fair, our base price starts around $25/month per vehicle.

Thanks again, and sounds like you're enjoying your new gig.

Matt (http://nodedangles.wordpress.com)
<!--more-->
AUTHOR: Matt Rantala
AUTHOR EMAIL: mrantala@adc4gis.com
AUTHOR URL: http://nodedangles.wordpress.com
SUBJECT: Email from Blog
IP: 66.103.170.238
Array
(
    [Name] =&gt; Matt Rantala
    [Email] =&gt; mrantala@adc4gis.com
    [Website] =&gt; http://nodedangles.wordpress.com
    [Comment] =&gt; Bob,

I've been following your blog for a couple years and we had an email conversation a few years ago when you were working for the garbage truck routing company.

I was wondering if you could provide me with a ball park idea of what that software costs.  I work for a company that has an AVL product ( http://eliteextra.com ) that has been mostly used for the delivery of auto parts, it uses cell phones to provide location data.

We have steered away from the garbage collection/high density type industries because of all the routing requirements involved and it just didn't fit our product.

We just saw an RFP for a smaller city that is looking for something for use in their vehicles that does fit our product--their not looking for something to create new routes, just track their vehicles. We are considering pursuing this opportunity but are think we would only be competitive if our price is lower than the software provided by companies such as your former employer. 

So that is what I'm just curious about. The specific city in question has 10 garbage trucks and one dispatcher.

If you had any idea what the software might cost from a vendor like the one you use to work for, I would appreciate any info you could provide.

And, just to be fair, our base price starts around $25/month per vehicle.

Thanks again, and sounds like you're enjoying your new gig.

Matt (http://nodedangles.wordpress.com)
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>851</wp:post_id>
  <wp:post_date>2012-11-15 16:58:55</wp:post_date>
  <wp:post_date_gmt>2012-11-15 23:58:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ba6976129dadacc2fcd33ee2b91f6c69</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[66.103.170.238]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://nodedangles.wordpress.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[mrantala@adc4gis.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Matt Rantala]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:12:"Matt Rantala";s:5:"Email";s:20:"mrantala@adc4gis.com";s:7:"Website";s:32:"http://nodedangles.wordpress.com";s:7:"Comment";s:1433:"Bob,

I've been following your blog for a couple years and we had an email conversation a few years ago when you were working for the garbage truck routing company.

I was wondering if you could provide me with a ball park idea of what that software costs.  I work for a company that has an AVL product ( http://eliteextra.com ) that has been mostly used for the delivery of auto parts, it uses cell phones to provide location data.

We have steered away from the garbage collection/high density type industries because of all the routing requirements involved and it just didn't fit our product.

We just saw an RFP for a smaller city that is looking for something for use in their vehicles that does fit our product--their not looking for something to create new routes, just track their vehicles. We are considering pursuing this opportunity but are think we would only be competitive if our price is lower than the software provided by companies such as your former employer. 

So that is what I'm just curious about. The specific city in question has 10 garbage trucks and one dispatcher.

If you had any idea what the software might cost from a vendor like the one you use to work for, I would appreciate any info you could provide.

And, just to be fair, our base price starts around $25/month per vehicle.

Thanks again, and sounds like you're enjoying your new gig.

Matt (http://nodedangles.wordpress.com)";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:1697:"Name: Matt Rantala
Email: mrantala@adc4gis.com
Website: http://nodedangles.wordpress.com
Comment: Bob,

I've been following your blog for a couple years and we had an email conversation a few years ago when you were working for the garbage truck routing company.

I was wondering if you could provide me with a ball park idea of what that software costs.  I work for a company that has an AVL product ( http://eliteextra.com ) that has been mostly used for the delivery of auto parts, it uses cell phones to provide location data.

We have steered away from the garbage collection/high density type industries because of all the routing requirements involved and it just didn't fit our product.

We just saw an RFP for a smaller city that is looking for something for use in their vehicles that does fit our product--their not looking for something to create new routes, just track their vehicles. We are considering pursuing this opportunity but are think we would only be competitive if our price is lower than the software provided by companies such as your former employer. 

So that is what I'm just curious about. The specific city in question has 10 garbage trucks and one dispatcher.

If you had any idea what the software might cost from a vendor like the one you use to work for, I would appreciate any info you could provide.

And, just to be fair, our base price starts around $25/month per vehicle.

Thanks again, and sounds like you're enjoying your new gig.

Matt (http://nodedangles.wordpress.com)

Time: Thursday November 15, 2012 at 4:58 pm
IP Address: 66.103.170.238
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:145:"From: Matt Rantala <wordpress@bobspython.wordpress.com>
Reply-To: Matt Rantala <mrantala@adc4gis.com>
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Screen Shot 2012-11-22 at 5.42.34 PM</title>
  <link>http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/screen-shot-2012-11-22-at-5-42-34-pm/</link>
  <pubDate>Fri, 23 Nov 2012 22:51:32 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2012/11/screen-shot-2012-11-22-at-5-42-34-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>859</wp:post_id>
  <wp:post_date>2012-11-23 15:51:32</wp:post_date>
  <wp:post_date_gmt>2012-11-23 22:51:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2012-11-22-at-5-42-34-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>858</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2012/11/screen-shot-2012-11-22-at-5-42-34-pm.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2012-11-23 at 1.16.58 PM</title>
  <link>http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/screen-shot-2012-11-23-at-1-16-58-pm/</link>
  <pubDate>Fri, 23 Nov 2012 22:52:41 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2012/11/screen-shot-2012-11-23-at-1-16-58-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>860</wp:post_id>
  <wp:post_date>2012-11-23 15:52:41</wp:post_date>
  <wp:post_date_gmt>2012-11-23 22:52:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2012-11-23-at-1-16-58-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>858</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2012/11/screen-shot-2012-11-23-at-1-16-58-pm.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2012-11-22 at 5.42.34 PM</title>
  <link>http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/screen-shot-2012-11-22-at-5-42-34-pm-2/</link>
  <pubDate>Wed, 05 Dec 2012 23:50:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-22-at-5-42-34-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>870</wp:post_id>
  <wp:post_date>2012-12-05 16:50:56</wp:post_date>
  <wp:post_date_gmt>2012-12-05 23:50:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2012-11-22-at-5-42-34-pm-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>858</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-22-at-5-42-34-pm.png</wp:attachment_url>
</item>
<item>
  <title>Screen Shot 2012-11-23 at 1.16.58 PM</title>
  <link>http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/screen-shot-2012-11-23-at-1-16-58-pm-2/</link>
  <pubDate>Wed, 05 Dec 2012 23:51:01 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-23-at-1-16-58-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>871</wp:post_id>
  <wp:post_date>2012-12-05 16:51:01</wp:post_date>
  <wp:post_date_gmt>2012-12-05 23:51:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>screen-shot-2012-11-23-at-1-16-58-pm-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>858</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-23-at-1-16-58-pm.png</wp:attachment_url>
</item>
<item>
  <title>Dyson D' Souza - 2013-04-12 04:31:51</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=975</link>
  <pubDate>Fri, 12 Apr 2013 11:31:51 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=975</guid>
  <description/>
  <content:encoded><![CDATA[Hi

My name is Dyson D' Souza and I work for Packt Publishing, a UK-based publishing company specializing in focused IT books. We have recently published a book on Programming ArcGIS 10.1 with Python Cookbook, and I was wondering if you'd be interested in taking a look at the book and sharing your comments on your blog and on Amazon. 

I'm contacting you because I'm aware that you share good knowledge in the subject this book covers, and so believe that your comments would be important for both consumers and readers alike. I'd be glad to offer you a digital copy of the book if you're interested.

A few details about the book: it composes of 304 pages, learn how to create geoprocessing scripts with ArcPy, automate map production, printing, and the creation of PDF map books, create custom geoprocessing tools that can be shared with others,  customize the ArcGIS Desktop interface with Python add-ons, etc. For more information please click on the link: http://www.packtpub.com/programming-arcgis-10-1-with-python-cookbook/book 

Would be great to hear from you.  Thank you.

Kind regards,

Dyson D' Souza
Marketing Research Executive | Packt Publishing | www.PacktPub.com
Email: dysond@packtpub.com
<!--more-->
AUTHOR: Dyson D' Souza
AUTHOR EMAIL: dysond@packtpub.com
AUTHOR URL: http://www.packtpub.com
SUBJECT: Email from Blog
IP: 122.182.11.42
Array
(
    [Name] =&gt; Dyson D' Souza
    [Email] =&gt; dysond@packtpub.com
    [Website] =&gt; www.packtpub.com
    [Comment] =&gt; Hi

My name is Dyson D' Souza and I work for Packt Publishing, a UK-based publishing company specializing in focused IT books. We have recently published a book on Programming ArcGIS 10.1 with Python Cookbook, and I was wondering if you'd be interested in taking a look at the book and sharing your comments on your blog and on Amazon. 

I'm contacting you because I'm aware that you share good knowledge in the subject this book covers, and so believe that your comments would be important for both consumers and readers alike. I'd be glad to offer you a digital copy of the book if you're interested.

A few details about the book: it composes of 304 pages, learn how to create geoprocessing scripts with ArcPy, automate map production, printing, and the creation of PDF map books, create custom geoprocessing tools that can be shared with others,  customize the ArcGIS Desktop interface with Python add-ons, etc. For more information please click on the link: http://www.packtpub.com/programming-arcgis-10-1-with-python-cookbook/book 

Would be great to hear from you.  Thank you.

Kind regards,

Dyson D' Souza
Marketing Research Executive | Packt Publishing | www.PacktPub.com
Email: dysond@packtpub.com

)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>975</wp:post_id>
  <wp:post_date>2013-04-12 04:31:51</wp:post_date>
  <wp:post_date_gmt>2013-04-12 11:31:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>42c6567944c0d35f653928799d02811b</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Dyson D' Souza]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[dysond@packtpub.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.packtpub.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[122.182.11.42]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:14:"Dyson D' Souza";s:5:"Email";s:19:"dysond@packtpub.com";s:7:"Website";s:16:"www.packtpub.com";s:7:"Comment";s:1224:"Hi

My name is Dyson D' Souza and I work for Packt Publishing, a UK-based publishing company specializing in focused IT books. We have recently published a book on Programming ArcGIS 10.1 with Python Cookbook, and I was wondering if you'd be interested in taking a look at the book and sharing your comments on your blog and on Amazon. 

I'm contacting you because I'm aware that you share good knowledge in the subject this book covers, and so believe that your comments would be important for both consumers and readers alike. I'd be glad to offer you a digital copy of the book if you're interested.

A few details about the book: it composes of 304 pages, learn how to create geoprocessing scripts with ArcPy, automate map production, printing, and the creation of PDF map books, create custom geoprocessing tools that can be shared with others,  customize the ArcGIS Desktop interface with Python add-ons, etc. For more information please click on the link: http://www.packtpub.com/programming-arcgis-10-1-with-python-cookbook/book 

Would be great to hear from you.  Thank you.

Kind regards,

Dyson D' Souza
Marketing Research Executive | Packt Publishing | www.PacktPub.com
Email: dysond@packtpub.com
";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:1472:"Name: Dyson D' Souza
Email: dysond@packtpub.com
Website: http://www.packtpub.com
Comment: Hi

My name is Dyson D' Souza and I work for Packt Publishing, a UK-based publishing company specializing in focused IT books. We have recently published a book on Programming ArcGIS 10.1 with Python Cookbook, and I was wondering if you'd be interested in taking a look at the book and sharing your comments on your blog and on Amazon. 

I'm contacting you because I'm aware that you share good knowledge in the subject this book covers, and so believe that your comments would be important for both consumers and readers alike. I'd be glad to offer you a digital copy of the book if you're interested.

A few details about the book: it composes of 304 pages, learn how to create geoprocessing scripts with ArcPy, automate map production, printing, and the creation of PDF map books, create custom geoprocessing tools that can be shared with others,  customize the ArcGIS Desktop interface with Python add-ons, etc. For more information please click on the link: http://www.packtpub.com/programming-arcgis-10-1-with-python-cookbook/book 

Would be great to hear from you.  Thank you.

Kind regards,

Dyson D' Souza
Marketing Research Executive | Packt Publishing | www.PacktPub.com
Email: dysond@packtpub.com

Time: Friday April 12, 2013 at 4:31 am
IP Address: 122.182.11.42
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:148:"From: Dyson D' Souza <wordpress@bobspython.wordpress.com>
Reply-To: Dyson D' Souza <dysond@packtpub.com>
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>will_code_for_food</title>
  <link>http://bob-roberts.net/will_code_for_food/</link>
  <pubDate>Tue, 31 Dec 2013 04:08:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2013/12/will_code_for_food.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1067</wp:post_id>
  <wp:post_date>2013-12-30 21:08:09</wp:post_date>
  <wp:post_date_gmt>2013-12-31 04:08:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>will_code_for_food</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2013/12/will_code_for_food.jpg</wp:attachment_url>
</item>
<item>
  <title>lunch_panoply6_header_img_prod</title>
  <link>http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/lunch_panoply6_header_img_prod/</link>
  <pubDate>Tue, 25 Feb 2014 00:09:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_header_img_prod.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1100</wp:post_id>
  <wp:post_date>2014-02-24 17:09:29</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:09:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lunch_panoply6_header_img_prod</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1099</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/02/lunch_panoply6_header_img_prod.jpg</wp:attachment_url>
</item>
<item>
  <title>lunch_panoply6_img1</title>
  <link>http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/lunch_panoply6_img1/</link>
  <pubDate>Tue, 25 Feb 2014 00:09:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1101</wp:post_id>
  <wp:post_date>2014-02-24 17:09:29</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:09:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lunch_panoply6_img1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1099</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img1.jpg</wp:attachment_url>
</item>
<item>
  <title>lunch_panoply6_img2</title>
  <link>http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/lunch_panoply6_img2/</link>
  <pubDate>Tue, 25 Feb 2014 00:09:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1102</wp:post_id>
  <wp:post_date>2014-02-24 17:09:29</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:09:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lunch_panoply6_img2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1099</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img2.jpg</wp:attachment_url>
</item>
<item>
  <title>lunch_panoply6_img3</title>
  <link>http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/lunch_panoply6_img3/</link>
  <pubDate>Tue, 25 Feb 2014 00:09:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img3.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1103</wp:post_id>
  <wp:post_date>2014-02-24 17:09:29</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:09:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lunch_panoply6_img3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1099</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img3.jpg</wp:attachment_url>
</item>
<item>
  <title>lunch_panoply6_img4</title>
  <link>http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/lunch_panoply6_img4/</link>
  <pubDate>Tue, 25 Feb 2014 00:09:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img4.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1104</wp:post_id>
  <wp:post_date>2014-02-24 17:09:29</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:09:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lunch_panoply6_img4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1099</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img4.jpg</wp:attachment_url>
</item>
<item>
  <title>Featured Image -- 1123</title>
  <link>http://bob-roberts.net/2014/03/13/formatting-time-and-date-in-ruby-on-rails-using-strftime/featured-image-1123/</link>
  <pubDate>Fri, 14 Mar 2014 04:24:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/03/formatting-time-and-date-in-ruby-on-rails-using-strftime.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1124</wp:post_id>
  <wp:post_date>2014-03-13 21:24:46</wp:post_date>
  <wp:post_date_gmt>2014-03-14 04:24:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>featured-image-1123</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1123</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/03/formatting-time-and-date-in-ruby-on-rails-using-strftime.png</wp:attachment_url>
</item>
<item>
  <title>Tags and Topics form</title>
  <link>http://bob-roberts.net/2014/04/04/acts_as_taggable_on-select2-super-easy-tags-in-rails/tags-and-topics-form/</link>
  <pubDate>Fri, 04 Apr 2014 23:25:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/04/screen-shot-2013-03-06-at-6-59-51-pm.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1136</wp:post_id>
  <wp:post_date>2014-04-04 16:25:00</wp:post_date>
  <wp:post_date_gmt>2014-04-04 23:25:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tags-and-topics-form</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1135</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/04/screen-shot-2013-03-06-at-6-59-51-pm.png</wp:attachment_url>
</item>
<item>
  <title>Image</title>
  <link>http://bob-roberts.net/2014/04/11/benefits-of-using-ruby-on-rails-applications-for-your-business/image/</link>
  <pubDate>Sat, 12 Apr 2014 00:12:47 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/04/ruby-on-rails.jpeg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1138</wp:post_id>
  <wp:post_date>2014-04-11 17:12:47</wp:post_date>
  <wp:post_date_gmt>2014-04-12 00:12:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1137</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/04/ruby-on-rails.jpeg</wp:attachment_url>
</item>
<item>
  <title>bobpic</title>
  <link>http://bob-roberts.net/bobpic/</link>
  <pubDate>Mon, 26 May 2014 20:57:52 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/05/bobpic.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1150</wp:post_id>
  <wp:post_date>2014-05-26 13:57:52</wp:post_date>
  <wp:post_date_gmt>2014-05-26 20:57:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bobpic</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/05/bobpic.jpg</wp:attachment_url>
</item>
<item>
  <title>cropped-bobpic.jpg</title>
  <link>http://bob-roberts.net/cropped-bobpic-jpg/</link>
  <pubDate>Mon, 26 May 2014 20:58:15 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/05/cropped-bobpic.jpg</guid>
  <description/>
  <content:encoded><![CDATA[http://bobspython.files.wordpress.com/2014/05/cropped-bobpic.jpg]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1151</wp:post_id>
  <wp:post_date>2014-05-26 13:58:15</wp:post_date>
  <wp:post_date_gmt>2014-05-26 20:58:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cropped-bobpic-jpg</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/05/cropped-bobpic.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_custom_header_last_used_pub/flounder</wp:meta_key>
    <wp:meta_value><![CDATA[1401137925]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/flounder]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>exploring_sti1_img1</title>
  <link>http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/exploring_sti1_img1/</link>
  <pubDate>Thu, 10 Jul 2014 06:48:37 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1188</wp:post_id>
  <wp:post_date>2014-07-09 23:48:37</wp:post_date>
  <wp:post_date_gmt>2014-07-10 06:48:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exploring_sti1_img1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1187</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/exploring_sti1_img1.jpg</wp:attachment_url>
</item>
<item>
  <title>exploring_sti1_img5</title>
  <link>http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/exploring_sti1_img5/</link>
  <pubDate>Thu, 10 Jul 2014 06:48:38 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img5.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1189</wp:post_id>
  <wp:post_date>2014-07-09 23:48:38</wp:post_date>
  <wp:post_date_gmt>2014-07-10 06:48:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exploring_sti1_img5</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1187</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/exploring_sti1_img5.jpg</wp:attachment_url>
</item>
<item>
  <title>exploring_sti1_img2</title>
  <link>http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/exploring_sti1_img2/</link>
  <pubDate>Thu, 10 Jul 2014 06:48:38 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img2.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1190</wp:post_id>
  <wp:post_date>2014-07-09 23:48:38</wp:post_date>
  <wp:post_date_gmt>2014-07-10 06:48:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exploring_sti1_img2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1187</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/exploring_sti1_img2.jpg</wp:attachment_url>
</item>
<item>
  <title>exploring_sti1_img3</title>
  <link>http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/exploring_sti1_img3/</link>
  <pubDate>Thu, 10 Jul 2014 06:48:38 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img3.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1191</wp:post_id>
  <wp:post_date>2014-07-09 23:48:38</wp:post_date>
  <wp:post_date_gmt>2014-07-10 06:48:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exploring_sti1_img3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1187</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/exploring_sti1_img3.jpg</wp:attachment_url>
</item>
<item>
  <title>exploring_sti1_img4</title>
  <link>http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/exploring_sti1_img4/</link>
  <pubDate>Thu, 10 Jul 2014 06:48:39 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img4.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1192</wp:post_id>
  <wp:post_date>2014-07-09 23:48:39</wp:post_date>
  <wp:post_date_gmt>2014-07-10 06:48:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exploring_sti1_img4</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1187</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/exploring_sti1_img4.jpg</wp:attachment_url>
</item>
<item>
  <title>Toilet</title>
  <link>http://bob-roberts.net/2014/07/12/programming-on-the-toilet/toilet/</link>
  <pubDate>Sun, 13 Jul 2014 04:46:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/toilet1.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1194</wp:post_id>
  <wp:post_date>2014-07-12 21:46:09</wp:post_date>
  <wp:post_date_gmt>2014-07-13 04:46:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>toilet</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1193</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/toilet1.jpg</wp:attachment_url>
</item>
<item>
  <title>java</title>
  <link>http://bob-roberts.net/2014/07/28/if-you-want-a-job-wake-up-and-smell-the-coffee/java/</link>
  <pubDate>Tue, 29 Jul 2014 02:41:34 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/07/java.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1198</wp:post_id>
  <wp:post_date>2014-07-28 19:41:34</wp:post_date>
  <wp:post_date_gmt>2014-07-29 02:41:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>java</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1197</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/07/java.jpg</wp:attachment_url>
</item>
<item>
  <title>xss example</title>
  <link>http://bob-roberts.net/2014/08/04/security-in-rails/xss-example/</link>
  <pubDate>Tue, 05 Aug 2014 03:35:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/08/virus.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1201</wp:post_id>
  <wp:post_date>2014-08-04 20:35:36</wp:post_date>
  <wp:post_date_gmt>2014-08-05 03:35:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>xss-example</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1200</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/08/virus.png</wp:attachment_url>
</item>
<item>
  <title>black3_cover150</title>
  <link>http://bob-roberts.net/2014/08/14/the-well-grounded-rubyist-2nd-edition-a-solid-well-written-updated-guide-to-the-ruby-programming-language-bookreview/black3_cover150/</link>
  <pubDate>Thu, 14 Aug 2014 23:46:40 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2014/08/black3_cover150.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1206</wp:post_id>
  <wp:post_date>2014-08-14 16:46:40</wp:post_date>
  <wp:post_date_gmt>2014-08-14 23:46:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>black3_cover150</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1205</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2014/08/black3_cover150.jpg</wp:attachment_url>
</item>
<item>
  <title>Interact with the High Charts Graphs</title>
  <link>http://bob-roberts.net/2015/03/04/high-charts-interactive-grids/interact-with-the-high-charts-graphs/</link>
  <pubDate>Thu, 05 Mar 2015 05:14:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1234</wp:post_id>
  <wp:post_date>2015-03-04 22:14:59</wp:post_date>
  <wp:post_date_gmt>2015-03-05 05:14:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>interact-with-the-high-charts-graphs</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1233</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png</wp:attachment_url>
</item>
<item>
  <title>Featured Image -- 1246</title>
  <link>http://bob-roberts.net/2015/06/23/the-venture-capital-firms-that-are-best-at-spotting-unicorns/featured-image-1246/</link>
  <pubDate>Wed, 24 Jun 2015 02:57:16 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/06/venture-capital-unicorn-spotting.jpg</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1247</wp:post_id>
  <wp:post_date>2015-06-23 19:57:16</wp:post_date>
  <wp:post_date_gmt>2015-06-24 02:57:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>featured-image-1246</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1246</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/06/venture-capital-unicorn-spotting.jpg</wp:attachment_url>
</item>
<item>
  <title>atlas_V1ZePiT8@2x (1)</title>
  <link>http://bob-roberts.net/2015/06/23/the-venture-capital-firms-that-are-best-at-spotting-unicorns/atlas_v1zepit82x-1/</link>
  <pubDate>Wed, 24 Jun 2015 02:57:17 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/06/atlas_v1zepit82x-1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1248</wp:post_id>
  <wp:post_date>2015-06-23 19:57:17</wp:post_date>
  <wp:post_date_gmt>2015-06-24 02:57:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>atlas_v1zepit82x-1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1246</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/06/atlas_v1zepit82x-1.png</wp:attachment_url>
</item>
<item>
  <title>atlas_41X60jp8@2x</title>
  <link>http://bob-roberts.net/2015/06/23/the-venture-capital-firms-that-are-best-at-spotting-unicorns/atlas_41x60jp82x/</link>
  <pubDate>Wed, 24 Jun 2015 02:57:18 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/06/atlas_41x60jp82x2.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1249</wp:post_id>
  <wp:post_date>2015-06-23 19:57:18</wp:post_date>
  <wp:post_date_gmt>2015-06-24 02:57:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>atlas_41x60jp82x</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1246</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/06/atlas_41x60jp82x2.png</wp:attachment_url>
</item>
<item>
  <title>Featured Image -- 1250</title>
  <link>http://bob-roberts.net/2015/06/23/why-use-ruby-on-rails/featured-image-1250/</link>
  <pubDate>Wed, 24 Jun 2015 03:01:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/06/ruby-on-rails-profile.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1251</wp:post_id>
  <wp:post_date>2015-06-23 20:01:29</wp:post_date>
  <wp:post_date_gmt>2015-06-24 03:01:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>featured-image-1250</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1250</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/06/ruby-on-rails-profile.png</wp:attachment_url>
</item>
<item>
  <title>Featured Image -- 1260</title>
  <link>http://bob-roberts.net/2015/07/17/teslas-model-s-gets-ludicrous-mode-will-do-0-60-in-2-8-seconds/featured-image-1260/</link>
  <pubDate>Sat, 18 Jul 2015 00:39:44 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/07/s.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1261</wp:post_id>
  <wp:post_date>2015-07-17 17:39:44</wp:post_date>
  <wp:post_date_gmt>2015-07-18 00:39:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>featured-image-1260</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1260</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/07/s.png</wp:attachment_url>
</item>
<item>
  <title>s</title>
  <link>http://bob-roberts.net/2015/07/17/teslas-model-s-gets-ludicrous-mode-will-do-0-60-in-2-8-seconds/s/</link>
  <pubDate>Sat, 18 Jul 2015 00:39:47 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.files.wordpress.com/2015/07/s1.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1262</wp:post_id>
  <wp:post_date>2015-07-17 17:39:47</wp:post_date>
  <wp:post_date_gmt>2015-07-18 00:39:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>s</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>1260</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://bobspython.files.wordpress.com/2015/07/s1.png</wp:attachment_url>
</item>
<item>
  <title>About</title>
  <link>http://bob-roberts.net/about/</link>
  <pubDate>Fri, 13 Aug 2010 23:49:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?page_id=2</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I am a Ruby on Rails developer in Phoenix AZ.</p>
<p style="text-align:justify;">I started programming with <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" target="_blank" rel="homepage">Python</a> and Geoprocessing.  I used both for hobby as well as work.  I have used Python for geoprocessing in ArcToolbox in addition to <a class="zem_slink" title="WxPython" href="http://wxpython.org/" target="_blank" rel="homepage">wxPython</a> for stand-alone <a class="zem_slink" title="Graphical user interface" href="http://en.wikipedia.org/wiki/Graphical_user_interface" target="_blank" rel="wikipedia">GUI</a>'s.</p>
<p style="text-align:justify;">Since then, I got into Ruby on Rails for <a class="zem_slink" title="Web application" href="http://en.wikipedia.org/wiki/Web_application" target="_blank" rel="wikipedia">web applications</a>.  I did look into <a class="zem_slink" title="Django (web framework)" href="http://https://djangoproject.com/" target="_blank" rel="homepage">Django</a> but I found it too difficult to learn.  I continued to learn <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" target="_blank" rel="homepage">RoR</a> as a hobby until the opportunity came along for me to leave the big bad corporate world and become a Ruby on Rails developer full time.</p>
<p style="text-align:justify;">My blog started as a help for Python and geoprocessing and has since morphed to cover many other topics.  Sometimes my posts are informational and sometimes they are just my opinions.</p>
Bob Roberts

Ruby on Rails Developer]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2010-08-13 23:49:36</wp:post_date>
  <wp:post_date_gmt>2010-08-13 23:49:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How it all began….</title>
  <link>http://bob-roberts.net/2010/08/21/how-it-all-began/</link>
  <pubDate>Sun, 22 Aug 2010 01:32:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=14</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I started learning <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python</a> for Geoprocessing last year as a "hobby" but it has gone much past that now.   I have always been someone that needs to be challenged and programming it obviously just that.... challenging.</p>
<p style="text-align:justify;">I did read a lot about Python but using it in Geoprocessing was a lot easier than just raw programming.  With the interface for ArcToolbox tools it is easier to code then writing out the entire code.  After a while I got pretty comfortable with Python Geoprocessing but I soon discovered the limitations to the "tools" that I wanted to create.  I wanted to take my tools out of geoprocessing and create more of a wizard like tool.  With a lot of help from a Perl programmer and a couple of folks that you have seen their names all over the forums, I have created my stand-alone GUI interface as I had wanted.</p>
<p style="text-align:justify;">From all of this comes the fact that there have been so many others that have helped me either directly or indirectly.  I have seen that there is so much info all over the web and I want to do my part to help.  Again, I have limited knowledge of Python, <a class="zem_slink" title="WxPython" rel="wikipedia" href="http://en.wikipedia.org/wiki/WxPython">wxPython</a>, and Geoprocessing with Python.  It is because of this that I have had to learn to crawl and was astonished at some of the simpliest tasks that I wanted to do required hours upon hours of searching.  But alas, in the end it is so great to figure it out and run it without any error messages!!</p>
<p style="text-align:justify;">So I will soon start adding in snippets of code for some of the basic Python, wxPython, and Geoprocessing with Python functions.</p>
<p style="text-align:justify;">If there are any others out there that would like to contribute, please let me know.  I would love this to blossom into a consolidated resource for Pythonistas new and experienced.</p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2010-08-21 18:32:56</wp:post_date>
  <wp:post_date_gmt>2010-08-22 01:32:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-it-all-began</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Joining a table to a feature class</title>
  <link>http://bob-roberts.net/2010/08/22/joining-a-table-to-a-feature-class/</link>
  <pubDate>Mon, 23 Aug 2010 01:19:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=21</guid>
  <description/>
  <content:encoded><![CDATA[I have had the need to join tables to a <a class="zem_slink" title="Shapefile" rel="wikipedia" href="http://en.wikipedia.org/wiki/Shapefile">shapefile</a> or feature class many times and after not finding anything on the web, I posted on the <a class="zem_slink" title="ESRI" rel="homepage" href="http://www.esri.com/">ESRI</a> forum and got my solution.

The difference with joining a table is that it is a one way join.  That is, you can copy from the table to the feature but not the other way around.

[sourcecode language="Python"]
gp.MakeFeatureLayer(&quot;temp.shp&quot;, &quot;temp&quot;)
 joinTable = &quot;temp2.dbf&quot;
 gp.AddJoin_management(&quot;temp&quot;, &quot;field 1&quot;, joinTable, &quot;field 1&quot;)
 gp.CalculateField_management(&quot;temp&quot;, &quot;Field_2&quot;, &quot;[temp2.Field_2]&quot;)
 gp.RemoveJoin_management(&quot;temp&quot;, &quot;temp2.dbf&quot;)

[/sourcecode]

I originally tried making a tableview of the table but found that it wasn't necessary to do so.  Notice that because it is a table, tou need the [] around the table that is being read from.

I find this function very useful as I often have the need to read from a table and copy values over to a shapefile.

In this instance I needed to join a table to a table.  The first table  (table 1) was an input table and the second table (table 2) was a copy of the .dbf from a shapefile.

[sourcecode language="Python"]

gp.AddMessage(&quot;Making Layer &amp; View...&quot;)
 # Make Feature Layer from Stops
 gp.Copy_management(sys.argv[3], &quot;temp.dbf&quot;)
 gp.MakeTableView_management(&quot;temp2.dbf&quot;, &quot;temp2&quot;)
 joinTable1 = &quot;temp.dbf&quot;
 joinTable2 = &quot;temp2&quot;
 gp.AddJoin_management(joinTable1, &quot;field_1&quot;, joinTable2, &quot;field_2&quot;)
 gp.AddMessage(&quot;Joined table views&quot;)
 gp.CalculateField_management(&quot;temp2&quot;, &quot;TIME&quot;, &quot;[temp.TIME]&quot;)
 gp.RemoveJoin_management(&quot;temp2&quot;, &quot;temp.dbf&quot;)

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>21</wp:post_id>
  <wp:post_date>2010-08-22 18:19:56</wp:post_date>
  <wp:post_date_gmt>2010-08-23 01:19:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>joining-a-table-to-a-feature-class</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="gis-geoprocessing-in-python"><![CDATA[GIS Geoprocessing in Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Merging shapefiles</title>
  <link>http://bob-roberts.net/2010/08/22/merging-shapefiles/</link>
  <pubDate>Mon, 23 Aug 2010 01:28:32 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=23</guid>
  <description/>
  <content:encoded><![CDATA[Another process that I though would be quite simple was merging 2 shapefiles.  It seems there is an issue with the <a class="zem_slink" title="Shapefile" rel="wikipedia" href="http://en.wikipedia.org/wiki/Shapefile">shapefile</a> names not being recognized and I had to use "str" to identify the names as strings.

[sourcecode language="Python"]

temp1 = &quot;temp1.shp&quot;
 temp2 = &quot;temp2.shp&quot;

strlist = str(temp1)+&quot;;&quot;+str(temp2)
 outshp = (gp.workspace+&quot;/final.shp&quot;)
 gp.Merge_management (str(strlist), outshp)
 gp.AddMessage (&quot;Merged Shapefiles&quot;)

[/sourcecode]

When I tried to just use the names of the shapefile copies I could not get this to work.  I then created a simple list and identified the shapefile names as strings as well as in the actual Merge_managment, I had to identify the strlist as string.

BR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>23</wp:post_id>
  <wp:post_date>2010-08-22 18:28:32</wp:post_date>
  <wp:post_date_gmt>2010-08-23 01:28:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>merging-shapefiles</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="gis-geoprocessing-in-python"><![CDATA[GIS Geoprocessing in Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Good Geoprocessing practices</title>
  <link>http://bob-roberts.net/2010/08/22/good-geoprocessing-practices/</link>
  <pubDate>Mon, 23 Aug 2010 01:39:22 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=29</guid>
  <description/>
  <content:encoded><![CDATA[Something that I learned as good practice is working with copies of my shapefiles and not the originals.  When doing this you do create several temporary tables and/or shapefiles and these need to be cleaned up.

[sourcecode language="Python"]

## System arguments
 # Input Streets shapefile
 Streets = sys.argv[1]
 # Output Streets shapefile
 Streets_output = sys.argv[2]
 # Output Streets shapefile
 Streets_output2 = sys.argv[3]
 # facility streets layer
 facilstr = sys.argv[5]

# Set the workspace for the processing files
 gp.workspace = os.path.dirname(sys.argv[2])

# Make copies so that processing doesn't take place on the original.
 gp.AddMessage(&quot;\nCreating processing files...&quot;)
 gp.Copy_management(Streets, &quot;Streets_process.shp&quot;)
 gp.Copy_management(facilstr, &quot;facilstreets.shp&quot;)
 gp.AddMessage (&quot;Copies created&quot;)

[/sourcecode]

This creates copies of the input shapefiles which I then use for processing.  Because there are these temp files, in the end of the script I need to delete those temp files.  For this you need to import the "os" and "glob" functions such as import os, glob in the beginning of the script.  Then at the end of the script we use these functions to clean up the temp files.  I also cleanup the xml files that are created when working with temporary tables.

[sourcecode language="Python"]

gp.AddMessage(&quot;Cleanup...&quot;)
 # Delete &quot;process&quot; files

for file in glob.glob(gp.workspace+&quot;/Streets_process*&quot;):
 os.remove(file)
 for file in glob.glob(gp.workspace+&quot;/facilstreets*&quot;):
 os.remove(file)
 for file in glob.glob(gp.workspace+&quot;/*.xml&quot;):
 os.remove(file)
 gp.AddMessage(&quot;\nDone.\n&quot;)

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>29</wp:post_id>
  <wp:post_date>2010-08-22 18:39:22</wp:post_date>
  <wp:post_date_gmt>2010-08-23 01:39:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>good-geoprocessing-practices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="gis-geoprocessing-in-python"><![CDATA[GIS Geoprocessing in Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Logging, logging, logging……</title>
  <link>http://bob-roberts.net/2010/08/22/logging-logging-logging/</link>
  <pubDate>Mon, 23 Aug 2010 01:50:18 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=34</guid>
  <description/>
  <content:encoded><![CDATA[So with a lot of help from friends and a programmer that works with us, we have just about completed our first <a class="zem_slink" title="WxPython" rel="wikipedia" href="http://en.wikipedia.org/wiki/WxPython">wxPython</a> <a class="zem_slink" title="Graphical user interface" rel="wikipedia" href="http://en.wikipedia.org/wiki/Graphical_user_interface">GUI</a> that we are going to use for a clients interface.  For those that have a clue about basic programming (which I did NOT) I am sure that you are familiar with setting break points to troubleshoot your code.  Even better than this (in my opinion and easier as well) is the use of logging.  Using logging statements all over your code in areas that may be giving you problems, you can see where the issue may be occurring.

[sourcecode language="Python"]

import logging

logging.basicConfig(filename='dev.log',level=logging.DEBUG,filemode='w',
 format='%(filename)s::%(module)s::%(funcName)s::%(lineno)d %(levelname)s %(message)s'
 )

# above is the config/setup. Put at top of file.

# here's some examples using it.
 # look in &quot;dev.log&quot; for output!

def blah() :
 logging.debug(&quot;starting blah!&quot;)

logging.debug(&quot;finished blah!&quot;)
 blah()




[/sourcecode]

Now when you run your process you can check your dev.log to see if all of your logging statement are there.  If they are not all there, then you can see where the last statement was and it helps to zero in on your problem.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>34</wp:post_id>
  <wp:post_date>2010-08-22 18:50:18</wp:post_date>
  <wp:post_date_gmt>2010-08-23 01:50:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>logging-logging-logging</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="wxpython"><![CDATA[wxPython]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>wxPython versus ArcToolbox tool</title>
  <link>http://bob-roberts.net/2010/09/10/wxpython-versus-arctoolbox-tool/</link>
  <pubDate>Sat, 11 Sep 2010 00:52:49 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=49</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">It started out to be simple stuff that I wanted to accomplish with <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python</a> and geoprocessing.  A lot of the tools that I created or wanted to create were quite easy to do in ArcToolbox but I soon found that I wanted to have more flexibility and more input options.  The ArcToolbox tools work great but they are limited in their uses and functions.  So in walked <a href="http://www.wxpython.org/" target="_blank">wxPython</a>.  I tried messing around with several different options but after the dust settled it was wxPython that I went with.</p>
<p style="text-align:justify;">Tinkter was ok but lacked a lot of options.  I tried <a href="http://boa-constructor.sourceforge.net/" target="_blank">Boa-Constructor</a> but found that it was confusing to get going.  I tried <a href="http://pythoncard.sourceforge.net/" target="_blank">Python-Card</a> and although it seemed easier that Boa-Constructor, I was left with the nagging question of now what when I finished the "window."  So back to wxPython.  As it is based on <a class="zem_slink" title="WxWidgets" rel="homepage" href="http://www.wxwidgets.org/">wxWidgets</a> there is a lot of information on the web and tutorials as well.  So my mind was made up and then I had to figure out what it was that I wanted to do.</p>
<p style="text-align:justify;">Being new to programming, I quickly learned that there are two stages to programming.  The first stage is "what am I trying to do" followed by the second stage of "OK, now how the heck do I do it!"  I know for all of you programmer gurus or those with formal programming training, this is quite obvious but for me it wasn't obvious at all.  Now that I have gotten better at both Python and wxPython, I see that it sometimes takes longer to understand what I want to accomplish than it does to code it once my mind is made up.</p>
<p style="text-align:justify;">So back to wxPython.......One of the functions that I soon found lacking in the ArcToolbox tools is taking inputed data and allowing user to perform functions based on the actual data that was imported.  What I am trying to say here is that I wanted to input a point file and then based on the data in the file, decide what processes I wanted to perform.  Another example of this is that I can input a shapefile and get a list of field names but I cannot choose a field and decide what to do with it.  The ArcToolbox allows minimal input and output but that is it.  I wanted more interaction such as input a shapefile, create a list of fields, allow the user to choose a field, and then make calculations based off of that.  This back and forth interaction wasn't possible so off the wxPython I went.</p>
<p style="text-align:justify;">Now by creating "wizard" like interfaces, I can accept inputed data, create lists and dropdown choices of those lists and further functions.  Don't get me wrong, I have more ArcToolbox tools than I have wxPython GUI's but they each serve a different function.</p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>49</wp:post_id>
  <wp:post_date>2010-09-10 17:52:49</wp:post_date>
  <wp:post_date_gmt>2010-09-11 00:52:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>wxpython-versus-arctoolbox-tool</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="gis-geoprocessing-in-python"><![CDATA[GIS Geoprocessing in Python]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="wxpython"><![CDATA[wxPython]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Arizona Geo Group</title>
  <link>http://bob-roberts.net/2010/10/13/arizona-python-group/</link>
  <pubDate>Thu, 14 Oct 2010 01:18:41 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=86</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">EDIT:  Alright, we now have started a Geo group for Phoenix AZ.  It is a google group at <a href="http://www.phxgeo.org/">http://www.phxgeo.org</a>.  We are going to have monthly meetups every 2nd Wednesday of the month location TBD.  The group encompasses everything geo from GIS to programming.</p>
<p style="text-align:justify;">OK, so I have looked all over for a <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python</a> user group in Arizona and I cannot find anything.  So many states have users groups but I cannot find anything.  As big of a city that Phoenix is, I find this unbelieveable.  Not only is there not a Python users group in Arizona but there is also no <a class="zem_slink" title="Geographic information system" rel="wikipedia" href="http://en.wikipedia.org/wiki/Geographic_information_system">GIS</a> user group.  What is up with this?  All of the other states have something going on but we do not in Arizona.  In the programming world I have found so many people willing to assist in helping and we are in one of the largest cities in the U.S.</p>
<p style="text-align:justify;">If there is anybody that knows of a Python or GIS users group in Arizona, please let me know.  If there isn't anything out there but somebody would like to start a user group for Python or GIS, please let me know. </p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>86</wp:post_id>
  <wp:post_date>2010-10-13 18:18:41</wp:post_date>
  <wp:post_date_gmt>2010-10-14 01:18:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arizona-python-group</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_08d3eb514ffd52e69b155c8a207accca</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Search and Update Cursors</title>
  <link>http://bob-roberts.net/2010/09/29/cursors-how-to-use-them/</link>
  <pubDate>Thu, 30 Sep 2010 01:10:24 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=93</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">There are three types of cursors that can be used in <a class="zem_slink" title="Geoprocessing" rel="wikipedia" href="http://en.wikipedia.org/wiki/Geoprocessing">geoprocessing</a>. The three types of cursors are Search, Insert and Update.  The most commonly used cursor is the Search Cursor.  The Search Cursor is used to run through a set of data to find values to make calculations on another set of data.  That is, a Search Cursor is read only and cannot be used to update or overwrite the original data.  The Insert Cursor is used to insert a new record into a table.  The Update Cursor is used to update values in a dataset.</p>
<p style="text-align:justify;">I will show snippets for using the Update Cursor as well as the Search Cursor.</p>
<p style="text-align:justify;"><strong>The Search Cursor</strong></p>
<p style="text-align:justify;">The Search Cursor can be used to read through a dataset and search for specific information that can then be written out or printed.  I recently used this to select values from a shapefile to write out to a .csv file.</p>
<p style="text-align:justify;">&nbsp;</p>

[sourcecode language="Python"]

## The geoprocessing command is gp.SearchCursor() and requires at least one argument.

cursor=gp.SearchCursor(Input) #Assuming that Input is a sys.argv[]

row=cursor.Next()
while row:
line=[]
for fld in header:
value=row.GetValue(fld)
line.append(value)
linewriter.writerow(line)
row=cursor.Next()

del cursor

[/sourcecode]
<p style="text-align:justify;">So in this case i read through my input lines to write out to a .csv.  Obviously I performed other functions on the data prior to writing out my text file.  There are a multitude of uses for the Search Cursor and this is just one example.</p>
<p style="text-align:justify;"><strong>The Update Cursor</strong></p>
<p style="text-align:justify;">An example of the use for an Update Cursor is an export process to a customer database that requires an updated date and time.  I have a customer table that gets exported and when it does I want it to update the current date and time.  Now there are a million ways to write an Update Cursor but this techniques works best for me.</p>
<p style="text-align:justify;">&nbsp;</p>

[sourcecode language="Python"]

## The geoprocessing command is gp.UpdateCursor() and requires at least one argument.

cursor=gp.UpdateCursor(Input) #Assuming that Input is a sys.argv[]

row=cursor.Next()

while row:
row.Updated = datetime.today().isoformat()
cursor.UpdateRow(row)
row = cursor.Next()

del cursor

[/sourcecode]
<p style="text-align:justify;">This iterates through the "Input" and updates in each row the field Updated with the current date and time.  You must also have in the beginning of your script:</p>
<p style="text-align:justify;">from datetime import datetime</p>
<p style="text-align:justify;">I think that the biggest difference in the Update Cursor from the Search Cursor is that each iteration through the rows you must use UpdateRow to write the value.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>93</wp:post_id>
  <wp:post_date>2010-09-29 18:10:24</wp:post_date>
  <wp:post_date_gmt>2010-09-30 01:10:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cursors-how-to-use-them</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Basic Python Training</title>
  <link>http://bob-roberts.net/2010/09/30/basic-python-training/</link>
  <pubDate>Fri, 01 Oct 2010 00:54:31 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=97</guid>
  <description/>
  <content:encoded><![CDATA[A friend of mine sent me a link today that has some good reading as far as Python training and the like.  Check it out at <a href="http://learnpythonthehardway.org/index">http://learnpythonthehardway.org/index</a>.

I especially like the "How to think like a computer Scientist" which is written specifically for Python.

BR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>97</wp:post_id>
  <wp:post_date>2010-09-30 17:54:31</wp:post_date>
  <wp:post_date_gmt>2010-10-01 00:54:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>basic-python-training</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d53e1f3313c6bb1fc522567f21193bd2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Review of ArcView 10</title>
  <link>http://bob-roberts.net/2010/10/12/review-of-arcview-10/</link>
  <pubDate>Wed, 13 Oct 2010 00:34:49 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=103</guid>
  <description/>
  <content:encoded><![CDATA[Today I went to a seminar from <a class="zem_slink" title="ESRI" rel="geolocation" href="http://maps.google.com/maps?ll=34.0570416667,-117.195677778&amp;spn=1.0,1.0&amp;q=34.0570416667,-117.195677778 (ESRI)&amp;t=h">ESRI</a> for increasing productivity in ArcGIS 10.  I will say that I am very excited about the new functionality in AV 10.

Some of the bigger things that I noted:
<ul>
	<li>ArcGIS Mobile is available with all AV10 licenses
<ul>
	<li>Available for <a class="zem_slink" title="IOS (Apple)" rel="homepage" href="http://developer.apple.com/iphone">Apple IOS</a></li>
	<li>Will be available for Android by year’s end</li>
	<li>Allows users to input data in field</li>
	<li>It is available for <a class="zem_slink" title="ArcView" rel="homepage" href="http://www.esri.com/software/arcgis/arcview/index.html">ArcView</a> Desktop</li>
	<li>ArcGIS Mobile</li>
	<li>Basemaps
<ul>
	<li>Available online with ESRI global account (free)</li>
	<li>Shared data from all over the world</li>
	<li>Imagery to 1 meter or better in U.S.</li>
	<li>These are community base maps available
<ul>
	<li><a class="zem_slink" title="OpenStreetMap" rel="homepage" href="http://www.openstreetmap.org/">Open Street Maps</a> data</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
	<li>Can create basemaps  within AV10
<ul>
	<li>Add layers by dragging them in and it creates like a cached layer</li>
	<li>Refresh is almost instant for the basemap</li>
	<li>Layer Package
<ul>
	<li>They have a new layer package so that you can send layer(s) to others but in the package it maintains the theme definitions in addition to the symbolog</li>
</ul>
</li>
	<li>ArcGIS Explorer
<ul>
	<li>Free for web use</li>
</ul>
</li>
	<li>Can create slideshows</li>
</ul>
</li>
	<li>Parcel Management Toolbar for editing parcel data</li>
	<li>Data reviewer can be setup to check for user specified issues</li>
	<li>Automated Map Books
<ul>
	<li>Supported by ESRI now</li>
	<li>Created by PyArc script</li>
	<li>Creates book pages and cover/index pages</li>
	<li>Geoprocessing runs in background so that user may continue to work while tool is running</li>
</ul>
</li>
	<li>ESRI is on <a class="zem_slink" title="Amazon EC2" rel="homepage" href="http://aws.amazon.com/ec2/">Amazon EC2</a>
<ul>
	<li>Can easily create ArcGIS server on cloud</li>
	<li>There is a search function to create a server for different preset configurations</li>
	<li>License borrowing in AV10, can transfer temporarily to another user.</li>
</ul>
</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>103</wp:post_id>
  <wp:post_date>2010-10-12 17:34:49</wp:post_date>
  <wp:post_date_gmt>2010-10-13 00:34:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>review-of-arcview-10</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Making an executable wxPython </title>
  <link>http://bob-roberts.net/2010/10/23/making-an-executable-wxpython/</link>
  <pubDate>Sat, 23 Oct 2010 21:51:32 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=112</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I have been looking for quite some time now for a way to take my wxPython script and make it an executable file for windows.  I create interfaces for users and GIS and these can be cumbersome to copy over to the clients machine.  There are also extra modules that need to be downloaded after copying it over.  What I wanted was a way to make a .exe file from my script and an installer to use for installation.</p>
<p style="text-align:justify;">I spent a considerable amount of time trying to use Py2exe as well as GUI2exe which is a GUI interface that can use several installers amongst which is Py2exe.  I continued to have a plethora of issues with these.  One of the first issues that I had was an issue with wxVersion.  I had always written my scripts to include the wxVersion to select the proper version of wx.  Not that I ever thought of it, but I only have one version installed and it is not necessary to use wxVersion.  I finally read on a forum that Py2exe does not like wxversion and that it should be excluded when using Py2exe.  I changed all of my modules and removed the wxVersion entirely.  I still continued to have issues with Py2exe not finding some of my modules which I then had to use "Includes" for and also many of the .dll's were not found.  I googled around and on another forum found a reference to <a href="http://pypi.python.org/pypi/bbfreeze/">bbfreeze</a>.</p>
<p style="text-align:justify;">bbfreeze is for sure lacking in documentation on has not been updated since 2007 which made me a little nervous to try it.  I used Easy_Install from command line "$ easy_install bbfreeze" and in minutes had everything installed and ready to go.  From there a quick command line of "$ bb-freeze TOOLNAME.py" and away it went.  There are several better approches to using the bbfreeze such as a script with more options.  I will review these and update as needed.</p>
<p style="text-align:justify;">bbfreeze created a dist folder that had everything I needed....almost.  I did not include the images folder (thus the need for the bbfreeze script instead of the command line) but after copying the image folder into the dist folder everything worked.  The last thing that I did was then use <a href="http://www.jrsoftware.org/isinfo.php">Inno Setup 5</a> to create an installer file for the executable.  I wish everything in life could be as easy to use as the Inno Setup 5 installer is.  I didn't even need to read any documentation and created an installer file in minutes.</p>
<p style="text-align:justify;">I will post more information as I figure it out.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>112</wp:post_id>
  <wp:post_date>2010-10-23 14:51:32</wp:post_date>
  <wp:post_date_gmt>2010-10-23 21:51:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>making-an-executable-wxpython</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d8611aab898d2cff315702abc5d9bff6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2010-11-07 18:11:13</wp:comment_date>
    <wp:comment_date_gmt>2010-11-08 01:11:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thank you for your comment :)

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1289178673</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1294453511.9547";s:7:"message";s:46:"broberts65 changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1296853278.7509";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-11-08 01:11:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>52</wp:comment_id>
    <wp:comment_author><![CDATA[PraveenMax]]></wp:comment_author>
    <wp:comment_author_email>com.java.praveen@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://praveenmax.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>59.92.2.173</wp:comment_author_IP>
    <wp:comment_date>2011-02-02 10:47:27</wp:comment_date>
    <wp:comment_date_gmt>2011-02-02 17:47:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So,is it possible to make frozen binaries of python+wxPython stuffs using inno setup?I actually wantedd to try "py2exe".]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>14586506</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1296669043.716";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1296669043</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1296668848.4309";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"maxmetallica";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-02 17:47:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>53</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-02 10:56:01</wp:comment_date>
    <wp:comment_date_gmt>2011-02-02 17:56:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Py2exe is used to make the Python/wxPython executable.  The Inno setup creates an installer file.  After using Py2exe there are a lot of files needed to run the executable so the Inno setup creates a normal installer program that makes sure all of the files are available.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>52</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1296669362</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1296669362.452";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-02 17:56:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>ArcGIS Resource Centers</title>
  <link>http://bob-roberts.net/2010/11/05/arcgis-resource-centers/</link>
  <pubDate>Fri, 05 Nov 2010 22:22:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=123</guid>
  <description/>
  <content:encoded><![CDATA[I just stumbled upon some great reference material from ESRI.  Go to <a href="http://j.mp/aLahIL">http://j.mp/aLahIL</a> for the media gallery.  There you will find videos from summits and the like.  There are several good ones about Geoprocessing Tools and Python.

BR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>123</wp:post_id>
  <wp:post_date>2010-11-05 15:22:00</wp:post_date>
  <wp:post_date_gmt>2010-11-05 22:22:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>arcgis-resource-centers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f7296578f826c4b36c97175e742d47cf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_741473ebbb968e1e3e9de966d3fd2373</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Using text file to create Shapefile</title>
  <link>http://bob-roberts.net/2010/12/06/using-text-file-to-create-shapefile/</link>
  <pubDate>Mon, 06 Dec 2010 23:21:48 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=130</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Well, it seems as though all of the things we learn, are learned due to necessity.  I have always worked with either layers or <a class="zem_slink" title="Table (database)" rel="wikipedia" href="http://en.wikipedia.org/wiki/Table_%28database%29">database tables</a> in my <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python</a> Geoprocessing scripts.  It has always worked so there has not been a need to try something different, until last week.</p>
<p style="text-align:justify;">Working on a Python tool for importing a file I requested a .dbf table.  I kept running into issues with the formatting or the header names or what have you.  I was asked if I can take a .csv for an input file.  I assumed this was possible so off I went to solve my new issue.  After a couple of quick Google searches I found what I needed and the ESRI thread that I found was answered by a friend of mine named R.D. and if you spend ANY time on the forums, you will see his name.</p>
CODE

[sourcecode language="Python"]

import sys, os, glob
import arcgisscripting

# Create the geoprocessor object
gp = arcgisscripting.create()

# Create the geoprocessor object

## System arguments
# Input Customer .csv
Stops = sys.argv[1]
# Output Stops &lt;a class=&quot;zem_slink&quot; title=&quot;Shapefile&quot; rel=&quot;wikipedia&quot; href=&quot;http://en.wikipedia.org/wiki/Shapefile&quot;&gt;shapefile&lt;/a&gt;
Stops_output = sys.argv[2]

# Set the workspace for the processing files
gp.workspace = os.path.dirname(sys.argv[3])

import arcgisscripting, os
gp = arcgisscripting.create()
gp.AddMessage(&quot;\nCreating processing .dbf from .csv...&quot;)
gp.TableToDbase_conversion(Stops, os.path.dirname(sys.argv[3]))            #1
gp.AddMessage(&quot;\nCreating Event Layer&quot;)
gp.MakeXYEventLayer_management(Stops[:-4]+&quot;.dbf&quot;, &quot;X&quot;, &quot;Y&quot;, Stops[:-4])            #2

# Create a prj file for Stops_output.shp            #3
coordsys = &quot;Coordinate Systems/Geographic Coordinate Systems/World/WGS 1984.prj&quot;
gp.defineprojection(Stops[:-4], coordsys)

[/sourcecode]
<p style="text-align:justify;">Obviously that is just a snippet of the code but you should get the idea.  #1 shows using the TableToDbase_conversion geoprocessing function.  I have found very little info on this function so I do not know what possible arguments that can be used.  What I do know is that you will get a .dbf file with the exact same name as the original file and the .dbf extension.  #2 Then takes the resulting .dbf from #1 by using the input Stops[:-4] to take the original name and remove the .csv (4 spaces back) and then concatenated it together with ".dbf".  This then uses the X and Y coordinates to create the new layer and assigns it to the original Stops input name.</p>
In order for the new resulting shapefile to work, you will need to define the projection to the correct <a class="zem_slink" title="Coordinate system" rel="wikipedia" href="http://en.wikipedia.org/wiki/Coordinate_system">coordinate system</a> as seen in #4.

Hope this helps :)
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>130</wp:post_id>
  <wp:post_date>2010-12-06 16:21:48</wp:post_date>
  <wp:post_date_gmt>2010-12-06 23:21:48</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-text-file-to-create-shapefile</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>ESRI Python Forum</title>
  <link>http://bob-roberts.net/2010/12/07/esri-python-forum/</link>
  <pubDate>Tue, 07 Dec 2010 16:07:07 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=132</guid>
  <description/>
  <content:encoded><![CDATA[I just found out today that after a long battle to get a separate forum for Python and not having all of the Python questions fall under the Geoprocessing threads, ESRI has created a new Python forum: <a href="http://forums.arcgis.com/forums/117-Python">http://forums.arcgis.com/forums/117-Python</a>

This is for Python related threads regardless of whether it is for geoprocessing or not.

&nbsp;

BR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>132</wp:post_id>
  <wp:post_date>2010-12-07 09:07:07</wp:post_date>
  <wp:post_date_gmt>2010-12-07 16:07:07</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>esri-python-forum</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0a5a8acf3c7c14f809a0c947702b4d10</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_aecaf2a7a5f9fbaaa3c868ff58308958</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>So Why Use Python?</title>
  <link>http://bob-roberts.net/2011/01/25/so-why-use-python/</link>
  <pubDate>Wed, 26 Jan 2011 04:39:53 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/01/25/so-why-use-python/</guid>
  <description/>
  <content:encoded><![CDATA[I guess this is a situation of putting the horse after the cart but I realized the other day that I never really listed why I choose Python as my language of choice.  Being in the <a class="zem_slink" title="Geographic information system" rel="wikipedia" href="http://en.wikipedia.org/wiki/Geographic_information_system">GIS</a> related field I use <a class="zem_slink" title="ESRI" rel="homepage" href="http://www.esri.com/">ESRI</a> <a class="zem_slink" title="ArcView" rel="homepage" href="http://www.esri.com/software/arcgis/arcview/index.html">ArcView</a> a lot.  I found myself performing some tasks repeatedly or rather a series of steps.  Maybe I would use one toolbox tool to change a shapefiles projection and then after that I would add the x and y coordinates to the shapefile.  I started reading about creating models using ESRI ModelBuilder.  No offense to the ModelBuilder but I never really "got it" and therefor never really used it.

What I did find out though is that after I made a Model I could export out the resulting Python code.  Hmm, this seemed an interesting way to go.  I decided to learn Python programming and more specifically I learned to use it for geoprocessing.  I soon learned that ALL of the geoprocessing tools and all of the ArcToolBox tools had an example of the Python code for them.  I won't say that it was as easy and cut-and-paste but using Python for geoprocessing just made sense to me.

I was asked the other day how to choose which language to learn if somebody is interested in learning a <a class="zem_slink" title="Programming language" rel="wikipedia" href="http://en.wikipedia.org/wiki/Programming_language">programming language</a>.  I think that most programmers will use the language that they first learn provided that it serves their needs.  That isn't to say that all programmers will just learn one language or use just one language.  I recently started to look at creating web applications and I saw that there is <a class="zem_slink" title="Django (web framework)" rel="homepage" href="http://www.djangoproject.com">Django</a> which is written in Python to do such a thing.  I really struggled with getting Django installed on my Win7 machine!!  I know a lot of people that love <a class="zem_slink" title="Ruby on Rails" rel="homepage" href="http://rubyonrails.org/">Ruby on Rails</a> so I started to look at that.  I learned enough Ruby to get by and started doing quite a few tutorials creating web applications in Rails.

That sense of failure with the installation of Django just kept bugging me.  I recently refurbished a pc from my daughter that didn't have a hard drive.  After buying a new hard drive I decided to go Linux.  I installed the new <a class="zem_slink" title="List of Ubuntu releases" rel="wikipedia" href="http://en.wikipedia.org/wiki/List_of_Ubuntu_releases">Ubuntu 10.10</a> and lo and behold, installing Django was a piece of cake.  I am now working on the Django tutorials.  I will probably add a new section about Django as I go along.

The purpose of all of this is that I now am familiar with Ruby on Rails and that is making it easier for me to learn Django and to improve on my Python.  I think I will stick with Django as there is a <a class="zem_slink" title="GeoDjango" rel="homepage" href="http://geodjango.org/">GeoDjango</a> which is right up my alley.  You might need to try out a language or two to decide which the right one for you is.  Do some research on the different languages and you will see that there are some that are very similar and others that are very specific.  Find the one that suites your needs and have fun programming.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>139</wp:post_id>
  <wp:post_date>2011-01-25 21:39:53</wp:post_date>
  <wp:post_date_gmt>2011-01-26 04:39:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>so-why-use-python</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming-language"><![CDATA[Programming language]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Vehicle Route Optimization</title>
  <link>http://bob-roberts.net/2011/01/25/vehicle-route-optimization/</link>
  <pubDate>Wed, 26 Jan 2011 04:42:03 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/01/25/vehicle-route-optimization/</guid>
  <description/>
  <content:encoded><![CDATA[<h2>More than just software, it is a way of thinking</h2>
<p style="text-align:justify;">Route Optimization is simple put, finding the most efficient route.  In this economy where fuel costs keep rising it is harder than ever to remain in the black.  For private companies, this is all about making a profit and for public organizations this is all about staying afloat.  Basic business rules provide two basic options for improving profit margins; increase revenue or decrease expenses.  There have been plenty of articles written on vehicle route optimization and the use of software.  In this article I will try to take it a step further and show proof that route optimization software's work in addition to providing other ideas and or suggestions to create optimized routes.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Am I an expert?</h3>
<p style="text-align:justify;">Would I consider myself a route optimization expert?  It depends on how you would define an expert.  I guess at this point I would consider myself maybe not an expert but pretty darned close.  I have been in transportation for many years now and I once drove a garbage truck.  I was trained on my route by being shown which way to go.  Oh there were archaic maps done in pencil from a few years earlier but that was it.  Every day I went home and created map printouts and then highlighted the streets that I was responsible for.  I was told that if I did nothing but right turns and turnarounds I would eventually come back to my starting point.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Right turns</h3>
<p style="text-align:justify;">Interestingly enough right turns and turnarounds seemed to work.  What I didn't know at the time was that this is actually a successful technique in route optimization.  Businessweek had an article on March 5, 2007 entitled "How Technology Delivers for UPS."  I think that an excerpt says it all:</p>
<p style="text-align:justify;">"Not so long ago, UPS drivers worked off maps, 3-x-5 note cards, and their own memory to figure out the best way to run their routes. That changed in 2005 when UPS began to implement a $600 million route optimization system--think MapQuest on steroids--that each evening maps out the next day's schedule for the majority of its 56,000 drivers. So sophisticated is the software that it designs each route to minimize the number of left turns, thus reducing the time and gas that drivers waste idling at stoplights.</p>
UPSs innovation is an example of how technology can help companies capture institutional knowledge about their customers. Before, when a truck loader or driver walked out the door, the package- loading techniques or route tips they'd developed over the years usually walked out with them. Now that knowledge is accessible in a central system. That eases the burden on substitute drivers and shortens the training time for new ones, lessening the chances of a lapse in customer service. There's no question the new system has enabled UPS to run its routes more efficiently. In November alone the company's drivers logged 3 million fewer miles than they did the year before."
<p style="text-align:justify;">If that isn't enough proof about right hand turns then just search for "Mythbusters- Right Turn Only MiniMyth" and see where the folks at Mythbusters actually tested this and confirmed that even with more miles driven (as was the case in their test) making right turns resulted in using less fuel.</p>
<p style="text-align:justify;">Right turns not only increase efficiency by reducing fuel consumption, but they also increase safety for the driver and other vehicles on the road, given that the driver no longer has to face oncoming traffic.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Is there a faster way?</h3>
<p style="text-align:justify;">There were many times that I wondered if there was a faster/shorter way to run the route but always being up against the time clock I seldom ventured out to try a different way.  Most all of us drivers had nothing even close to resembling a route book or route map.  We all knew our routes like the back of our hands but when somebody was sick and we had to fill in on another route that was a whole different story.  Some guys were lucky with a shorter route or fewer stops and some were not.  I went through 2 route changes while I was a driver where the route manager decided to shake things up a bit and split up a couple of routes.  I didn't mind the old routes seeing as I was getting about 20 hours per week overtime.  Then the boss quit.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Manager time</h3>
<p style="text-align:justify;">After I was promoted to be a manager, one of my many tasks was route planning.  I knew how to find my way around pretty good but fixing our routes and our ongoing issue of overtime was a whole different story.  Wall maps and markers became my new friends.  I would have the drivers come in after their shift and "try" to make portions of their existing routes into smaller pieces so that they could tell me how long it took to run.  The thought was to put these smaller pieces together to create new even routes.  After a couple of weeks it was quite obvious that my idea wasn't going anywhere.</p>
<p style="text-align:justify;">The internet had all of my answers just waiting me to search for them.  A couple of demo's later I had learned new words like "high-density", "<a class="zem_slink" title="Geographic information system" rel="wikipedia" href="http://en.wikipedia.org/wiki/Geographic_information_system">GIS</a>", and "geocoding."  After the whole procurement process, I had hired the company that I now work for to fix my routing issues.  Granted using the software worked there were a lot of issues that needed to be fixed prior to letting it do its thing.  It seemed like every customer service representative spelled all the streets differently in the database.  Why can't databases have a built in spell checker?  To assist in the whole route optimization process, I cleaned up the database.  I hated it at the time but now a few years later I have found that many databases are a mess and there are plenty that are worse off than mine was.</p>
<p style="text-align:justify;">Putting the customers on the map was the next thing that needed to get fixed prior to letting the route optimization software perform its magic.  I lived in a very rural area that part of which hadn't even heard of the new 9/11 laws for addressing.  In fact part of our customers used postal rural route addresses.  If you know anything about geocoding, look to see how well it works to geocode a postal rural route address.  Ultimately, a good <a class="zem_slink" title="Global Positioning System" rel="wikipedia" href="http://en.wikipedia.org/wiki/Global_Positioning_System">GPS</a> device and a lot of patience was all I needed to get those customers on the map.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Magic Software</h3>
<p style="text-align:justify;">Now that we had a clean database and I had a "dot on the map" for all of my customers, we were ready to see the magic of the route optimization software.  I must say that I was impressed with the parameters that were used, some of which I hadn't even thought of.  I had to answer all sorts of questions:</p>

<ul>
	<li>
<div style="text-align:justify;">How long does it take to dump at the landfill?</div></li>
	<li>
<div style="text-align:justify;">What breaks do you drivers get?</div></li>
	<li>
<div style="text-align:justify;">What about pre and post trip inspections?</div></li>
	<li>
<div style="text-align:justify;">How many tons do your trucks hold?</div></li>
	<li>
<div style="text-align:justify;">How many pounds of trash do your customers set-out?</div></li>
	<li>
<div style="text-align:justify;">How long does it take at each stop?</div></li>
	<li>
<div style="text-align:justify;">Etc…</div></li>
</ul>
<p style="text-align:justify;">All of the questions answered, I waited as they created my new routes.  I used the service bureau option where they did all of the work and it was at least for us cheaper as we did not need to purchase a license for the software.</p>
<p style="text-align:justify;">Soon, I was in possession of our new routes and route maps.  It took the drivers a couple of weeks to get used to the new routes but after that just like magic our overtime woes were gone.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Men's Hair Club</h3>
<p style="text-align:justify;">Much in the way that the Men's Hair Club slogan used to be "I'm not only the Hair Club president, I'm also a Client" my slogan is "I'm not only a … employee, I'm a client."  After implementing the routes we literally eliminated our entire overtime issue.  I had done what was to be done and still sane afterwards.  I decided to move back west and I offered my services to the company that was my savior and had ended my routing troubles.  They were happy to have me.</p>
<p style="text-align:justify;">&nbsp;</p>

<h3>Other side of the computer screen</h3>
<p style="text-align:justify;">It has been a couple of years now and I really wish I could add up the money that my company and I have saved our clients.  I know that I could have retired on the money that just one of them saved in the first year or implementation!  It is great to have a product that I use that I know works.</p>
<p style="text-align:justify;">When you look to route optimization, think of the intangibles that the company you select can provide to you.  Are you dealing with fast tongued sale people or people that actually use the software?  Will the software salesman know what it is like to actually take the output maps and have to go out on a route to use them?</p>
<p style="text-align:justify;">There are other ways to save money and optimize your whole operation.  I am a huge advocate of the four day per week collection schedule.  Just look at the non-collecting time spent by employees.  There are required by law to perform a pre and post trip every day.  That is a minimum of 30 minutes for each route each day.  Switch from a five day per week collection to a four day per week collection and there are 30 minutes saved for each route.  There are still cities in this country that collect trash twice per week.  You will never prove to me that this isn't a waste.  General industry thumb rules show that 60% of the customers will set-out for the first collection of the week and only 40% will set-out for the second collection of the week.  What does all of this mean?  Simply put, your trucks drive by 40% of the customers the first collection and 60% the second.  That is a lot of driving to just collect 40% of your customers.  I have heard every rational for twice per week collection but it just comes down to politics.</p>
<p style="text-align:justify;">Route optimization software that can optimize the number of times or at what point in a route the truck geos to the landfill to dump can save you additional time.  As an ex garbage truck driver, I always went to the landfill when I could no longer pack any more trash into my truck.  Was that the optimal point in the route for me to go?  I would have had no clue but the software does.</p>
<p style="text-align:justify;">When I was trying to figure out my old routes they were for rear-loaders.  Trying to mentally figure out the routes out when they require a pass for each side of the street with the new automated side-loaders is even more difficult.  Granted I can do it in my head now, but it still is easier to let the software figure that out.</p>
<p style="text-align:justify;">Times have changed and the so has technology.  That being said, Route Optimization isn't just using software; although that is the biggest piece of it.  Management plays an essential role in how they set policies and make decisions.  Day changes are generally a taboo subject when dealing with route optimization, but must of the time the current collection days are not optimized and they require more trucks to run on some days and less on others.  This is sometimes hard to sell to a city council or a board of directors but a strong commitment by management can prove that it is worth the trouble.</p>
<p style="text-align:justify;">&nbsp;</p>
<p style="text-align:justify;">Like I said, Route Optimization is more than software; it is a way of thinking.</p>
<p style="text-align:justify;">&nbsp;</p>
<p style="text-align:right;">©Bob Roberts 2010</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>141</wp:post_id>
  <wp:post_date>2011-01-25 21:42:03</wp:post_date>
  <wp:post_date_gmt>2011-01-26 04:42:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vehicle-route-optimization</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>697</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2012-11-24 12:46:11</wp:comment_date>
    <wp:comment_date_gmt>2012-11-24 19:46:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You would be surprised then to know that the small company that I worked for only serviced ~ 13,000 customers.  Also, many of the clients where I worked at were relatively small cities up to very large cities.

Waste Management and Republic, as far as I know, both use in house routing software.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>695</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1353786372.845694065093994140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1353786372</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-24 19:46:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>695</wp:comment_id>
    <wp:comment_author><![CDATA[Art]]></wp:comment_author>
    <wp:comment_author_email>artyom@ufl.edu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>99.71.153.8</wp:comment_author_IP>
    <wp:comment_date>2012-11-23 23:00:58</wp:comment_date>
    <wp:comment_date_gmt>2012-11-24 06:00:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very interesting notes... I am just curious, which garbage collecting company did you work for? I know a little about them, and there are only two, Waste Manachment and Republic, that probably would pay big money to have such system... And which software company was building the solution?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1353736859.6457979679107666015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1353786373</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1353786374.0886070728302001953125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-24 06:00:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>698</wp:comment_id>
    <wp:comment_author><![CDATA[Art]]></wp:comment_author>
    <wp:comment_author_email>artyom@ufl.edu</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>99.71.153.8</wp:comment_author_IP>
    <wp:comment_date>2012-11-24 23:08:06</wp:comment_date>
    <wp:comment_date_gmt>2012-11-25 06:08:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well, I assume 13k customers are spread among different cities or split amond different sites because otherwise it is a large number... :)  

Many comercial applications I have seen do ok with small sites with small number of stops... But when it comes to handle more than 1000 stops, many of them get stuck running long time or do not provide a really good solution with all business requirements... Sometimes some smart RMs even by loocking at the solution can make few changes and get it a little better in terms of cost... Can you tell me some details about size of the problem, running time and solution quality? 

I know Waste Management builds now in house... 2 years now... But I wander if you know whether Republic does the same and how... I believe I noticed somewhere that you live in Arizona, so I thout you did some biseness with Republic since I believe there are in Phoenix....]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>697</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1353823686</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1353823686.9369399547576904296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-25 06:08:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>703</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2012-12-01 19:08:14</wp:comment_date>
    <wp:comment_date_gmt>2012-12-02 02:08:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I think that we are confusing the difference between commercial customers and residential trash collection.  For the 13k customers I was talking about residential trash collection which is considered high-density.  These would be routes with 600 - 1200 or more stops per day.

For commercial front loader routing you are talking about low-density point to point routing.  These would be routes with 30 - 80 stops per day.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>698</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354414095</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354414096.2190740108489990234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-02 02:08:14</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>828</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-03-12 16:59:08</wp:comment_date>
    <wp:comment_date_gmt>2013-03-12 23:59:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I would take a look at http://www.rams-pro.com/  Great bunch of guys and a great product plus they have a couple of guys there in Australia.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>827</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363132748.8830280303955078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363132748</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-12 23:59:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>829</wp:comment_id>
    <wp:comment_author><![CDATA[Craig]]></wp:comment_author>
    <wp:comment_author_email>craig.burns@solo.com.au</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>202.9.16.186</wp:comment_author_IP>
    <wp:comment_date>2013-03-12 17:13:15</wp:comment_date>
    <wp:comment_date_gmt>2013-03-13 00:13:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cheers Bob!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363133595</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363133595.6712939739227294921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-13 00:13:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>827</wp:comment_id>
    <wp:comment_author><![CDATA[Craig]]></wp:comment_author>
    <wp:comment_author_email>craig.burns@solo.com.au</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>202.9.16.186</wp:comment_author_IP>
    <wp:comment_date>2013-03-12 15:06:21</wp:comment_date>
    <wp:comment_date_gmt>2013-03-12 22:06:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Gday Bob, Im in Domestic garbage collection with sideloaders and we have used hard copy maps with 'runs' or routes coloured in with highlighters for donkeys years. Our collection weeks might be as many as 70000 services in a particular area and our run system appears to work ok. We mark start and finish points for loads and by way of tweaking bin numbers and hours seem to get a fairly even and efficient collection process between drivers. BUT... the drivers choose their particular route. Usually we'd expect they may do main roads and schools early to avoide the traffic or parked cars and only make left turns but there are different approaches to how a block of houses is collected.
We are investigating the use of in cab software for route optimization (touch screen map with GPS 'navman' type directions) and would be keen to understand the solution you have used and are advocating.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363125982.209415912628173828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363132602</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363132602.3054759502410888671875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-12 22:06:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>832</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-03-13 15:27:17</wp:comment_date>
    <wp:comment_date_gmt>2013-03-13 22:27:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Tell them I said Hi!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>829</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363213639.9378139972686767578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363213638</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-13 22:27:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>876</wp:comment_id>
    <wp:comment_author><![CDATA[ITGS Case Study Topics - Brian Duffy]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://blogs.swa-jkt.com/swa/brianduffy/2013/04/08/itgs-case-study-topics/</wp:comment_author_url>
    <wp:comment_author_IP>202.43.182.243</wp:comment_author_IP>
    <wp:comment_date>2013-04-08 01:16:42</wp:comment_date>
    <wp:comment_date_gmt>2013-04-08 08:16:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Route planning software / route optimization [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1365430305</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365430306.27556896209716796875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-08 08:16:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Adding a Python Script to a new Toolbar in ArcView 9.3.1. tutorial</title>
  <link>http://bob-roberts.net/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/</link>
  <pubDate>Mon, 31 Jan 2011 00:16:16 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/01/30/adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1/</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;"><span style="color:#555555;font-family:Verdana;font-size:10pt;">So you finished your <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python</a> ArcToolbox tool and now you want to add a shortcut to the toolbar.  This tutorial is based on the assumption that you have already added your script to the ArcToolbox tools.  If not I will cover that in another tutorial. I will show how to add a button in addition to how to add a menu to <a class="zem_slink" title="ArcView" rel="homepage" href="http://www.esri.com/software/arcgis/arcview/index.html">ArcView</a> toolbar. Both are convenient ways to launch your Python script tools without having to open ArcToolbox.
</span></p>
<span style="color:#555555;font-family:Verdana;font-size:10pt;">First we will create a button to launch your tool.
</span>
<ul>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Go to Tools &gt; Customize
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth1.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span>
<ul>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">This will open up to the Toolbars tab. If you do not want to add your own Toolbar, skip this section.
</span></li>
</ul>
</li>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Click New for a new toolbar:
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth2.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Name your toolbar
</span></li>
</ul>
<ul>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Save it to either the current project (the .mxd) or to the Normal.mxt for use in all projects.
</span></div></li>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">This will create an empty toolbar. Drag the toolbar to the top of ArcView.
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth3.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
</ul>
<span style="color:#555555;font-family:Verdana;font-size:10pt;">Now that you have a new and empty toolbar we need to create the button for the Python tool.
</span>
<ul>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Click on the Commands tab under Customize:
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth4.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Scroll to the bottom of the Categories window:
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth5.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Highlight [UIControls] and at the bottom click New UIControl
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth6.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Select UIButtonControl and hit Create
</span></li>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Click in the box for the name if you wish to rename the tool
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth7.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
	<li>
<div><span style="color:#555555;font-family:Verdana;font-size:10pt;">Next, click and drag the new UIButtonControl1 to your toolbar that was just created.
</span></div>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth8.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></li>
</ul>
<span style="color:#555555;font-family:Verdana;font-size:10pt;">Now that the button is one the toolbar, we need to set it up to launch your Python tool.
</span>
<ul>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Right click on the new button and you should see several options here.
</span></li>
</ul>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth9.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span>
<ul>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">You can change the button image to whatever you would like or you can just use "Text Only" for the name of the tool.
</span></li>
</ul>
<img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth10.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span>

<span style="color:#555555;font-family:Verdana;font-size:10pt;">Now that we have the button on the toolbar and changed the way that it displays, it is time to add the Visual Basic snippet to launch the tool.
</span>
<ul>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Click on "View Source". This should open up the Microsoft Visual Basic editor:
</span></li>
</ul>
<p style="margin-left:36pt;"><img src="http://bobspython.files.wordpress.com/2011/01/013111_0016_addingapyth11.png" alt="" /><span style="color:#555555;font-family:Verdana;font-size:10pt;">
</span></p>
<p style="margin-left:36pt;">&nbsp;</p>
<p style="margin-left:36pt;">&nbsp;</p>

<ul>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Copy and Paste the following script between the <strong>Private Sub UIButtonControl1_Click() </strong>and <strong>End Sub:</strong></span></li>
</ul>
[sourcecode language="VB"]

Dim pUID As New UID
pUID = &quot;esriGeoprocessingUI.ArcToolboxExtension&quot;
Dim pGP As IGeoProcessor
Set pGP = New GeoProcessor
Dim pATBExt As IArcToolboxExtension
Set pATBExt = Application.FindExtensionByCLSID(pUID)
Dim pAtb As IArcToolbox
Set pAtb = pATBExt.ArcToolbox
Dim pTool As IGPTool
Set pTool = pAtb.GetToolbyNameString(&quot;mypythontoolname&quot;)
Dim pCommand As IGPToolCommandHelper
Set pCommand = New GPToolCommandHelper
pCommand.SetTool pTool
pCommand.Invoke Nothing&lt;/span&gt;

[/sourcecode]
<ul>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">You will need to replace <span style="background-color:yellow;">"mypythontoolname"</span> with the name of your Python tool.
</span></li>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Click the save button at the top of the VB editor.
</span></li>
	<li><span style="color:#555555;font-family:Verdana;font-size:10pt;">Click on your button and it should open.
</span></li>
</ul>
<p style="text-align:justify;"><span style="color:#555555;font-family:Verdana;font-size:10pt;">There are a few things that can cause the button not to open your Python tool. The most common that I have seen is that the Visual Basic reference is not selected as available for using the <span style="color:#2970a7;">ESRI <span style="color:#555555;">GeoprocessingUI Object Library.  This can be added by going into the Visual Basic editor again.  At the top there is an option for Tools and then select references.  Make sure that the ESRI GeoprocessingUI Object Library is checked.  If not, check it to make the library available.
</span></span></span></p>
<p style="text-align:justify;"><span style="color:#555555;font-family:Verdana;font-size:10pt;">If you want to add a drop down menu for listing multiple Python tools the steps are mostly the same. After creating a new toolbar, you can create a new menu before you create the tool buttons.
</span></p>
<p style="text-align:justify;"><span style="color:#555555;font-family:Verdana;font-size:10pt;">On the Customize &gt; Commands tab in the left hand pane there is an option for [New Menu].  Create the new menu in the same manner as creating the UIControls button.  Add the menu to the toolbar and then you can add tool buttons to the drop down menu by clicking and dragging them to the drop down.
</span></p>
<p style="text-align:justify;"><span style="color:#555555;font-family:Verdana;font-size:10pt;">Hope that helps!</span></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>166</wp:post_id>
  <wp:post_date>2011-01-30 17:16:16</wp:post_date>
  <wp:post_date_gmt>2011-01-31 00:16:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>adding-a-python-script-to-a-new-toolbar-in-arcview-9-3-1</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Export Shapefile as .csv tutorial</title>
  <link>http://bob-roberts.net/2011/01/30/export-shapefile-as-csv/</link>
  <pubDate>Mon, 31 Jan 2011 01:19:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/01/30/export-shapefile-as-csv/</guid>
  <description/>
  <content:encoded><![CDATA[<span style="color:#555555;font-size:12pt;">I recently had issues with a simple export to .csv.  What I wanted to do is pull in a shapefile and delete a bunch of fields and then export it out to a .csv (this works the same for saving to a text file).  It actually turned out easier than I thought as I did not need to delete all the fields but rather I just wrote out the fields that I wanted to keep:
</span>

[sourcecode language="Python"]

# Import system modules
import sys, string, os, glob, csv
import arcgisscripting
# Create the Geoprocessor object
gp = arcgisscripting.create()

# System arguments
input = sys.argv[1]
output = sys.argv[2]

# Set our new outputnew to be opened output with write privileges.
outputnew=open(output,'wb')

# Set linewriter as csv.writer written out to outputnew
# The delimiter can be set as comma, pipe etc.
linewriter=csv.writer(outputnew, delimiter=',')

# If you want to pass all fields thru then disregard this.  I use this as I only want to pass some of the fields out and these are listed in Python list
good_fields = ['field 1', 'field 2', 'field 3', 'field 4', 'field 5']

# Now we go thru all of the fields and keep just those that are in the list of good fields
flds=gp.ListFields(stops_in)
fld = flds.Next()
header=[]
while fld:
    if fld.Name in good_fields:
        value=fld.Name
        header.append(value)
    fld = flds.Next()
linewriter.writerow(header)

# And we run thru each row populating the kept fields
row=cursor.Next()
row_num = 1
while row:
    line=[]
    if row_is_valid(row_num, row):
        for fld in header:
            value=row.GetValue(fld)
            line.append(value)
        linewriter.writerow(line)
    row=cursor.Next()
    row_num += 1

del cursor
gp.AddMessage(&quot;Finished&quot;)
output.close()

[/sourcecode]

<span style="color:#555555;font-size:12pt;">
</span>

<span style="color:#555555;font-size:12pt;">I originally attempted to make a copy of the original shapefile and then a table view from the shapefile. In the end all I needed to do was simply read the input shapefile and then write it out to the .csv file.</span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>171</wp:post_id>
  <wp:post_date>2011-01-30 18:19:05</wp:post_date>
  <wp:post_date_gmt>2011-01-31 01:19:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>export-shapefile-as-csv</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_trash_meta_comments_status</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:50;s:5:"trash";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>101</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan Furlong]]></wp:comment_author>
    <wp:comment_author_email>ryanfurlong@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>208.82.124.93</wp:comment_author_IP>
    <wp:comment_date>2011-02-09 09:32:58</wp:comment_date>
    <wp:comment_date_gmt>2011-02-09 16:32:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Could this be modified to export to dbf instead of csv?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297269179.4668";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297269322</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297269323.0508";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-09 16:32:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>102</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-09 09:36:46</wp:comment_date>
    <wp:comment_date_gmt>2011-02-09 16:36:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Absolutely but that can be accomplished much easier than using the script.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>101</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297269408</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297269409.1518";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-09 16:36:46</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>121</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-14 10:17:35</wp:comment_date>
    <wp:comment_date_gmt>2011-02-14 17:17:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If you have ArcGIS installed then you will have Python installed.  This script could be run from IDLE or PythonWin or you could write this script and then add it as a toolbox tool.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>120</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297703857</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297703857.3103";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-14 17:17:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>120</wp:comment_id>
    <wp:comment_author><![CDATA[kumm]]></wp:comment_author>
    <wp:comment_author_email>blr.snekithan@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>210.89.51.183</wp:comment_author_IP>
    <wp:comment_date>2011-02-14 10:12:23</wp:comment_date>
    <wp:comment_date_gmt>2011-02-14 17:12:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[hi, where should I run this script?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297703575.1152";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297703575</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297703543.7185";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-14 17:12:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Route Optimization Presentation</title>
  <link>http://bob-roberts.net/2011/02/03/route-optimization-presentation/</link>
  <pubDate>Fri, 04 Feb 2011 01:44:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=193</guid>
  <description/>
  <content:encoded><![CDATA[UPDATE: The presentation is now located in the Downloads section on the right ==&gt;

&nbsp;

I have put together a Power Point presentation for a Route Optimization talk that I am going to give next week.  If you are interested, please contact me and I will be happy to send you a copy of it.

I will be adding more posts regarding vehicle route optimization in the near future as I am putting together a full article on the subject.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>193</wp:post_id>
  <wp:post_date>2011-02-03 18:44:21</wp:post_date>
  <wp:post_date_gmt>2011-02-04 01:44:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>route-optimization-presentation</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>123</wp:comment_id>
    <wp:comment_author><![CDATA[jen]]></wp:comment_author>
    <wp:comment_author_email>jen@landmarkla.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.landmarkla.com</wp:comment_author_url>
    <wp:comment_author_IP>69.198.89.97</wp:comment_author_IP>
    <wp:comment_date>2011-02-15 11:00:00</wp:comment_date>
    <wp:comment_date_gmt>2011-02-15 18:00:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Can I see the presentation? Also do you know of a good GPS device that we could put in the trash trucks that gives turn by turn directions and could be programmed by using routs and trips, something similar or from a computer?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297793129</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297793129.3491";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297792800.7777";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-15 18:00:00</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>124</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-15 11:12:56</wp:comment_date>
    <wp:comment_date_gmt>2011-02-15 18:12:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<a href="http://dl.dropbox.com/u/1912236/Solid%20Waste%20Routing.pdf" rel="nofollow">Solid Waste Routing presentation</a>

There are several vendors that offer on-board computers.  Most all of these will allow input of routed customers to be visually displayed.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>123</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297793577</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297793578.0918";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-15 18:12:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>59</wp:comment_id>
    <wp:comment_author><![CDATA[randy horner]]></wp:comment_author>
    <wp:comment_author_email>randy.horner@nisc.coop</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>12.10.126.135</wp:comment_author_IP>
    <wp:comment_date>2011-02-04 06:28:22</wp:comment_date>
    <wp:comment_date_gmt>2011-02-04 13:28:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'd love a copy.

Thanks]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1296826102.3468";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1296830279</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1296830279.757";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-04 13:28:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>71</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-04 14:02:38</wp:comment_date>
    <wp:comment_date_gmt>2011-02-04 21:02:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sent you an email earlier.  Feel free to contact me if you have any questions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>59</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1296853358</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1296853358.9186";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-04 21:02:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>72</wp:comment_id>
    <wp:comment_author><![CDATA[Doug]]></wp:comment_author>
    <wp:comment_author_email>augustinethecat@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>198.102.62.250</wp:comment_author_IP>
    <wp:comment_date>2011-02-04 14:33:57</wp:comment_date>
    <wp:comment_date_gmt>2011-02-04 21:33:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'd love to see the presentation (sent you an email earlier, no response yet).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1296855238.5897";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1296855304</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1296855304.852";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-04 21:33:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>73</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-04 14:37:06</wp:comment_date>
    <wp:comment_date_gmt>2011-02-04 21:37:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just sent it to you.  Check spam if you do not get.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>72</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1296855426</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1296855426.1149";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-04 21:37:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>577</wp:comment_id>
    <wp:comment_author><![CDATA[lauren]]></wp:comment_author>
    <wp:comment_author_email>laurentracytalbot@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>161.185.152.5</wp:comment_author_IP>
    <wp:comment_date>2012-07-27 13:16:17</wp:comment_date>
    <wp:comment_date_gmt>2012-07-27 20:16:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[can i see the presentation? i am super curious]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343421085.01364994049072265625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343420177.7123320102691650390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343421084</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-27 20:16:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>578</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>66.87.68.90</wp:comment_author_IP>
    <wp:comment_date>2012-07-27 13:33:31</wp:comment_date>
    <wp:comment_date_gmt>2012-07-27 20:33:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The PowerPoint is http://db.tt/fZZXEJVU and the PDF is http://db.tt/nfmj01Xv]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>577</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343421211</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343421211.35116291046142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-27 20:33:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Questions/Contact</title>
  <link>http://bob-roberts.net/contact/</link>
  <pubDate>Fri, 04 Feb 2011 20:55:43 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?page_id=215</guid>
  <description/>
  <content:encoded><![CDATA[Feel free to drop me a line if you have any questions or comments.

[contact-form subject="Email from Blog" to="broberts_az@yahoo.com"] [contact-field label="Name" type="name" required="true" /] [contact-field label="Email" type="email" required="true" /] [contact-field label="Website" type="url" /] [contact-field label="Comment" type="textarea" required="true" /] [/contact-form]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>215</wp:post_id>
  <wp:post_date>2011-02-04 13:55:43</wp:post_date>
  <wp:post_date_gmt>2011-02-04 20:55:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>contact</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_g_feedback_shortcode</wp:meta_key>
    <wp:meta_value><![CDATA[ [contact-field label="Name" type="name" required="true" /] [contact-field label="Email" type="email" required="true" /] [contact-field label="Website" type="url" /] [contact-field label="Comment" type="textarea" required="true" /] ]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Welcome to my blog.....</title>
  <link>http://bob-roberts.net/2011/02/05/why-route-optimization-articles/</link>
  <pubDate>Sat, 05 Feb 2011 18:09:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=221</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I started to learn <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python programming</a> last year to use in <a class="zem_slink" title="ArcGIS" href="http://en.wikipedia.org/wiki/ArcGIS" rel="wikipedia">ArcGIS</a>.  I read a couple of books about Python and jumped right in.  I had help in the beginning from an avid forum user.  Since then I have continuously ventured into new areas of using Python.</p>
<p style="text-align:justify;">Recently the user forum at ESRI for Python Geoprocessing underwent some changes that makes it hard to sift through the posts there.</p>
<p style="text-align:justify;">As I started to take Python outside of ArcGIS, I was immediately confronted with a lack of information on <a class="zem_slink" title="WxPython" href="http://en.wikipedia.org/wiki/WxPython" rel="wikipedia">wxPython</a> and using geoprocessing.  With a lot of help from friends I am well along in creating a GUI that uses wxPython as well as incorporating ArcGIS geoprocessing.</p>
<p style="text-align:justify;">My goal for this site is to continuously add script examples and to create a meeting place for Python users.</p>
<p style="text-align:justify;">I recently started to add articles about route optimization or <a class="zem_slink" title="Municipal solid waste" href="http://en.wikipedia.org/wiki/Municipal_solid_waste" rel="wikipedia">Solid Waste</a> routing.  I just wanted to explain the reason that I added this onto my otherwise all Python blog.</p>
<p style="text-align:justify;">It is because of my job doing Route Optimization that I ever ventured into Python and the rest that followed.  Our primary software runs on top of ESRI's <a class="zem_slink" title="ArcView" href="http://www.esri.com/software/arcgis/arcview/index.html" rel="homepage">ArcView</a>.  From always using ArcView, I found a need (or more of a desire) to automate some of my daily functions.</p>
<p style="text-align:justify;">As I have learned from programmers, it seems that the majority of the programmers that I know have the ideology that the least amount of work that they need to perform, the better.  This isn't to say that they are lazy, this is to say that their goal is to automate as much as possible and work smarter not harder!</p>
<p style="text-align:justify;">So Python was the natural way to go for me.</p>
<p style="text-align:justify;">Although the company that I work for sells Route Optimization software, I felt the need to share my knowledge of "alternative" techniques to route optimization and/or improving efficiency in Solid Waste collection.  I plan on adding more posts regarding this in the future.</p>
<p style="text-align:justify;">So even though Route Optimization itself has nothing to do with Python, it is what sent me down the Python Path.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>221</wp:post_id>
  <wp:post_date>2011-02-05 11:09:12</wp:post_date>
  <wp:post_date_gmt>2011-02-05 18:09:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-route-optimization-articles</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>103</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan Furlong]]></wp:comment_author>
    <wp:comment_author_email>ryanfurlong@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>208.82.124.93</wp:comment_author_IP>
    <wp:comment_date>2011-02-09 10:04:49</wp:comment_date>
    <wp:comment_date_gmt>2011-02-09 17:04:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Do you have a repository of links to tutorials/guides/books that have helped you the most in your learnings of Python/wxPython?  As a Pynewb I would be very interested in them!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297271090</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297271091.6536";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-09 17:04:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>164</wp:comment_id>
    <wp:comment_author><![CDATA[Matthew Rantala]]></wp:comment_author>
    <wp:comment_author_email>SisuRunner@Gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>160.94.215.42</wp:comment_author_IP>
    <wp:comment_date>2011-02-21 10:32:40</wp:comment_date>
    <wp:comment_date_gmt>2011-02-21 17:32:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bob,  I'm curious which "of the Heuristic rules have become outdated"?  Thanks, interesting read.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1152591</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298309763</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298309763.4953";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1298309560.434";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"sisurunner";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-21 17:32:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>165</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-21 10:41:09</wp:comment_date>
    <wp:comment_date_gmt>2011-02-21 17:41:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just with the improvements to Solid Waste collection vehicles, I do not think that starting at higher elevations is that important anymore.  Glad that you enjoyed the article.  Next week will be Part 4 "Right Turns".]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>164</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298310070</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298310070.3792";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-21 17:41:09</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>114</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-10 23:34:03</wp:comment_date>
    <wp:comment_date_gmt>2011-02-11 06:34:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good idea Ryan.  I should put together a list.  Mostly learned from scouring forums myself.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>103</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297406043</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297406043.9682";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-11 06:34:03</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Solid Waste Routing tip of the week</title>
  <link>http://bob-roberts.net/2011/02/06/solid-waste-routing-tip-of-the-week/</link>
  <pubDate>Sun, 06 Feb 2011 21:37:24 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/?p=232</guid>
  <description/>
  <content:encoded><![CDATA[UPDATE Today was Part 2 of Solid Waste Routing Tip of the Week.

I will soon be posting a <a class="zem_slink" title="Municipal solid waste" rel="wikipedia" href="http://en.wikipedia.org/wiki/Municipal_solid_waste">solid waste</a> routing tip of the week.  These will be ideas or strategies for improving efficiency in solid <a class="zem_slink" title="Waste collection" rel="wikipedia" href="http://en.wikipedia.org/wiki/Waste_collection">waste collection</a>.  I will also be offering my new paper "Solid Waste Routing" as a download.

Feel free to contact me if you would like more information or to comment on my Route Optimization blog articles.

BR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>232</wp:post_id>
  <wp:post_date>2011-02-06 14:37:24</wp:post_date>
  <wp:post_date_gmt>2011-02-06 21:37:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>solid-waste-routing-tip-of-the-week</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>113</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts@c2logix.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-02-10 23:32:54</wp:comment_date>
    <wp:comment_date_gmt>2011-02-11 06:32:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You are most welcome and I hope that you do bookmark it.

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297405974</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297405974.4085";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-11 06:32:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Solid Waste Routing - Improving Efficiency in Solid Waste Collection Part 1</title>
  <link>http://bob-roberts.net/2011/02/08/solid-waste-routing-improving-efficiency-in-solid-waste-collection/</link>
  <pubDate>Wed, 09 Feb 2011 02:28:53 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/02/08/solid-waste-routing-improving-efficiency-in-solid-waste-collection/</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Here is the first excerpt of my paper on Solid Waste Routing.  I will have several parts to this...</p>
<p style="text-align:justify;">In today's struggling economy we are all forced to look at ways to reduce expenses.  This applies to Private and Public operations equally.  For the Private operation, it is all about making a profit and not losing money.  This is difficult due to the competitiveness of the industry.  Raising rates can often open the door for a competitor to move in as well as being met with high resistance from customers.  For the Public operation, it is all about staying within the dwindling budget.  It is quite difficult to get approval for a rate increase on even more difficult to get an increase in budget.</p>
<p style="text-align:justify;">Basic business rules state that to increase profit margin, one must either increase revenue or decrease expenses.</p>
<p style="text-align:justify;">Many strategies or techniques exist for improving solid <a class="zem_slink" title="Waste collection" rel="wikipedia" href="http://en.wikipedia.org/wiki/Waste_collection">waste collection</a>.  Any of these, if applied, stands to cut expenses and improve efficiency.  These strategies can range from simple operational changes to more extreme collection day changes.  Many of these strategies are common sense and can be used for most types of routing.  With advancements in technologies there are now many options to choose from for computerized routing.</p>
<p style="text-align:justify;">As <a class="zem_slink" title="Collection cost" rel="wikipedia" href="http://en.wikipedia.org/wiki/Collection_cost">collection costs</a> make up between 40 and 60 percent of the total <a class="zem_slink" title="Waste management" rel="wikipedia" href="http://en.wikipedia.org/wiki/Waste_management">solid waste management</a> system costs, this area is generally where the biggest savings can occur.</p>
This article will be broke down into two separate areas for improving efficiency:
<ul>
	<li>Route Optimization</li>
	<li>Operational Changes</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>237</wp:post_id>
  <wp:post_date>2011-02-08 19:28:53</wp:post_date>
  <wp:post_date_gmt>2011-02-09 02:28:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>solid-waste-routing-improving-efficiency-in-solid-waste-collection</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What about a geoprocessing tip of the week?</title>
  <link>http://bob-roberts.net/2011/02/09/what-about-a-geoprocessing-tip-of-the-week/</link>
  <pubDate>Thu, 10 Feb 2011 03:48:47 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=260</guid>
  <description/>
  <content:encoded><![CDATA[Would anybody be interested if I did a Python geoprocessing tip of the week?  Maybe every week cover one of the gp commands?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>260</wp:post_id>
  <wp:post_date>2011-02-09 20:48:47</wp:post_date>
  <wp:post_date_gmt>2011-02-10 03:48:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-about-a-geoprocessing-tip-of-the-week</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>105</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan Furlong]]></wp:comment_author>
    <wp:comment_author_email>ryanfurlong@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>68.231.88.195</wp:comment_author_IP>
    <wp:comment_date>2011-02-09 20:51:01</wp:comment_date>
    <wp:comment_date_gmt>2011-02-10 03:51:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Do it!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297309861</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1297309861.348";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-10 03:51:01</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>106</wp:comment_id>
    <wp:comment_author><![CDATA[Sindile]]></wp:comment_author>
    <wp:comment_author_email>sindile.bidla@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>197.169.40.134</wp:comment_author_IP>
    <wp:comment_date>2011-02-10 00:29:13</wp:comment_date>
    <wp:comment_date_gmt>2011-02-10 07:29:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That would be great.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297322954.4823";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297347914</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297347915.3027";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-10 07:29:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>107</wp:comment_id>
    <wp:comment_author><![CDATA[Matt Priour]]></wp:comment_author>
    <wp:comment_author_email>mpriour@kestrelcomputer.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/mattpriour</wp:comment_author_url>
    <wp:comment_author_IP>72.12.120.98</wp:comment_author_IP>
    <wp:comment_date>2011-02-10 07:08:17</wp:comment_date>
    <wp:comment_date_gmt>2011-02-10 14:08:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I would absolutely love something like that. Thanks so much.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297346898.2111";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297347913</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297347913.6883";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-10 14:08:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>109</wp:comment_id>
    <wp:comment_author><![CDATA[Eric]]></wp:comment_author>
    <wp:comment_author_email>eric.haflett@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>65.40.197.192</wp:comment_author_IP>
    <wp:comment_date>2011-02-10 08:35:58</wp:comment_date>
    <wp:comment_date_gmt>2011-02-10 15:35:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I agree, great idea.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297352159.0952";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297352182</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297352182.9119";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-10 15:35:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>111</wp:comment_id>
    <wp:comment_author><![CDATA[Doug Newcomb]]></wp:comment_author>
    <wp:comment_author_email>doug_newcomb@fws.gov</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>164.159.59.2</wp:comment_author_IP>
    <wp:comment_date>2011-02-10 13:11:18</wp:comment_date>
    <wp:comment_date_gmt>2011-02-10 20:11:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Wonderful idea!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297368679.1677";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297378867</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297378867.6266";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-10 20:11:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>280</wp:comment_id>
    <wp:comment_author><![CDATA[Lynn]]></wp:comment_author>
    <wp:comment_author_email>cutenall@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>170.115.248.20</wp:comment_author_IP>
    <wp:comment_date>2011-06-08 10:29:26</wp:comment_date>
    <wp:comment_date_gmt>2011-06-08 17:29:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, that would be great.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307554682</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307554683.2764";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307554166.6746";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-08 17:29:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Creating a simple Python Geoprocessing tool and adding it to ArcToolbox in AV 9.3</title>
  <link>http://bob-roberts.net/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/</link>
  <pubDate>Sun, 13 Feb 2011 21:10:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Ask and thou shalt receive… Well it seems as though there is a LOT of interest out there in Python Geoprocessing for <a class="zem_slink" title="ESRI" href="http://www.esri.com/" rel="homepage">ESRI</a> <a class="zem_slink" title="ArcView" href="http://www.esri.com/software/arcgis/arcview/index.html" rel="homepage">ArcView</a> 9.x.  This increased interest may be due to the release of ArcView 10 with ArcPy.  For those of you that do not know, Python has been shipped with ArcView for many years now.  The ArcToolbox tools are based on Python and when you create a model with the model builder you can export the <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python code</a>.
</span></p>
<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">This week's tutorial will be creating a very simple Python geoprocessing script and then creating a new ArcToolbox tool and adding the Python script to the new toolbox.
</span></p>
<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">I once thought it would be nice to have a simple tool that told me all of the field names in a <a class="zem_slink" title="Shapefile" href="http://en.wikipedia.org/wiki/Shapefile" rel="wikipedia">shapefile</a>.  Sure I could open up the attribute table and see them but if I did that I wouldn't have written my simple tool.
</span></p>
<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:11pt;color:#333333;"><strong>The Script
</strong></span></p>
<p style="background:white;"><span style="font-family:Georgia;font-size:10pt;color:#808080;"><span style="color:#333333;">I think this script is simple enough to explain it with remark statements.</span>
</span></p>
<p style="background:white;"></p>

[sourcecode language="Python"]

#listfields.py
import sys, os, glob

# We need to create the geoprocessor object
import arcgisscripting
gp = arcgisscripting.create(9.3)

# We need to create an argument and assign it to the value of &quot;file&quot;
file = sys.argv[1]

# The workspace always needs to be identified and here we will use the location of &quot;file&quot;
gp.workspace = os.path.dirname(sys.argv[1])

# A good friend to use is the AddMessage.  This will print to the tool window.  Very useful with troubleshooting as well.
gp.AddMessage(&quot;Starting Process.....&quot;)

# Using ListFields, we get a list of the fields in the inputted &quot;file&quot;
fieldlist = gp.ListFields(&quot;&quot;+file+&quot;&quot;)
for field in fieldlist:
    FieldName = field.Name

    # As we go thru the list, AddMessage will print each field name out to the tool window
    gp.AddMessage(FieldName)

# And we add one last message so that we know the entire process completed
gp.AddMessage(&quot;Process Complete&quot;)

[/sourcecode]
<p style="background:white;"></p>
<p style="background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Pretty simple stuff there, but I just wanted to use a simple script for this tutorial.
</span></p>
<p style="background:white;"></p>
<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:11pt;color:#333333;"><strong>The Toolbox
</strong></span></p>
<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Now we will create a new Toolbox where the list field's script will go.
</span></p>

<ol>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">In ArcToolbox, right click on the ArcToolbox folder at the top and select New Toolbox…
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi1.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Give your toolbox a name
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi2.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Right click on your new toolbox and select Add =&gt; Script
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi3.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Fill in the fields on the Add Script and click "Next". I always use the "Store <a class="zem_slink" title="Path (computing)" href="http://en.wikipedia.org/wiki/Path_%28computing%29" rel="wikipedia">relative path</a> names….." to make sharing the toolbox easier.
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi4.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Select the listfields.py file and check the "Run Python script in process" then click "Next"
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi5.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="color:#333333;"><span style="font-family:Georgia;font-size:10pt;">Now the hard part. In the script that we created, there was one argument that we used "</span><span style="font-family:Consolas;font-size:9pt;">file = sys.argv[1]" </span><span style="font-family:Georgia;font-size:10pt;">The beauty of Python geoprocessing is that there is a user interface to work with and you do not have to write all of the requirements for your inputs or output.
</span></span></div>
<ol>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">The display name is what you will see in the tool. For this example we will use "Select your file:"
</span></div></li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">The Data Type produces a drop down to choose what type of file is to be selected. For this example we will use "Shapefile"
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi6.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">The default Parameter Properties will all be correct for this example. These properties are used to control each of the Parameters (in this example we only have the "Select your file:") Settings vary from Required or optional field, input or output direction etc.. Click "Finish"
</span></div></li>
</ol>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;margin-left:36pt;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi7.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;margin-left:36pt;"></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">That is all there is to it. You now have your new toolbox entitled "My tools" and within that toolbox a new tool entitled "ListFields"
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi8.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
</li>
	<li>
<div style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">As with any Toolbox tool, click on the new tool to open it:
</span></div>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:#333333;"><img src="http://bobspython.files.wordpress.com/2011/02/021311_2110_creatingasi9.png" alt="" /><span style="font-family:Georgia;font-size:10pt;">
</span></span></p>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"></p>
</li>
</ol>
<p style="text-align:justify;background:white;"><span style="font-family:Georgia;font-size:10pt;color:#333333;">Go ahead and select a file and click "OK".
</span></p>
<p style="text-align:justify;background:white;"></p>
<p style="text-align:justify;background:white;"><span style="color:black;font-family:Georgia;font-size:10pt;"><span style="color:#333333;">Obviously this is a basic example of what can be done but it is a start.</span>
</span></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>286</wp:post_id>
  <wp:post_date>2011-02-13 14:10:25</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:10:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c329d05700399ee9596da956cd0ce920</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>276</wp:comment_id>
    <wp:comment_author><![CDATA[Jomi]]></wp:comment_author>
    <wp:comment_author_email>laflechaverde@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>217.12.18.132</wp:comment_author_IP>
    <wp:comment_date>2011-06-08 04:48:25</wp:comment_date>
    <wp:comment_date_gmt>2011-06-08 11:48:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Would you kindly show a screen capture with the results?. Maybe I have a problem with the instalation but for me the tool runs and ends and does not show the messages.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307533706.1669";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307554688</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307554688.4139";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-08 11:48:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>119</wp:comment_id>
    <wp:comment_author><![CDATA[Tweets that mention Creating a simple Python Geoprocessing tool and adding it to ArcToolbox in AV 9.3 « Python and then some…. -- Topsy.com]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://topsy.com/bobspython.com/2011/02/13/creating-a-simple-python-geoprocessing-tool-and-adding-it-to-arctoolbox-in-av-9-3/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
    <wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
    <wp:comment_date>2011-02-13 23:27:25</wp:comment_date>
    <wp:comment_date_gmt>2011-02-14 06:27:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Mark Verschuur, Bob Roberts. Bob Roberts said: Creating a simple Python Geoprocessing tool and adding it to ArcToolbox in AV 9.3 http://wp.me/p11Kpe-4C [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297664846.0314";s:7:"message";s:92:"Akismet was unable to check this comment (response: ), will automatically retry again later.";s:5:"event";s:11:"check-error";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1297666069.0082";s:7:"message";s:55:"Akismet cleared this comment during an automatic retry.";s:5:"event";s:10:"cron-retry";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1297694285</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-14 06:27:25</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>282</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>70.176.7.159</wp:comment_author_IP>
    <wp:comment_date>2011-06-09 14:47:55</wp:comment_date>
    <wp:comment_date_gmt>2011-06-09 21:47:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[After looking at the script you sent me screen shots of, I see that my example does not have the required imports at the top of the Python file:

import sys, os, glob

Add that in and it should work.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>276</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307656077</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307656078.1552";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-09 21:47:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Solid Waste Routing - Improving Efficiency in Solid Waste Collection Part 2</title>
  <link>http://bob-roberts.net/2011/02/13/solid-waste-routing-improving-efficiency-in-solid-waste-collection-part-2-2/</link>
  <pubDate>Sun, 13 Feb 2011 21:38:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/02/13/solid-waste-routing-improving-efficiency-in-solid-waste-collection-part-2-2/</guid>
  <description/>
  <content:encoded><![CDATA[<h2>Analyzing Current Operations</h2>
<p style="text-align:justify;">It is safe to assume that if you are reading this then you already believe you have room for improvement in your collection operations.  There are a couple of ways that can test the efficiency of <a class="zem_slink" title="Municipal solid waste" rel="wikipedia" href="http://en.wikipedia.org/wiki/Municipal_solid_waste">solid waste</a> routes.</p>
<p style="text-align:justify;">For a troublesome route, try putting one of your better drivers on that route for a couple of weeks.  If the better driver takes just as long as the regular driver then the problem is likely the route and not the driver.  Bear in mind that your "better" driver will most likely always get done faster.</p>
<p style="text-align:justify;">There are some industry "thumb rule" counts for stops per route.  As "thumb rules" they will not pertain to every area.  For example, very rural areas will require more driving and therefore collect at fewer stops.  For automated collection, the maximum number of stops per route is 1,000 stops per 8-hour day, and 1,200 and for Semi-Automated (with one helper) it is 800 stops per 8-hour day and 1,000 per 10-hour day.  So, in a dense city area where automated routes collect 600 stops in an 8-hour day, there is room for improvement.</p>
<p style="text-align:justify;">&nbsp;</p>

<h2>A Driver's View:</h2>
<p style="text-align:justify;">"When I started driving a garbage truck, I was trained by the driver that was running the route.  He was taught by the driver before him and I taught my replacement.  That is probably the start of the problem.  I ran my route like the driver before me and my replacement ran my route just like I did.  That didn't mean that the route was being run in the most efficient manner.</p>
<p style="text-align:justify;">There were plenty of times that I wondered if there were a faster or better way to run the route but we were always just trying to finish the route on time.  With overtime being taboo and already working a five day per week schedule, there just wasn't any time to try a different approach.</p>
<p style="text-align:justify;">I think what really hurt us was when a driver was out sick.  We all knew our routes but very few knew the other routes.  When I started, there were no maps or route books to speak of.  I myself created one when I was learning my route by going home every day and printing out the route area that I ran.  I would then highlight the streets that were in my route.  Most drivers didn't do this and so it was chaos when a driver was absent."</p>
<p style="text-align:justify;">&nbsp;</p>

<h2>Route Optimization Strategies</h2>
<p style="text-align:justify;">Regardless of whether you are a Private or Public organization, many of the following techniques or strategies can assist to improve efficiency with your solid <a class="zem_slink" title="Waste collection" rel="wikipedia" href="http://en.wikipedia.org/wiki/Waste_collection">waste collection</a>:</p>
<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;"><a class="zem_slink" title="Heuristic routing" rel="wikipedia" href="http://en.wikipedia.org/wiki/Heuristic_routing">Heuristic Routing</a>
</span>
<p style="text-align:justify;">Heuristic Definition: Logical, commonsense thought-process learned through experience that helps organize ideas, concepts, and information into a useful form or solution.  In 1974, the <a class="zem_slink" title="United States Environmental Protection Agency" rel="homepage" href="http://www.epa.gov">U.S. Environmental Protection Agency</a> released an outline for solid waste routing strategies.</p>
<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;">Right Turns
</span>

The use of right turns and turnarounds saves time and fuel.

<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;">On-board Computers
</span>

On-board computers provide accountability and increase driver efficiency.

<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;">Optimize Dump Trips
</span>

Selecting the optimized location to leave route and head to transfer station/landfill.

<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;">Automated Collection
</span>

If your area is suitable for automation, it is the preferable way to go.

<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;">Optimize Customers
</span>

It may sound counter-intuitive, but sometimes canceling customers can save you money.

<span style="color:#8d9baf;font-family:Century Gothic;font-size:14pt;">Routing Software
</span>
<p style="text-align:justify;">From point-to-point commercial collection to high-density residential collection there are many software solutions available.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>295</wp:post_id>
  <wp:post_date>2011-02-13 14:38:21</wp:post_date>
  <wp:post_date_gmt>2011-02-13 21:38:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>solid-waste-routing-improving-efficiency-in-solid-waste-collection-part-2-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Download Section added</title>
  <link>http://bob-roberts.net/2011/02/16/downloads-added/</link>
  <pubDate>Thu, 17 Feb 2011 00:22:18 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=305</guid>
  <description/>
  <content:encoded><![CDATA[I have added a section for downloads.  So far all there is only a Solid Waste Routing presentation that I gave last week.  Look Right ===&gt;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>305</wp:post_id>
  <wp:post_date>2011-02-16 17:22:18</wp:post_date>
  <wp:post_date_gmt>2011-02-17 00:22:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>downloads-added</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Solid Waste Routing - Improving Efficiency in Solid Waste Collection Part 3</title>
  <link>http://bob-roberts.net/2011/02/20/heuristic-routing/</link>
  <pubDate>Mon, 21 Feb 2011 02:38:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/02/20/heuristic-routing/</guid>
  <description/>
  <content:encoded><![CDATA[<h2 style="text-align:justify;">Heuristic Routing</h2>
<p style="text-align:justify;">The U.S. Environment Protection Agency in 1974 released a publication (SW-113) entitled Heuristic Routing for Solid Waste Collection Vehicles.  For many years, this was the definitive how-to manual for <a class="zem_slink" title="Municipal solid waste" rel="wikipedia" href="http://en.wikipedia.org/wiki/Municipal_solid_waste">solid waste</a> <a class="zem_slink" title="Routing" rel="wikipedia" href="http://en.wikipedia.org/wiki/Routing">routing</a>.  The majority of the rules still apply today.</p>
<p style="text-align:justify;">Heuristic routing defined macro-routing and micro-routing.  Macro-routing "determines the assignment of daily collection routes to existing processing and disposal sites."</p>
<p style="text-align:justify;">However, we are interested in micro-routing, which "looks in detail at each daily collection service area to determine the path that the collection vehicle should follow as it collects from each service on its route.  The objective is to minimize the driving time on the collection route through minimizing the dead (head) distance…"</p>
<p style="text-align:justify;">Rules for Heuristic micro-routing:</p>

<ol>
	<li>
<div style="text-align:justify;">Routes should not be fragmented or overlapping. Each route should be compact, consisting of street segments clustered in the same geographical area.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">The collection route should start as close to the garage or motor pool as possible, taking into account heavily traveled and one-way streets (see rules 3 and 4).</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">Collection from heavily traveled streets should not be carried out during rush hours.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">In the case of one-way streets, it is best to start the route near the upstream end of the street, working down it through the looping process.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">Services on dead-end streets can be considered as services on the street segment that they intersect, since they can only be collected by passing down that street segment. To keep left turns to a minimum, collect the dead-end streets when they are to the right of the truck.  Collections from dead-end streets must be made by walking down, backing down or making a U-turn at the dead-end.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">When practical, solid waste on a steep hill should be collected on both sides of the street while the vehicle is moving downhill. This facilitates safety, ease and speed of collection. It also lessens wear on the vehicle and conserves gas and oil.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">Higher elevations should be at the start of the route.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">For collection from one side of the street at a time, it is generally best to route with many clockwise turns around blocks. Note: Heuristic rules 8 and 9 emphasize the development of a series of clockwise loops in order to minimize right turns, which generally are more difficult and time-consuming than left turns. Particularly for right-hand-drive vehicles, right turns are safer.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">For collection from both sides of the street at the same time, it is generally best to route with long, straight paths across the street before looping clockwise.</div>
&nbsp;</li>
	<li>
<div style="text-align:justify;">For certain block configurations within the route, specific routing patterns should be applied that best fit the layout.</div></li>
</ol>
<p style="text-align:justify;">&nbsp;</p>
<p style="text-align:justify;">As you can see, since the implementation of these changes in 1974, only a couple of the Heuristic rules have become outdated, but in general still today make up the rules of routing.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>310</wp:post_id>
  <wp:post_date>2011-02-20 19:38:09</wp:post_date>
  <wp:post_date_gmt>2011-02-21 02:38:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>heuristic-routing</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>160</wp:comment_id>
    <wp:comment_author><![CDATA[Tweets that mention Solid Waste Routing – Improving Efficiency in Solid Waste Collection Part 3 « Python and then some…. -- Topsy.com]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://topsy.com/bobspython.com/2011/02/20/heuristic-routing/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
    <wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
    <wp:comment_date>2011-02-21 04:12:44</wp:comment_date>
    <wp:comment_date_gmt>2011-02-21 11:12:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by GIS Forum/Blog Feed, Bob Roberts. Bob Roberts said: Heuristic RoutingSolid Waste Routing - Improving Efficiency in Solid Waste Collection Part 3 http://wp.me/p11Kpe-50 [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1298298089</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298298089.7294";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1298286764.1185";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-02-21 11:12:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Solid Waste Routing - Improving Efficiency in Solid Waste Collection Part 4</title>
  <link>http://bob-roberts.net/2011/03/06/solid-waste-routing-improving-efficiency-in-solid-waste-collection-part-4/</link>
  <pubDate>Mon, 07 Mar 2011 01:18:10 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.wordpress.com/2011/03/06/solid-waste-routing-improving-efficiency-in-solid-waste-collection-part-4/</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:center;"><span style="color:#750a3c;font-family:Garamond;font-size:16pt;">Right Turns
</span></p>
<p style="text-align:justify;">A common concept in solid waste collection is to minimize left turns and maximize right turns.  Interestingly, these days it is done more for safety than efficiency — eliminating or minimizing the dangerous left hand turns results in fewer instances the solid waste collection vehicle will have to turn in front of traffic.</p>
<p style="text-align:justify;">An excerpt from<em> Businessweek</em> article on March 5, 2007 called "How Technology Delivers for UPS" says it  succinctly:</p>
<p style="text-align:justify;">"Not so long ago, UPS drivers worked off maps, 3-x-5 note cards, and their own memory to figure out the best way to run their routes. That changed in 2005 when UPS began to implement a $600 million route optimization system--think MapQuest on steroids--that each evening maps out the next day's schedule for the majority of its 56,000 drivers. So sophisticated is the software that it designs each route to minimize the number of left turns, thus reducing the time and gas that drivers waste idling at stoplights.</p>
UPSs innovation is an example of how technology can help companies capture institutional knowledge about their customers. Before, when a truck loader or driver walked out the door, the package- loading techniques or route tips they'd developed over the years usually walked out with them. Now that knowledge is accessible in a central system. That eases the burden on substitute drivers and shortens the training time for new ones, lessening the chances of a lapse in customer service. There's no question the new system has enabled UPS to run its routes more efficiently. In November alone the company's drivers logged 3 million fewer miles than they did the year before."
<p style="text-align:justify;">&nbsp;</p>
<p style="text-align:justify;">The television show "Mythbusters" tested the theory of right-hand turns on one of their "MiniMyths" episodes and confirmed that even with more miles driven (as was the case in their test) making right hand turns  consumed less fuel.</p>
<p style="text-align:justify;">Right turns not only increase efficiency by reducing fuel consumption, they also increase safety for the driver and other vehicles on the road,  because the driver no longer has to face oncoming traffic.</p>
<p style="text-align:center;">&nbsp;</p>
<p style="text-align:center;"><span style="color:#750a3c;font-family:Garamond;font-size:16pt;">On-board Computers
</span></p>
<p style="text-align:justify;">As modern technology meets solid waste collection, numerous new items are becoming implemented in everyday collection practices.  One such valuable piece of equipment is the on-board computer.  Picture it as a GPS device on steroids.  Now, not only can the driver follow his route using the system, but the driver can also communicate with their offices for updates and notifications of route obstacles, or customers who do not have trash out.</p>
<span style="color:#003e75;font-family:Century Gothic;font-size:16pt;">Benefits to On-board Computers:
</span>

<span style="color:#8d9baf;font-family:Century Gothic;font-size:16pt;">Track Routes real time
</span>
<ul style="margin-left:72pt;">
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">Provides accountability by being able to locate where the collection vehicle is at all times.
</span></div></li>
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">Eliminates doubt in driver efficiency.
</span></div></li>
</ul>
<span style="color:#8d9baf;font-family:Century Gothic;font-size:16pt;">Eliminate going back to pick up "Not Outs"
</span>
<ul style="margin-left:72pt;">
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">Provides a GPS time- and-date stamp in addition to messages from the driver that a customer did not have trash out.
</span></div></li>
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">Depending on contract/requirements, may be enough to not require going back to collect from a customer who  did not have the trash out for the collection vehicle.
</span></div></li>
</ul>
<span style="color:#8d9baf;font-family:Century Gothic;font-size:16pt;">Turn-by-turn shows driver how to run the route properly
</span>
<ul style="margin-left:72pt;">
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">Ensures that the route is driven according to the sequence created for it.
</span></div></li>
</ul>
<span style="font-family:Century Gothic;"><span style="color:#8d9baf;font-size:16pt;">Relief Driver can run route without any prior knowledge of it</span>
</span>
<ul style="margin-left:72pt;">
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">Drivers simply follow the GPS directions.
</span></div></li>
</ul>
<span style="color:#8d9baf;font-family:Century Gothic;font-size:16pt;">Integration with Billing Systems
</span>
<ul style="margin-left:72pt;">
	<li>
<div style="text-align:justify;"><span style="font-family:Garamond;">With the drivers' ability to communicate with billing software, you can automatically charge the customer for extra bags or extra collection, thus not miss additional revenue.</span><span style="font-family:Century Gothic;">
</span></div></li>
</ul>
<span style="color:#8d9baf;font-family:Century Gothic;font-size:16pt;">All of these benefits increase driver efficiency
</span>
<p style="text-align:justify;">&nbsp;</p>
<p style="text-align:center;"><span style="color:#750a3c;font-family:Garamond;font-size:16pt;">Optimize Dump Trips
</span></p>
<p style="text-align:justify;">Most drivers head to the landfill to dump only when the vehicle is  completely full. Generally this is not the most efficient way to handle dump trips.  The route optimization software has a function to optimize dump trips.</p>
<p style="text-align:justify;">If a route requires two dumps, then these dumps should be scheduled for when the vehicle is closest to the transfer station/landfill.  By optimizing the dump trips, a driver can generally eliminate a trip or two per week for most routes.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>320</wp:post_id>
  <wp:post_date>2011-03-06 18:18:10</wp:post_date>
  <wp:post_date_gmt>2011-03-07 01:18:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>solid-waste-routing-improving-efficiency-in-solid-waste-collection-part-4</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Enter the World of Django</title>
  <link>http://bob-roberts.net/2011/03/06/enter-the-world-of-django/</link>
  <pubDate>Mon, 07 Mar 2011 02:23:52 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=325</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So I have continued down the road of Django.... I have tried out several different tutorials but at the end of the day I find myself stuck. Every tutorial that I have tried results in something going wrong. I do not think it is the fault of Django or the tutorials, I think it is just me :(</p>
<p style="text-align:justify;">But aside from the frustration, I continue on. This weekend met up with a Django expert in Phoenix and went over a couple of my tutorial and the issues I was having. After no time at all, I found that my issues or my problems were relatively very basic and all my fault.</p>
<p style="text-align:justify;">There are so many ways to reach the same endpoint in programming. Because of that there are so many paths that can be taken. Picture a trip from NY to LA; in the end you will get to LA but there are multiple paths top get there. That is why when you get stuck on something to do with programming, there isn't a simple question nor a simple answer for a solution. Therein lies the frustration.....</p>
<p style="text-align:justify;">Go to a forum or to an IRC channel and ask a question, and see what kind of response you will get.</p>
<p style="text-align:justify;">What is this article all about? Simple, you will get pissed, annoyed and flat out frustrated trying to learn programming. All that being said; do not give up if this is what you want to do. Find a friend to help you, programmers are great at sharing their knowledge...all you have to do is ask. For me all I can say is thank you Aaron.</p>

<h6 class="zemanta-related-title" style="font-size:1em;">Related Articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://unfoldthat.com/2011/05/01/django-settings-extended-template.html">Django settings template</a> (unfoldthat.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>325</wp:post_id>
  <wp:post_date>2011-03-06 19:23:52</wp:post_date>
  <wp:post_date_gmt>2011-03-07 02:23:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>enter-the-world-of-django</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>203</wp:comment_id>
    <wp:comment_author><![CDATA[James Abel]]></wp:comment_author>
    <wp:comment_author_email>James@JamesAbel.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>24.251.57.98</wp:comment_author_IP>
    <wp:comment_date>2011-03-06 20:55:57</wp:comment_date>
    <wp:comment_date_gmt>2011-03-07 03:55:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, all the conventions in Django can be a chore.  I'm just learning as well.
BTW, I'm using this text book (essentially as a tutorial): "Django 1.0 Web Site Development" by Ayman Hourieh.  Things have been pretty good so far. :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1299476799</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299476799.6959";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299470158.3044";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-03-07 03:55:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>208</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-03-06 23:41:49</wp:comment_date>
    <wp:comment_date_gmt>2011-03-07 06:41:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well I am hoping to dig into Django at the DesertPy.org meetups.  There is also going to be a course in SoCal after PyCon.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>203</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1299480110</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1299480113.6353";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-03-07 06:41:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Python and then some....</title>
  <link>http://bob-roberts.net/2011/03/16/python-and-then-some/</link>
  <pubDate>Wed, 16 Mar 2011 17:49:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=333</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Wow, I am just past 6 months of my blog being up.  I have has a lot more hits than I ever expected to.  I know that the blog started out "Everything <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python</a>" and then transitioned as I decided to add new topics.</p>
<p style="text-align:justify;">Well, guess what, I think I am going to be adding more AGAIN.</p>
<p style="text-align:justify;">My work has me dabbling in <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">Ruby on Rails</a> and from that I am looking at <a class="zem_slink" title="Django (web framework)" href="http://www.djangoproject.com" rel="homepage">Django</a>.  As time goes by I will list my likes and dislikes of both of these <a class="zem_slink" title="Web application framework" href="http://en.wikipedia.org/wiki/Web_application_framework" rel="wikipedia">web frameworks</a> but not in this article.  I will however at this point say that the Ruby and/or Rails community is a lot more "together" than anything that I can see to get going in Phoenix for Python.  That is disappointing to say the least.</p>
<p style="text-align:justify;">I also recently got turned on the <a class="zem_slink" title="JQuery" href="http://jquery.com/" rel="homepage">jQuery</a>.  One word...AWESOME.  I will put my savings calculator (again a hobby turned to work use) in another post but needless to say is that I needed a savings calculator that would have required fields and with a little adaptation, jQuery was the answer.  More so than this is the fact that the calculator can be used on our RoR site as well as our Joomla based website.</p>
<p style="text-align:justify;">So stay tuned for more categories and more topics and thanks for reading....</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>333</wp:post_id>
  <wp:post_date>2011-03-16 10:49:12</wp:post_date>
  <wp:post_date_gmt>2011-03-16 17:49:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-and-then-some</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c3491cbf866a0d2a490046ae7cbb7109</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b31dc00736232cc2caf458de39560e76</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>221</wp:comment_id>
    <wp:comment_author><![CDATA[Jerry Asher]]></wp:comment_author>
    <wp:comment_author_email>ja2038@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>130.76.64.117</wp:comment_author_IP>
    <wp:comment_date>2011-03-16 14:37:30</wp:comment_date>
    <wp:comment_date_gmt>2011-03-16 21:37:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Fyi, you probably know this, but there is a Google Technology User's Group meeting tonight...

http://phoenix.gtugs.org/


"Introduction to jQuery Mobile"
Wed, March 16, 2011

jQuery Mobile is a UI library designed to abstract away the differences
between various mobile devices and allow you to focus on your application.
Hafthor Stefansson, developer consultant for Parsus Solutions, will show
you the advantages of using jQuery Mobile and how to use it.

Phoenix GTUG meets regularly on the Third Wednesday of every Month
Time:    6:30 Food/networking
            7:00 Presentation
            8:15 Adjourn to local watering hole for discussion

Location: 2400 North Central Avenue, Suite 104]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1300318869</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1300318870.0421";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1300311450.4131";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-03-16 21:37:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Learning Python in SoCal</title>
  <link>http://bob-roberts.net/2011/03/24/learning-python-in-socal/</link>
  <pubDate>Thu, 24 Mar 2011 17:44:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=335</guid>
  <description/>
  <content:encoded><![CDATA[Well, I kept bugging him and he came thru!  Danny (@pydanny) from Cartwheel is putting on a weekend of learning Python.  Classes include installing Python and <a class="zem_slink" title="Django (web framework)" rel="homepage" href="http://www.djangoproject.com">Django</a>, learning Python the hard way, learning Django the hard way and a live Python Sprint!

If you have ever wanted to learn <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python programming</a> or create your own web applications using Django, then this is the place to go!

More information and to signup go here: <a href="http://cartwheelweb.com/classes/">http://cartwheelweb.com/classes/</a>

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>335</wp:post_id>
  <wp:post_date>2011-03-24 10:44:56</wp:post_date>
  <wp:post_date_gmt>2011-03-24 17:44:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>learning-python-in-socal</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5f930f8bf009c0b25cd7f1fef82d1c18</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>224</wp:comment_id>
    <wp:comment_author><![CDATA[James Abel]]></wp:comment_author>
    <wp:comment_author_email>James@JamesAbel.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>24.251.57.98</wp:comment_author_IP>
    <wp:comment_date>2011-03-24 20:49:41</wp:comment_date>
    <wp:comment_date_gmt>2011-03-25 03:49:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Not to be a pessimist, but doesn't a 3 hr class seem rather short?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1301024981</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1301024981.7923";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-03-25 03:49:41</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Solid Waste Routing White Paper</title>
  <link>http://bob-roberts.net/2011/03/25/solid-waste-routing-white-paper/</link>
  <pubDate>Sat, 26 Mar 2011 03:33:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=338</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I just added my "final" white paper on <a title="Solid Waste Routing paper" href="http://dl.dropbox.com/u/1912236/Solid%20Waste%20Routing.pdf">Solid Waste Routing</a> to my "downloads" section on the right side column.  Feel free to download it and use it as you desire.  I would, however, appreciate referencing me if you do publish the paper.</p>
<p style="text-align:justify;">Hope that this helps somebody out there....</p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>338</wp:post_id>
  <wp:post_date>2011-03-25 20:33:05</wp:post_date>
  <wp:post_date_gmt>2011-03-26 03:33:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>solid-waste-routing-white-paper</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Whats going on...</title>
  <link>http://bob-roberts.net/2011/03/25/whats-going-on/</link>
  <pubDate>Sat, 26 Mar 2011 03:48:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=341</guid>
  <description/>
  <content:encoded><![CDATA[Just an update to what is up lately.  I have been busy with work releasing our new <a class="zem_slink" title="Web application" rel="wikipedia" href="http://en.wikipedia.org/wiki/Web_application">web-based</a> route optimization application so I have been lacking on new material on the blog.  I have also been messing with:
<ul>
	<li>Django</li>
	<li>RefineryCMS (a Ruby on Rails CMS)</li>
	<li><a class="zem_slink" title="Ruby on Rails" rel="homepage" href="http://rubyonrails.org/">RoR</a></li>
	<li>a <a class="zem_slink" title="Python (programming language)" rel="homepage" href="http://www.python.org/">Python</a> interface for our desktop application</li>
	<li>DesertPy.org</li>
</ul>
I will add again that I am somewhat torn between RoR and Django.  The RefineryCMS is simply put...AWESOME!  I need to look at <a class="zem_slink" title="Django-cms" rel="homepage" href="http://django-cms.org">Django - CMS</a> to compare just to be fair.

I was hoping to make it to Cartwheels Python courses but again it seems that money is the deterrent.

I also added a cool <a class="zem_slink" title="QR code" rel="homepage" href="http://www.fastcompany.com/1585822/business-card-just-scan-my-qr-code">QR code</a> to the bottom of the right hand section that has my contact info.  I keep seeing these codes for downloading apps to my Android phone and think they are pretty cool.

If you are here for route optimization, I have added my <a class="zem_slink" title="Municipal solid waste" rel="wikipedia" href="http://en.wikipedia.org/wiki/Municipal_solid_waste">Solid Waste</a> routing paper to the downloads section.

As always, if you have any questions, feel free to contact me and stay tuned for new content.
<h6 class="zemanta-related-title" style="font-size:1em;">Related Articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://news.ycombinator.com/item?id=195423">YCombaintor: Django vs Ruby on Rails</a> (news.ycombinator.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>341</wp:post_id>
  <wp:post_date>2011-03-25 20:48:25</wp:post_date>
  <wp:post_date_gmt>2011-03-26 03:48:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>whats-going-on</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Desert Code Camp - Chandler AZ</title>
  <link>http://bob-roberts.net/2011/04/04/desert-code-camp-chandler-az/</link>
  <pubDate>Tue, 05 Apr 2011 04:00:42 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=350</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">What an amazing world we live in today.  I just went to my first Desert Code Camp ( <a href="http://desertcodecamp.com/">http://desertcodecamp.com/</a> ) and it was fantastic!  It is great that there is so much tech going on.  There was such a wide variety of classes that were put on.  I was so impressed with the whole event.  From breakfast to dinner they took care of everything and it didn't cost anything to go to it.</p>
<p style="text-align:justify;">I got to see a great presentation on <a class="zem_slink" title="Ruby on Rails" rel="homepage" href="http://rubyonrails.org/">Ruby on Rails</a> 101 put on by <a href="http://www.claytonlz.com/">Clayton Lengel-Zigich</a> that taught me more than all of the tutorials that I have done.  I also sat in on his <a class="zem_slink" title="HTML5" rel="wikipedia" href="http://en.wikipedia.org/wiki/HTML5">HTML5</a> class ( all of his presentations are at http://bit.ly/i4lozg ) that was equally informative.  I am not going to rush out and code everything in HTML5 just yet as our friends at Microsoft do NOT have a browser to support it yet (IE5 supports SOME of HTML5) but it is amazing what HTML5 can do.  I just created a form for my companies website using <a class="zem_slink" title="JQuery" rel="homepage" href="http://jquery.com/">jQuery</a> so that I can require and validate fields and a lot of this is already in HTML5.  Not to say that jQuery isn't great but why re-build the wheel?</p>
<p style="text-align:justify;">I also sat in on a <a class="zem_slink" title="CoffeeScript" rel="homepage" href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> class that was very impressive.  I once looked at javascript and thought it to be too difficult and for that matter a very messy language.  CoffeeScript allows you to write in a clear cut sensible way and then create the .js for you.  Hmm, I may have to look at <a class="zem_slink" title="JavaScript" rel="wikipedia" href="http://en.wikipedia.org/wiki/JavaScript">JavaScript</a> a little more.</p>
<p style="text-align:justify;">Speaking of JavaScript, I also sat in on a Node.js class which is a is a server-side JavaScript environment.  What was insanely incredible was Nodester ( <a href="http://nodester.com/">http://nodester.com/</a> ) which is a FREE <a class="zem_slink" title="Heroku" rel="homepage" href="http://www.heroku.com/">Heroku</a> like hosting for Node.js that was created by a friend on mine Chris Matthieu ( @chrismatthieu ).  In addition to this Chris also created a JavaScript based way to place calls within a browser without using a VOIP account or <a class="zem_slink" title="Skype" rel="homepage" href="http://skype.com">Skype</a>.  If you really want to be amazed check out <a href="http://phono.com/">http://phono.com/</a> !!</p>
<p style="text-align:justify;">How much did I love Desert Code Camp?  Enough that I volunteered to help with the next one!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>350</wp:post_id>
  <wp:post_date>2011-04-04 21:00:42</wp:post_date>
  <wp:post_date_gmt>2011-04-05 04:00:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>desert-code-camp-chandler-az</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="html5"><![CDATA[HTML5]]></category>
  <category domain="post_tag" nicename="javascript"><![CDATA[JavaScript]]></category>
  <category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3c4a2c5614c60bc0404bda88d3496168</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e22507b9eb92e44f58d6c9dde044d50e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b2573ebc8fae8261974f85be9579ae11</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b1b5acc582b4321ccbd7c2b1699dde81</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_36c3501f5988a66b8ef1bc17b61f2a35</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9a9e8e8e54ca90d82f44d8df8b5021ae</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What programming language do I learn?</title>
  <link>http://bob-roberts.net/2011/04/10/what-programming-language-do-i-learn/</link>
  <pubDate>Mon, 11 Apr 2011 03:07:11 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=355</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">If you search the web there are a million posts on a million forums about what is the best language.  These are all OPINIONS and that is that.  So time for my opinion...</p>
<p style="text-align:justify;">I think that the biggest thing in determining what <a class="zem_slink" title="Programming language" href="http://en.wikipedia.org/wiki/Programming_language" rel="wikipedia">programming language</a> you should learn is deciding what it is that you intend to use it for.  I would never spend the time and effort to learn Chinese if I never have any intention of going to China.  Just remember that programming languages are just that..languages.  So before you decide what language you want to learn, you need to ask yourself what you want to use it for.</p>
<p style="text-align:justify;">I learned <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python</a> as I work in <a class="zem_slink" title="Geographic information system" href="http://en.wikipedia.org/wiki/Geographic_information_system" rel="wikipedia">GIS</a> and as I have said before, ESRi's ArcView comes with Python.  If you are in GIS and do geoprocessing, then there is not really and questions as to which language to learn.</p>
<p style="text-align:justify;">For general (non web application) use, I think that there are a lot of things that are better with Python than <a class="zem_slink" title="Ruby (programming language)" href="http://www.ruby-lang.org/" rel="homepage">Ruby</a> but I also feel that there are parts of Ruby formatting that I like better than Python.  Ruby has its gems and Python has its eggs or modules. Truthfully for non web development it is really a matter of personal preference between Ruby and Python.</p>
<p style="text-align:justify;">Now, for web development, I am really torn between the two.  I have tried both <a class="zem_slink" title="Django (web framework)" href="http://www.djangoproject.com" rel="homepage">Django</a> and <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">Rails</a>.  I have tried many of the other smaller web frameworks as well. There are parts of each that I think are better than the other.  Rails generates more upfront files and html but Django creates a pretty awesome administrative interface.  I still have not decided which one I prefer.  I will mess around with Django for a few days and then jump to Rails for a few days.  I will say that there is a lot more documentation on Rails than there is for Django.  That brings me to my last opinion on the difference.</p>
<p style="text-align:justify;">Remember that this is my blog and these are my opinions.  I also know that the name of my blog is "Python and then some.."  That being said, there is a major difference between Python/Django and Ruby/Rails in the users and the communities.  There is also a different mindset and (in my opinion) personality between the two types.</p>
<p style="text-align:justify;">I feel that in general, Python users are more independent than Ruby users.  Every major (and a lot of minor) cities in America have Ruby or Rails user groups and they are very popular.  There are not as many Python user groups.  I started a Python user group in Phoenix AZ and I am struggling to get people show up.  Comparatively, the Ruby and Rails user groups have excellent turn outs.  You can say what you want but the Ruby/Rails community is a lot closer and tighter than any Python groups.</p>
<p style="text-align:justify;">Again, this is just my opinion but I have noticed a major difference between the two.  For example, Rails is big on TDD (<a class="zem_slink" title="Test-driven development" href="http://en.wikipedia.org/wiki/Test-driven_development" rel="wikipedia">Test Driven Development</a>) where you create a test that you know will fail before you create the process to make it pass. That is what I call proactive troubleshooting, whereas you test for failure prior to creating the process.  In Python/Django I see more of a reactive troubleshooting, whereas you create the process and if it doesn't work you test to see why not.</p>
<p style="text-align:justify;">Now this does NOT mean that this is always the case.  There are extremes in either group.  I just feel that the Ruby/Rails community is more close knit than the Python/Django community.</p>
<p style="text-align:justify;">So, what language should you learn?  Decide what it is that you want to use if for in the first place and go with that.</p>
<p style="text-align:justify;">And to the Python world, this is not intended to be insulting but rather a call out for more unity.  The Rails community can do it than why the hell can't the Python community be more connected?</p>
<p style="text-align:justify;">BR</p>

<h6 class="zemanta-related-title" style="font-size:1em;">Related Articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://batsov.com/2011/05/03/ruby-or-python.html">Ruby or Python? Well, it depends...</a> (batsov.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>355</wp:post_id>
  <wp:post_date>2011-04-10 20:07:11</wp:post_date>
  <wp:post_date_gmt>2011-04-11 03:07:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-programming-language-do-i-learn</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6a0cd20d81014f548fa3f3dfe623c8f0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d8db49f5eb2bed1cc877318a7c39bf3f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fa21102949e14f143d4d5aec95bd81db</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1777bc9ad7928e3429bcd055aec4988a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>277</wp:comment_id>
    <wp:comment_author><![CDATA[Jomi]]></wp:comment_author>
    <wp:comment_author_email>laflechaverde@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>217.12.18.132</wp:comment_author_IP>
    <wp:comment_date>2011-06-08 05:11:29</wp:comment_date>
    <wp:comment_date_gmt>2011-06-08 12:11:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Engineers and scientists should normally prefer to optimize the time they need to develop a tool. Readability is important too.

The point of view and the ideas expressed in the Software Carpentry website are quite useful for these users (engineers and scientists). They provide many examples with Python but the ideas can be applied to other languages. Still, they recommend Python if the user is free to choose.

http://software-carpentry.org/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307535089.1321";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307554686</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307554686.7549";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-08 12:11:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>228</wp:comment_id>
    <wp:comment_author><![CDATA[jerryasher]]></wp:comment_author>
    <wp:comment_author_email>jerry.asher+wp@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://jerryasher.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.222.210.123</wp:comment_author_IP>
    <wp:comment_date>2011-04-10 23:58:22</wp:comment_date>
    <wp:comment_date_gmt>2011-04-11 06:58:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I have had similar experiences.  I look at what the language can do, and what people do with the language, but it is also important for me to look at the jobs, and the community for help, and the community to help find jobs, and the long term potential.

And for what it's worth, in Phoenix at least, that strongly favors Ruby.

Over the last month I've seen lots of Ruby developers and Ruby jobs (though I am not aware of the salaries.) And over the past six months, I've never even found a single Python user group.

So for community for momentum, it seems that Ruby is a better choice Python.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15643195</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1302530981</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1302530982.2255";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1302505102.5513";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"jerryasher";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-04-11 06:58:22</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>231</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-04-11 16:57:31</wp:comment_date>
    <wp:comment_date_gmt>2011-04-11 23:57:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well good news Jerry, checkout http://desertpy.org/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1302566253</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1302566253.8164";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-04-11 23:57:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>235</wp:comment_id>
    <wp:comment_author><![CDATA[curious]]></wp:comment_author>
    <wp:comment_author_email>karolw+bobspython@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>98.165.254.206</wp:comment_author_IP>
    <wp:comment_date>2011-04-17 00:30:28</wp:comment_date>
    <wp:comment_date_gmt>2011-04-17 07:30:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Indeed.com claims more jobs in python. Usually when job listings are made, they contain both language requirements, as in "...RoR, Django, Pylons, Ruby, Python...expert..." in one job post. 

Overall trends from indeed.com:
http://www.indeed.com/jobtrends?q=ruby%2C+python

When searching for ruby jobs on indeed.com:
ruby -django -python
When searching for python jobs on indeed.com:
python -rails -ruby

etc.



Does anyone have a different experience?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1303025428.5744";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1303063546</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1303063546.5747";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-04-17 07:30:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>278</wp:comment_id>
    <wp:comment_author><![CDATA[Jomi]]></wp:comment_author>
    <wp:comment_author_email>laflechaverde@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>217.12.18.132</wp:comment_author_IP>
    <wp:comment_date>2011-06-08 05:23:09</wp:comment_date>
    <wp:comment_date_gmt>2011-06-08 12:23:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[And of course if you work with ArcGis you have to deal with Python, as you said.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307535789.9629";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1307554684</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1307554684.8603";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-08 12:23:09</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>289</wp:comment_id>
    <wp:comment_author><![CDATA[fousto]]></wp:comment_author>
    <wp:comment_author_email>fousto@me.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>71.197.165.94</wp:comment_author_IP>
    <wp:comment_date>2011-06-14 13:09:27</wp:comment_date>
    <wp:comment_date_gmt>2011-06-14 20:09:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jerry 
Pls ping me at techsearch@me.com
I have some great python jobs in phx]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>228</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1308082167.3404";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1308082751</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1308082751.8636";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-06-14 20:09:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Python Geoprocessing</title>
  <link>http://bob-roberts.net/2011/04/14/python-geoprocessing/</link>
  <pubDate>Fri, 15 Apr 2011 01:31:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=369</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Alright everybody, I get a lot of searches everyday for <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python</a> geoprocessing related questions.  I would love to add more content about geoprocessing but not sure what it is that all of you would like to learn.  I was going to do a "Geoprocessing tip of the week" but I felt that it would be pretty much the same as looking at the <a class="zem_slink" title="Esri" href="http://maps.google.com/maps?ll=34.0570416667,-117.195677778&amp;spn=1.0,1.0&amp;q=34.0570416667,-117.195677778 (Esri)&amp;t=h" rel="geolocation">ESRI</a> help docs.</p>
<p style="text-align:justify;">The simplest way is to email me via the about/contact page and I will attempt to answer what I can.  I am also looking at putting on a Python Geoprocessing class(s) here in Phoenix at the DesertPy.org group meetups.  Would there be any interest in a Python Geoprocessing class if I were to have one?  Maybe if there is enough interest we can do a webinar so that those outside of the Phoenix area could also participate.</p>
<p style="text-align:justify;">As always, feel free to drop me a line...</p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>369</wp:post_id>
  <wp:post_date>2011-04-14 18:31:56</wp:post_date>
  <wp:post_date_gmt>2011-04-15 01:31:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-geoprocessing</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <category domain="post_tag" nicename="programming-language"><![CDATA[Programming language]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>242</wp:comment_id>
    <wp:comment_author><![CDATA[Jorge Vidinha]]></wp:comment_author>
    <wp:comment_author_email>jorge.vidinha@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>81.84.49.115</wp:comment_author_IP>
    <wp:comment_date>2011-05-05 00:13:50</wp:comment_date>
    <wp:comment_date_gmt>2011-05-05 07:13:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bob, 
Absolutely, not sure about the live ones because of time diference, but if you opt also for the keep the recorded webminars im sure you will have lot of attendance.
Many thanks 
Jorge]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304579630</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304579630.8341";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-05 07:13:50</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>241</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-05-04 18:00:40</wp:comment_date>
    <wp:comment_date_gmt>2011-05-05 01:00:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jorge,
Based on your comment I am planning on creating some video tutorials like recorded webinars for Python Geoprocessing.  Do you think that there is a desire for live webinars?

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>239</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304557241</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304557241.1768";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-05 01:00:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>239</wp:comment_id>
    <wp:comment_author><![CDATA[Jorge Vidinha]]></wp:comment_author>
    <wp:comment_author_email>jorge.vidinha@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>81.84.49.115</wp:comment_author_IP>
    <wp:comment_date>2011-05-01 04:34:24</wp:comment_date>
    <wp:comment_date_gmt>2011-05-01 11:34:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi , webminars would be great since im in Europe. It would be an advantage for all your readers form outside. 
Thanks for all the infos, it has been really great motivation building my path with python and programing around GIS and reading some of your motivation words for a starter in this world. Lucky you that have lots of folks around to help you when you get stuck... 

Thanks 
Jorge]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304269454</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304249664.2784";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304269454.5144";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-01 11:34:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>The "Wrong" of Route Optimization</title>
  <link>http://bob-roberts.net/2011/04/19/the-wrong-of-route-optimization/</link>
  <pubDate>Tue, 19 Apr 2011 22:02:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=371</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Alright, I cannot help myself.  There has been so much news lately centered around the optimization of buses in Ottawa Canada (http://bit.ly/h0uyJw).  It appears that the City initially intended to cut out several routes in an attempt to as they say "optimize routes" in order to save an estimated $22 million next year.  The City held 3 meetings and allowed the public to attend in addition to receiving  6,500 complaints.</p>
<p style="text-align:justify;">Now, this is an example of the "wrong" way to do route optimization.  Simply removing routes does do anything but create a mess for the people that rely on them.  Would the City be allowed to remove several of their trash routes if it were to save the City money?  It would definitely save them money, but what of the garbage on the side of the street?  Is that the right way to "optimize routes" for the bus lines?  Are there not going to be people stuck standing on the side of the street for a bus that is not going to come there any more?</p>
<p style="text-align:justify;">There are too many people that throw the phrase "route optimization" around that do not have a clue and frankly piss me off!  I make my living saving cities millions of dollars by "optimizing" routes not just removing them.  Shame on you Ottawa for doing this to your people and for using the phrase "route optimization" incorrectly!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>371</wp:post_id>
  <wp:post_date>2011-04-19 15:02:36</wp:post_date>
  <wp:post_date_gmt>2011-04-19 22:02:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-wrong-of-route-optimization</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="route-optimization"><![CDATA[Route Optimization]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Next Steps....</title>
  <link>http://bob-roberts.net/2011/05/04/next-steps/</link>
  <pubDate>Thu, 05 May 2011 00:55:39 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=378</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">All I can say is that keeping up a blog is a lot more work than I ever thought it would be. With that being said, email me if you would like to add an article to my blog as a guest author.</p>
<p style="text-align:justify;">I have gotten quite a few requests for video tutorials and I am planning on creating some for geoprocessing.  I am thinking very short and sweet "how to's" for the various basic geoprocessing functions.  I have seen a little interest in Phoenix for Python geoprocessing classes for which I would love to do if there is enough interest.  I am hoping that fellow members of the DesertPy.org group will also be interested in sharing their knowledge/experiences for some more basic Python training.</p>
<p style="text-align:justify;">As usual, if you have any questions, comments, or bitches, feel free to contact me.</p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>378</wp:post_id>
  <wp:post_date>2011-05-04 17:55:39</wp:post_date>
  <wp:post_date_gmt>2011-05-05 00:55:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>next-steps</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2011-05-05 21:25:19";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>243</wp:comment_id>
    <wp:comment_author><![CDATA[Matthew Rantala]]></wp:comment_author>
    <wp:comment_author_email>SisuRunner@Gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>160.94.215.42</wp:comment_author_IP>
    <wp:comment_date>2011-05-05 12:47:23</wp:comment_date>
    <wp:comment_date_gmt>2011-05-05 19:47:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[How about simply posting a code snippets when you figure something out that took some extra effort--more than likely if you found something tricky, others will too.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>1152591</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304624843</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304624843.7287";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"sisurunner";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-05 19:47:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>245</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-05-06 09:21:29</wp:comment_date>
    <wp:comment_date_gmt>2011-05-06 16:21:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[LOL. That would be just about everything I have ever done in Python!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>243</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1304698890</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1304698890.8132";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-06 16:21:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Gangplank - Co-working in Arizona</title>
  <link>http://bob-roberts.net/2011/05/05/gangplank-co-working-in-arizona/</link>
  <pubDate>Thu, 05 May 2011 22:29:38 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bobspython.com/?p=388</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So today is the first time that I have ever been to <a class="zem_slink" title="Gangplank" href="http://gangplankhq.com/" rel="homepage">Gangplank</a> (<a href="http://gangplankhq.com/">http://gangplankhq.com/</a>) in Chandler AZ during the day.  I was here once in the evening for the dinner that they hosted after Desert Code Camp (<a href="http://desertcodecamp.com/">http://desertcodecamp.com/</a>).  It is mid afternoon and there are several people hanging out here and working.  Many belong to the numerous Anchor Companies that have set up shop here but others are just hanging out and hacking.</p>
<p style="text-align:justify;">I have been to a couple of other <a class="zem_slink" title="Coworking" href="http://en.wikipedia.org/wiki/Coworking" rel="wikipedia">co-working</a> places here in the Valley but Gangplank has them beat by far.  One of the other locations in town charges for hanging out for the day and another always seems dead.  Seeing as I follow Gangplank on Twitter I always see all of the events that they are putting on.  They have a regular "anybody is welcome" hacknight every week on every Wednesday of the month in addition to their Brownbag sessions as described on their website as "The best advice comes from those who have been there – that is the philosophy behind our weekly brownbag series. Each Wednesday at noon, Gangplank invites a leader in the local community to share the success they’ve enjoyed, and challenges they’ve faced in their careers."</p>
<p style="text-align:justify;">The room is hustling with activity even it is just 4 guys taking a break and playing video games!  They also had a chair massage person here for 3 hours today if a massage was all that was needed to relax and get more work done.</p>
<p style="text-align:justify;">All of my work is done sitting alone at home and working.  Here if I have a question, I can ask an expert in one of many various fields.</p>
<p style="text-align:justify;">truthfully the only downside that I see to Gangplank is that they are almost an hour away from me.  Hopefully they will open up their Avondale office on the west side and soon I can go there to work and learn.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>388</wp:post_id>
  <wp:post_date>2011-05-05 15:29:38</wp:post_date>
  <wp:post_date_gmt>2011-05-05 22:29:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gangplank-co-working-in-arizona</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6afbcf138bf898460594d81874d18d0c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3c4a2c5614c60bc0404bda88d3496168</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f593fd3f96e2dd85e7c666b4a8435092</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b1b5acc582b4321ccbd7c2b1699dde81</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>New Blog Address</title>
  <link>http://bob-roberts.net/2011/05/21/new-blog-address/</link>
  <pubDate>Sat, 21 May 2011 23:42:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=392</guid>
  <description/>
  <content:encoded><![CDATA[I have changed the address for my blog; bob-roberts.net.  I have done this as it seems as though I am branching out into a lot more than Python.

The bobspython.com link will continue to work until next year.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>392</wp:post_id>
  <wp:post_date>2011-05-21 16:42:00</wp:post_date>
  <wp:post_date_gmt>2011-05-21 23:42:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>new-blog-address</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Article in Waste Advantage magazine</title>
  <link>http://bob-roberts.net/2011/05/23/article-in-waste-advantage-magazine/</link>
  <pubDate>Tue, 24 May 2011 01:02:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=396</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So today I am excited as I just found out the my Solid Waste Route Optimization paper is going to be published in the July edition of Waste Advantage magazine.  Does this make me a routing expert?  Absolutely not!  This just means that they are looking for content for their magazine!</p>
<p style="text-align:justify;">That being said, I am excited to get my information out there for the world to see.  There have been a lot of readers that have downloaded my Solid Waste routing paper and that in itself makes me feel good that I have possibly assisted somebody that needed help!</p>
<p style="text-align:justify;">As always, I appreciate my readers and if you ever have any questions or comments then fell free to express them!</p>
<p style="text-align:justify;">BR</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>396</wp:post_id>
  <wp:post_date>2011-05-23 18:02:09</wp:post_date>
  <wp:post_date_gmt>2011-05-24 01:02:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>article-in-waste-advantage-magazine</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python or Ruby....</title>
  <link>http://bob-roberts.net/2011/05/23/python-or-ruby/</link>
  <pubDate>Tue, 24 May 2011 01:27:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=398</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I see that a lot of my hits come from the question of <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python</a> vs. <a class="zem_slink" title="Ruby (programming language)" href="http://www.ruby-lang.org/" rel="homepage">Ruby</a>.  I think that the two are absolutely two different species.</p>
<p style="text-align:justify;">If you are going to do anything in <a class="zem_slink" title="Geographic information system" href="http://en.wikipedia.org/wiki/Geographic_information_system" rel="wikipedia">GIS</a> or <a class="zem_slink" title="ArcView" href="http://www.esri.com/software/arcgis/arcview/" rel="homepage">ArcView</a> then Python is the way to go.  <a class="zem_slink" title="Esri" href="http://www.esri.com/" rel="homepage">ESRi</a> has embedded Python into its applications and I assume that Python will be there for a long time to come.</p>
<p style="text-align:justify;">Primarily the two languages are very similar.  I think that the choice must be decided on what to use them for.  I feel that there are a lot of aspects of Python that are better than Ruby and vice-versa.</p>
<p style="text-align:justify;">The line between the two becomes more distinct when you look at <a class="zem_slink" title="Web application" href="http://en.wikipedia.org/wiki/Web_application" rel="wikipedia">web applications</a> and the programming community.  Here is where I start to piss people off........</p>
<p style="text-align:justify;">I (and again it is my blog and my opinion) feel that <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">Ruby on Rails</a> is EASIER to learn and use than <a class="zem_slink" title="Django (web framework)" href="http://www.djangoproject.com" rel="homepage">Django</a>.  For those that do not know, Django is written in Python such as Rails is written in Ruby.  You cannot compare Python and Django any more than you can compare monkeys and elephants.  They are two absolute different things.  You can however compare Rails and Django.</p>
<p style="text-align:justify;">Now this is what I have discovered as far as the community goes between Django and Rails.  I have already posted that I (again my blog) feel that Python/Django users are a complete different species than Ruby/Rails users.  To me the Python/Django users are those that prefer to work alone and dislike the mob mentality as opposed to the Ruby/Rails users that are a very close knit family.  In my attempts to learn both Django and Rails, I have found a lot more support and people willing to help learn which leads me to yet another tirade of mine....</p>
<p style="text-align:justify;">As there are so many places to learn and get help learning different languages (I have often blogged that if you have any questions, feel free to contact me) I am totally against ANYBODY charging to teach either of these languages.  Sure everybody deserves to make money but how many of those out there learned from somebody else and are now charging to teach others.  Maybe my attitude is skewed as programming in general is a hobby to me although I do get paid for it sometimes.</p>
<p style="text-align:justify;">Take for an example one such person out there that spends who knows how much time creating <a class="zem_slink" title="Railscasts" href="http://railscasts.com/" rel="homepage">Railscasts</a> (<a href="http://railscasts.com/">http://railscasts.com/</a>) also known on Twitter as @rbates the world famous Ryan Bates.  Now I am sure that somewhere he is making money to do what he does but I do not care if it is FREE for me!  Take for example my routing articles or posts; many people/companies charge for the information that I give away for free just like Ryan Bates.</p>
<p style="text-align:justify;">Now for those of you that I have pissed off........If you make money charging people to take your programming classes  I do not fault you.  I myself will NEVER pay to learn programming especially Ruby on Rails as there are way too many tutorials out there and too many people willing to help.</p>
<p style="text-align:justify;">Keep open source open source and help others as others have helped you!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>398</wp:post_id>
  <wp:post_date>2011-05-23 18:27:21</wp:post_date>
  <wp:post_date_gmt>2011-05-24 01:27:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-or-ruby</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2011-05-24 01:27:21";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a20f5928fed8e4024634394d05c1bcf4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8705dceeca86878a0631cc719f96b043</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>268</wp:comment_id>
    <wp:comment_author><![CDATA[Yves Moisan]]></wp:comment_author>
    <wp:comment_author_email>yves.moisan@boreal-is.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>204.19.34.218</wp:comment_author_IP>
    <wp:comment_date>2011-05-24 10:28:44</wp:comment_date>
    <wp:comment_date_gmt>2011-05-24 17:28:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA["I (and again it is my blog and my opinion) feel that Ruby on Rails is EASIER to learn and use than Django."  Fair enough, but it is unfair to boil down Python to Django when it comes to web apps.  Please google around for *other* Python web frameworks and you should come up with way more than one web app framework ranging from all-in-one (e.g. Zope, Django) to "WSGI toolware" (check the new incarnation of Pylons, Pyramid; see TurboGears, etc.).  Do the same for Ruby ;-).  No offense to Ruby, really.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1306258125.1076";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1306258621</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1306258621.3326";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-24 17:28:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>269</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.200.83.175</wp:comment_author_IP>
    <wp:comment_date>2011-05-24 11:09:43</wp:comment_date>
    <wp:comment_date_gmt>2011-05-24 18:09:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yves, you are absolutely correct.  In my tirade last night I neglected to mention that there are several other Python web frameworks.  I unfortunately cannot speak for any of the other Python web frameworks as I have never used any of them.  The same goes for Ruby as you also said, although I am limited to talking about Rails only.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>268</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1306260584</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1306260585.3346";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-05-24 18:09:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Could Phoenix become a Technology mecca?</title>
  <link>http://bob-roberts.net/2011/06/16/could-phoenix-become-a-technology-mecca/</link>
  <pubDate>Thu, 16 Jun 2011 22:15:15 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=408</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I don't want to jump to extremes just yet, but the Phoenix area really seems to be bustling with technology these days.  There are more and more programmer groups, user groups, and all around technology meetup groups springing up all over the valley.  There are now 3 (that I know of) co-working locations in the Phoenix valley.  You have <a href="http://incohoots.com/">Cohoots</a>, <a class="zem_slink" title="Gangplank" href="http://gangplankhq.com/" rel="homepage">GangPlank</a>, <a href="http://hackspace.skysong.asu.edu/">ASU Skysong</a>, <a href="http://osptempe.com/">OSP Tempe</a> and more on the way.</p>
<p style="text-align:justify;">We have a very well established and active Ruby/Rails community (<a href="http://rubyaz.heroku.com/">http://rubyaz.heroku.com/</a>), an ever growing Geo/GIS community (<a href="http://phxgeo.org/">http://phxgeo.org/</a>), as well as Android, Win 7 etc.</p>
<p style="text-align:justify;">This fall we are having our first WhereCamp in Phoenix, a Ruby conference called SunnyConf (<a href="http://sunnyconf.com/">http://sunnyconf.com/</a>), and another DesertCodeCamp (<a href="http://nov2011.desertcodecamp.com/">http://nov2011.desertcodecamp.com/</a>) on November 5th.  I even heard that Steve Jobs may be showing up!!</p>
<p style="text-align:justify;">Not sure about a mecca but we are on our way......</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>408</wp:post_id>
  <wp:post_date>2011-06-16 15:15:15</wp:post_date>
  <wp:post_date_gmt>2011-06-16 22:15:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>could-phoenix-become-a-technology-mecca</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6a807d20a3a4991de2cedea74654943d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_eb7807c53f857ec9c29692c945f6a53d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e21a4d505fc5ec6639729476e01273f6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1c41af98ac96d68430e41028b15e9e4f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2a4d557ee808c9309104e6403f96f721</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7614ee6968d5e67708c7f46930b00ead</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a746f03ae52a9f9f7dd11a9d9d0f3b07</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f8d4ee53cad0674d11f3b83a084e6618</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Python geoprocessing with .csv and field types</title>
  <link>http://bob-roberts.net/2011/06/24/python-geoprocessing-with-csv-and-field-types/</link>
  <pubDate>Fri, 24 Jun 2011 23:31:26 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=420</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">A while back I showed how to import a <a class="zem_slink" title="Comma-separated values" href="http://en.wikipedia.org/wiki/Comma-separated_values" rel="wikipedia">.csv</a> to create a <a class="zem_slink" title="Shapefile" href="http://en.wikipedia.org/wiki/Shapefile" rel="wikipedia">shapefile</a>.  The script that I had written for a client went unused for quite sometime and after trying out the resulting shapefile it was determined that the fields from the .csv were being formatted incorrectly in the resulting shapefile.</p>
<p style="text-align:justify;">Last night I set out to fix this.  The idea was to create a blank <a class="zem_slink" title="Table (database)" href="http://en.wikipedia.org/wiki/Table_%28database%29" rel="wikipedia">database table</a> with the proper field formats and then copy the values from the .csv to the database table.  What I thought was going to take 30 minutes to complete, turned into a long adventure.  About 6 hours later I finally figured it out.  Interestingly enough, I found almost NO info on what I was trying to do.  Finally I found a partial reference in a forum thread from 2006 and wasn't sure if it would even work.</p>

[sourcecode language="Python"]
# import required modules
import sys, os, glob
import arcgisscripting

# Create the geoprocessor object
gp = arcgisscripting.create()
# I was having issues with a table view not deleting so I added the overwrite
gp.overwriteoutput = 1

## System arguments
# Input .csv
File_in = sys.argv[1]
# Output shapefile
File_out = sys.argv[2]
# Input table_template
tabletemp = sys.argv[3]

# Set the workspace for the processing files
gp.workspace = os.path.dirname(sys.argv[1])

# Convert the .csv to .dbf in the directory from sys.argv[3]
gp.AddMessage(&quot;\nCreating processing .dbf from .csv...&quot;)
gp.TableToDbase_conversion(File_in, os.path.dirname(sys.argv[3]))

## Make copies so that processing doesn't take place on the originals.
gp.AddMessage(&quot;\nCreating processing file...&quot;)
gp.Copy_management(File_in[:-4]+&quot;.dbf&quot;, &quot;tempfile.dbf&quot;)
gp.Copy_management(tabletemp, &quot;temptable.dbf&quot;)

# Need to use a search cursor to read the values from the input file
# and then use a insert cursor to write to the new table.
# The part I could not figure out is the SetValue function.  By using a
# while statement we can read thru each of the records in the input .csv
# and then write them out using SetValue.
# The SetValue takes two parameters; the first is the field name in the new
# table and the second is the field name in the read file.  Quite similiar
# to Field Mapping actually.  The input field name must not match the output
# field name, however the formats do need to match.
gp.AddMessage(&quot;\nSearch cursor process...&quot;)
intable = &quot;tempfile.dbf&quot;
outtable = &quot;temptable.dbf&quot;
table = gp.SearchCursor(intable)
run = table.Next()
outRows = gp.InsertCursor(outtable)
while run:
	outRow = outRows.NewRow()
	outRow.SetValue(&quot;FieldName1&quot;, run.FieldName1)
	outRow.SetValue(&quot;FieldName2&quot;, run.FieldName2)
	outRow.SetValue(&quot;FieldName3&quot;, run.FieldName3)
	outRow.SetValue(&quot;FieldName4&quot;, run.FieldName4)
	run = table.Next()
del outRows

# From here you can do whatever you wish with the new table &quot;temptable.dbf&quot;
# If you want to make a points shapefile you will need to use the MakeEventLayer
# as shown below.

gp.AddMessage(&quot;Creating the output points file...&quot;)
# Make a point shapefile based on the X,Y in the table
gp.MakeXYEventLayer_management(&quot;temptable.dbf&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Table_output&quot;)
gp.CopyFeatures_management(&quot;Table_output&quot;, &quot;temp.shp&quot;)
# Create a prj file for temp.shp
coordsys = &quot;Coordinate Systems/Geographic Coordinate Systems/World/WGS 1984.prj&quot;
gp.defineprojection(&quot;temp.shp&quot;, coordsys)

gp.AddMessage(&quot;Creating final output file...&quot;)
# Create the output files based on the user's input
gp.Rename_management(&quot;temp.shp&quot;, File_out)

gp.AddMessage(&quot;Cleanup...&quot;)
# Delete &quot;process&quot; files
for file in glob.glob(gp.workspace+&quot;/temp*&quot;):
    os.remove(file)
for file in glob.glob(gp.workspace+&quot;/*xml&quot;):
    os.remove(file)

gp.AddMessage(&quot;\nImport Successful.\n&quot;)
[/sourcecode]

Hope this helps!
BR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>420</wp:post_id>
  <wp:post_date>2011-06-24 16:31:26</wp:post_date>
  <wp:post_date_gmt>2011-06-24 23:31:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>python-geoprocessing-with-csv-and-field-types</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="geoprocessing-with-python"><![CDATA[Geoprocessing with Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Route Optimization article in Waste Advantage magazine</title>
  <link>http://bob-roberts.net/2011/07/04/route-optimization-article-in-waste-advantage-magazine/</link>
  <pubDate>Tue, 05 Jul 2011 00:33:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=428</guid>
  <description/>
  <content:encoded><![CDATA[My Solid Waste Routing article was just published in the July issue of Waste Advantage magazine.  The online version can be found <a href="http://www.epaperflip.com/aglaia/viewer.aspx?docid=e3717396273046c5a8d32e6827a02ecc">here</a> on page 25.  Now I am officially published!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>428</wp:post_id>
  <wp:post_date>2011-07-04 17:33:00</wp:post_date>
  <wp:post_date_gmt>2011-07-05 00:33:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>route-optimization-article-in-waste-advantage-magazine</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My Ruby on Rails progress</title>
  <link>http://bob-roberts.net/2011/09/02/my-ruby-on-rails-progress/</link>
  <pubDate>Sat, 03 Sep 2011 02:53:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=437</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Hard to believe that I started this blog almost a year ago to share my new found knowledge of Python.  Wow have things morphed.  I still use Python for geoprocessing in ArcGIS but I have really immersed myself in Ruby on Rails.  I have been learning and studying and learning anything and everything that I can about <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">RoR</a>.  There is so much info out there for learning both Ruby and Rails.  I have tried to watch just about all of the Railscasts.com Rails tutorials that Ryan Bates puts out there for free.  I have read other tutorials and found other screencasts as well.  If anybody ever says that there is not enough info on Ruby and Rails, well then they never heard of Google.</p>
<p style="text-align:justify;">I know I have touched on this before but I am so impressed with the Ruby and Rails community.  I can't even count how many people have offered to help and/or helped me on my Quest to be a Rails pro.  My advice to new users or those looking to learn; find a local user group.  They are everywhere.  Look for co-working places in the cities where you live, that is where the programmers live.  A lot of places will have open hack nights where programmers new and experienced can go to work together or to get help and advice.  Other than that, read everything and just start coding.</p>
<p style="text-align:justify;">Shortly after I started "to get Rails" I found myself in a tutorial rut.  Too many "to do" or mini blogs, etc and I had to do something new.  A friend that I met at Ruby::AZ our local Ruby/Rails group gave me a real old app that he started on Rails v1 something.  I had the code to look at and a half running app to see what he had done.  As it was way too old version of Rails, I had to build it from the ground up.  I learned more doing this than any tutorial taught me.  It is easy following the steps in a tutorial but a lot harder to see what is is that you want to build, and then building it.</p>
<p style="text-align:justify;">I am still doing little things on the side and do not a "live" app of my own up but there are a couple of apps that I am working on.  In the meantime, I try to learn as much <a class="zem_slink" title="HTML" href="http://en.wikipedia.org/wiki/HTML" rel="wikipedia">HTML</a> and <a class="zem_slink" title="Cascading Style Sheets" href="http://en.wikipedia.org/wiki/Cascading_Style_Sheets" rel="wikipedia">CSS</a> as possible as well as JS and jQuery which is now installed by default in Rails 3.1.0.</p>
<p style="text-align:justify;">I am planning on doing some pair programming soon and striving the become that Rails "Ninja"</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>437</wp:post_id>
  <wp:post_date>2011-09-02 19:53:14</wp:post_date>
  <wp:post_date_gmt>2011-09-03 02:53:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-ruby-on-rails-progress</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why I love Ruby on Rails</title>
  <link>http://bob-roberts.net/2011/10/05/why-i-love-ruby-on-rails/</link>
  <pubDate>Thu, 06 Oct 2011 04:55:06 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=440</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">OK, so I have been working with Rails for a few months now.  I have a long ways to go yet but I am getting a pretty good grip on things.  As of yet I do NOT have a live app out there to share but I am working on an app of my own and collaborating on a couple of other apps.  I have a lot better understanding than I have knowledge but I am working on that.</p>
<p style="text-align:justify;">Why do I love Rails?  First off, the <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">Ruby on Rails</a> community in Phoenix is rock solid.  The <a title="Ruby::AZ" href="http://rubyaz.heroku.com/" target="_blank">Ruby::AZ</a> group is fantastic here in Phoenix.  Every month there is a pretty good turn out and always plenty of people volunteering to present.  Another fantastic group in Phoenix is the <a title="Phoenix Night Owls" href="http://www.phxnightowls.com/" target="_blank">Phoenix Night Owls</a> where there are plenty of people to help you out on your projects.  I have said this before and I will say it again, the Ruby on Rails community is so supportive and it amazes me how many Rails developers are willing to help you learn and willing to take the time to teach you.  I have been fortunate to meet the guys at <a title="RebelHold" href="http://www.facebook.com/pages/RebelHold/123914474333396" target="_blank">RebelHold</a> who have taken me under their wing to teach me better practices in Rails development.  What is great about these guys is that they FORCE me to become a better coder.  I have learned so much from @m3talsmith and @fzf in just a few months.</p>
<p style="text-align:justify;">What have I learned?  Well I must say that I think <a class="zem_slink" title="NoSQL" href="http://en.wikipedia.org/wiki/NoSQL" rel="wikipedia">NOSQL</a> is the way to go.  Preferably <a class="zem_slink" title="MongoDB" href="http://www.mongodb.org/" rel="homepage">mongoDB</a>.  Just today I went thru the Hell of installing postgresql.  What a pain in the ASS.  With mongoDB there is no migrating to add a field.  There is just an easy install of mongoDB.  Want to add a field to a table?  Put in the model.  I can say that I didn't have that hard of a time with sqlite3 but still I think mongodb is the way to go.  Afraid that mongodb cannot handle large amounts of data?  Just a few small companies like Disney, craigslist, and foursquare.  It is not like those guys have a lot of data.</p>
<p style="text-align:justify;">What else do I like to use?  I have recently started to use <a title="Omniauth" href="https://github.com/intridea/omniauth" target="_blank">Omniauth</a> for registering as a user on my app.  <a title="Devise" href="https://github.com/plataformatec/devise" target="_blank">Devise</a> (sorry @m3talsmith) for authentication when not using <a title="Omniauth" href="https://github.com/intridea/omniauth" target="_blank">Omniauth</a>.  RVM is a definite must for version control.  Where do I go to learn?  I would hate myself if I were to forget to mention <a title="Railscasts" href="http://railscasts.com/" target="_blank">Railscasts.com</a> and the man behind <a class="zem_slink" title="Railscasts" href="http://railscasts.com/" rel="homepage">Railscasts</a> @rbates who amazes me that he not only has the time but also takes the time to record awesome Rails tutorials EVERY week!  And they are free to watch.  Another example of the greatness of the Rails community.</p>
<p style="text-align:justify;">BDD.  I have totally gotten into the world of <a class="zem_slink" title="Behavior Driven Development" href="http://en.wikipedia.org/wiki/Behavior_Driven_Development" rel="wikipedia">Behavior Driven Development</a>.  In fact this month I am giving a presentation on BDD and <a class="zem_slink" title="RSpec" href="http://rspec.info/" rel="homepage">Rspec</a> / capaybara.  I now know that "if you are not testing your rails app, you are not developing, you are guessing."  Take the time to learn how to write and use request specs.  It takes longer up front but saves time in the long run.  Learn to write stories in <a class="zem_slink" title="Pivotal Tracker" href="http://www.pivotaltracker.com/" rel="homepage">pivotal tracker</a> and transpose those to your tests.  You will learn a lot more by testing and write less and cleaner code.</p>
<p style="text-align:justify;">Another thing I was forced into (LOL) was NOT using scaffolding.  Since I stopped using scaffolding I write more code but I understand what I write better.  While I might be actually typing more code, in the end I have fewer lines of code.</p>
<p style="text-align:justify;">I will add my BDD/Capybara presentation on here after I have it finished.  I will also start blogging more about my experiences with BDD and show some code in the near future.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>440</wp:post_id>
  <wp:post_date>2011-10-05 21:55:06</wp:post_date>
  <wp:post_date_gmt>2011-10-06 04:55:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-i-love-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>384</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel Greenfeld (@pydanny)]]></wp:comment_author>
    <wp:comment_author_email>pydanny@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/pydanny</wp:comment_author_url>
    <wp:comment_author_IP>208.177.47.101</wp:comment_author_IP>
    <wp:comment_date>2011-10-07 04:34:23</wp:comment_date>
    <wp:comment_date_gmt>2011-10-07 11:34:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Glad you are ditching scaffolding! A little bit of project layout is one thing, code generation is another thing altogether. This is independent of language choice too. :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1317987263.2119";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a1.twimg.com/profile_images/762155936/pc_cartwheel_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>14835908</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1317998589</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1317998589.2169";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-10-07 11:34:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>482</wp:comment_id>
    <wp:comment_author><![CDATA[Why I love Ruby on Rails]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://python2rails.com/?p=83</wp:comment_author_url>
    <wp:comment_author_IP>184.168.46.132</wp:comment_author_IP>
    <wp:comment_date>2012-01-11 16:40:17</wp:comment_date>
    <wp:comment_date_gmt>2012-01-11 23:40:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Read More&#8230;  This entry was posted in Articles, Learning Curve. Bookmark the permalink. Post a comment or leave a trackback: Trackback URL.   &laquo; Why I am starting to love Ruby on Rails 8 Reasons I love Ruby &raquo; [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326325218.0556";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1326331161</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326331161.3231";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-11 23:40:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>452</wp:comment_id>
    <wp:comment_author><![CDATA[Why I love Ruby on Rails]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://php2rails.com/?p=350</wp:comment_author_url>
    <wp:comment_author_IP>184.168.46.132</wp:comment_author_IP>
    <wp:comment_date>2011-12-22 16:31:29</wp:comment_date>
    <wp:comment_date_gmt>2011-12-22 23:31:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Read More&#8230;  This entry was posted in Articles, Learning Curve. Bookmark the permalink. Trackbacks are closed, but you can post a comment.   &laquo; Companies Using Ruby on Rails [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324596690.5355";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324596889</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324596889.7044";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-22 23:31:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Jobless in Arizona</title>
  <link>http://bob-roberts.net/2011/10/20/jobless-in-arizona/</link>
  <pubDate>Fri, 21 Oct 2011 01:27:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=453</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Well, on Monday I gave my 2 weeks notice at my job.  Today was my last day.  I no longer work for a company.  I guess at this point I am my own boss, self-employed, or just jobless.</p>
<p style="text-align:justify;">I am now working as a <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">Ruby on Rails</a> Developer.  A <a class="zem_slink" title="Programmer" href="http://en.wikipedia.org/wiki/Programmer" rel="wikipedia">computer programmer</a> or a <a class="zem_slink" title="Web developer" href="http://en.wikipedia.org/wiki/Web_developer" rel="wikipedia">web developer</a>; whatever title is best.</p>
<p style="text-align:justify;">It has been a long trip so far, going from learning <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage">Python</a> for geoprocessing, to wxPython, to Ruby on Rails.  There are quite a few people that have helped me along the way.  I remember my first time at the Ruby::AZ meetup.  I had no clue what the Hell they were talking about.  I just gave a presentation this week at Ruby::AZ for Rails BDD and Capybara.  What a transition it has been.</p>
<p style="text-align:justify;">I am now a contractor for ReblHold and working on my first project there.  Hopefully before too long I can become a partner there.  What is RebelHold?  From their Facebook page:</p>
<p style="text-align:justify;">"RebelHold is a workers collective, completely worker owned and run.  RebelHold was created to equalize the playing ﬁeld for workers, providing full health care (with no copays), paid training, equal salaries, and to meet the physical and social needs of communities all around us. We believe that putting the means of production in the hands of the workers is a ﬁrst step, and that training new people to be able to work in whatever capacity they can is valuable. Every worker is an owner, all decisions are made by consensus, and every worker has the combined responsibility of training others. We are highly motivated to taking care of the needs of others through this process; and open to other processes to help.  To create a mass of workers on equal grounds with each other who are taken care of completely; to pour ourselves in to improving the communities around us through training, through direct action, and through charity as needed; to communicate well with others; and to make high quality software that we can be proud of."</p>
<p style="text-align:justify;">All of the places out there that charge to teach Ruby on Rails, and these guys are helping me learn for free!!  With their help I was able to take the big leap to being a contract programmer and saying goodbye to corporate America.</p>
<p style="text-align:justify;">From here on out it is the developers life for me!</p>
<span style="font-size:small;"><span class="Apple-style-span" style="line-height:normal;">
</span></span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>453</wp:post_id>
  <wp:post_date>2011-10-20 18:27:46</wp:post_date>
  <wp:post_date_gmt>2011-10-21 01:27:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>jobless-in-arizona</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>505</wp:comment_id>
    <wp:comment_author><![CDATA[Matt]]></wp:comment_author>
    <wp:comment_author_email>MapRantala@Gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://nodedangles.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>160.94.215.42</wp:comment_author_IP>
    <wp:comment_date>2012-01-30 06:15:41</wp:comment_date>
    <wp:comment_date_gmt>2012-01-30 13:15:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just wondering if you're still doing GIS work too or has that been kinda phased out?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327929342.3828";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1327938928</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327938929.3917";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-30 13:15:41</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>506</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>72.44.240.228</wp:comment_author_IP>
    <wp:comment_date>2012-01-30 08:56:26</wp:comment_date>
    <wp:comment_date_gmt>2012-01-30 15:56:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[For the moment, yes no more GIS.  I have looked at GeoSpatial options for Rails but have not used any.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>505</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1327938986</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327938987.1619";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-30 15:56:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>518</wp:comment_id>
    <wp:comment_author><![CDATA[Map Ranter]]></wp:comment_author>
    <wp:comment_author_email>Map.Rantala@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://nodedangles.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>160.94.215.42</wp:comment_author_IP>
    <wp:comment_date>2012-02-06 11:52:15</wp:comment_date>
    <wp:comment_date_gmt>2012-02-06 18:52:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks, good to know. I'm a GISer &amp; been debating if I want to change directions a bit so I've been watching your redirection...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>14087936</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328554335.8279";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"maprantala";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328554455.5794";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328554454</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-02-06 18:52:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Rails underestimated...</title>
  <link>http://bob-roberts.net/2011/11/04/rails-underestimated/</link>
  <pubDate>Sat, 05 Nov 2011 02:38:49 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=455</guid>
  <description/>
  <content:encoded><![CDATA[<div style="text-align:justify;">

I have been a self employed contracted <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">Ruby on Rails</a> developer for a couple of weeks now.  I cannot thank @rebelhold and @m3talsmith enough for this opportunity.  Leaving the big bad corporate world is scary as Hell, but it is a lot easier when you have others to help you.

Hiring myself as my boss was quite a change in life for me.  I have NEVER been without a JOB.  This is the first time that I have ever been 'self-employed'.  I have to say that at least now I am fully responsible for my success or failure.  I am also only limited to what I "want" to do.  If I want a "raise" then I will have to work more.  For the first time, I control my own destiny!

So enough of that....  I thought that I was ready to enter the world of Rails development and I had studied and practiced Rails as well as working on tutorials and creating my own app.  Wow, I really underestimated Rails entirely.  Oh Rails is Rails but I never expected to need to use so much Ruby and <a class="zem_slink" title="JavaScript" href="http://en.wikipedia.org/wiki/JavaScript" rel="wikipedia">Javascript</a>.  I had a pretty well know Rails dev tell me that he wasn't very good at Ruby.  That was a crock of shit!!  I thought that Rails was mostly html.  Man was I wrong.

In order to be a good Rails dev, you need to know Ruby and I mean really know Ruby.  If you think that you can get by with just "basic" Ruby knowledge, then you are ok if you want to create "basic" Rails apps.  If you don't mind having a "basic" Rails app, well then never mind learning Javascript or <a class="zem_slink" title="JQuery" href="http://jquery.com/" rel="homepage">jQuery</a>.  If you just want to be a "programmer" and not a "developer" then you do not need to learn Ruby and JS.

Two weeks on the project that I am on and I would say that about 50% of what I have been using is Javascript and about 24% .sass.  That leaves only 25% and most of that has been Ruby.  And I thought that I knew enough Rails.

Again, I have to thank @m3talsmith, @fzf and @rebelhold for teaching me and helping me learn while coding.  It is RebelHold's philosophy to help others to learn Ruby on Rails and do to so without charging to teach.  If you have read any of my other posts you will know that I am pretty anti paying to learn RoR or charging for doing so.  I think that open source is or should be a community that works and learns together.  If you have read any of my posts you know that I am so impressed with the Rails community and the fact that most Rubyists or Rails devs are always willing to assist others.  The @rubyaz group in the Phoenix area is a very strong and tight community with monthly meetings offering ANYBODY to present on Ruby related topics.  If you live in the valley you definitely need to check them out.

Rails underestimated..... Yes I really did underestimate Rails and I see that I have soooo much more to learn.  That being said, every day I learn a little more and every day I am one more day out of the corporate world.

BR

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>455</wp:post_id>
  <wp:post_date>2011-11-04 19:38:49</wp:post_date>
  <wp:post_date_gmt>2011-11-05 02:38:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-underestimated</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>412</wp:comment_id>
    <wp:comment_author><![CDATA[James]]></wp:comment_author>
    <wp:comment_author_email>james.kelly.99@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>203.19.252.230</wp:comment_author_IP>
    <wp:comment_date>2011-11-06 15:29:13</wp:comment_date>
    <wp:comment_date_gmt>2011-11-06 22:29:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bob

Thanks for posting about your transition from corporate GIS into a contract rails dev, I am finding this most interesting as I am considering the same myself.  Sitting in a very similar position to yourself, a completely self taught programming who has come at it through GIS and then widening the skills to be a developer rather than a scripter, it is interesting to see your point of view and your thoughts, mostly because a lot of what you have said resonates with me.  

I use .NET at work, but RoR at home and the allure of working for myself is becoming more appetising the more I think about it (and read about it ;)).

Keep up the posts, and I hope for both of our sakes that you find success.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1320619070.02";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320618553.8322";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1320619069</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-11-06 22:29:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>413</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>24.251.134.190</wp:comment_author_IP>
    <wp:comment_date>2011-11-06 15:46:55</wp:comment_date>
    <wp:comment_date_gmt>2011-11-06 22:46:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[James, I think that they say that great minds think alike!  It is interesting to hear your very similar situation.  I guess it may be like a fever in that once a person experiences programming, it just continues to grow.  Keep learning, keep trying, fire your boss and hire yourself!!

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>412</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320619616.3082";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1320619616</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-11-06 22:46:55</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>414</wp:comment_id>
    <wp:comment_author><![CDATA[Andy Steinmann (@andySteinmann)]]></wp:comment_author>
    <wp:comment_author_email>andySteinmann@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/andySteinmann</wp:comment_author_url>
    <wp:comment_author_IP>173.218.98.176</wp:comment_author_IP>
    <wp:comment_date>2011-11-06 20:53:23</wp:comment_date>
    <wp:comment_date_gmt>2011-11-07 03:53:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the inspiration.  I am close (within six months) of taking the plunge out of the corporate world and into the world of consulting.

I would love to know more of how else you made the jump.  How you find leads etc.

Thanks again, it is great to know that there are people out there doing what I want to do.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320645435.0374";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>214261060</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1320645434</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a1.twimg.com/profile_images/1275762242/groove17_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320638004.0991";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-11-07 03:53:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>What's in a name?  Programmer or Developer</title>
  <link>http://bob-roberts.net/2011/11/06/whats-in-a-name-programmer-or-developer/</link>
  <pubDate>Sun, 06 Nov 2011 23:34:13 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=468</guid>
  <description/>
  <content:encoded><![CDATA[<div style="text-align:justify;">

I was part of a conversation the other day that really struck a nerve with me and has resonated in my mind since.  We were discussing <a class="zem_slink" title="Programmer" href="http://en.wikipedia.org/wiki/Programmer" rel="wikipedia">Programmer</a> versus <a class="zem_slink" title="Software developer" href="http://en.wikipedia.org/wiki/Software_developer" rel="wikipedia">Developer</a> and what we were.  This lead to a more generalized conversation about programmers/developers.For now, I am going to use Programmer/Developer as interchangeable names/titles.  Both of these can be part of a large corporation, small company or self-employed.  Both of these titles are universally used and interchanged in job titles, want ads, resumes and regular day to day conversation.  Most probably don't care what they are called or what their title is as long as they are getting paid what they want.

We can look at the dictionary definitions for these as well:

From Wikipedia:
<ul>
	<li>A <strong>programmer</strong>, <strong>computer programmer</strong> or <strong>coder</strong> is someone who writes <a title="Computer software" href="http://en.wikipedia.org/wiki/Computer_software">computer software</a>. The term <em>computer programmer</em> can refer to a specialist in one area of <a title="Computer programming" href="http://en.wikipedia.org/wiki/Computer_programming">computer programming</a> or to a generalist who writes code for many kinds of software.</li>
	<li>A <strong>software developer</strong> is a person concerned with facets of the <a title="Software development process" href="http://en.wikipedia.org/wiki/Software_development_process">software development process</a>. Their work includes researching, designing, developing, and testing software. A software developer may take part in design,<a title="Computer programming" href="http://en.wikipedia.org/wiki/Computer_programming">computer programming</a>, or <a title="Software product management" href="http://en.wikipedia.org/wiki/Software_product_management">software</a> <a title="Project manager" href="http://en.wikipedia.org/wiki/Project_manager">project management</a>.</li>
</ul>
<div>A programmer writes computer software.  A developer may take part in design, computer programming...</div>
<div>Now, my opinion....</div>
<div>In the end, both Programmers and Developers write code and in that sense are very much the same.  The difference that I see and will argue about is everything else.  A Programmer is given the task of writing the code.  This might entail writing tests as well.  I picture the Programmer as a person in a large organization that is an assembly line worker ant.  They are given a task and expected to complete it.  The Programmer may never meet the client and may never see the final product.  The Programmer s one spoke in the wheel of the entire project.  The Programmer is never asked what they think or for suggestions, they just write code.  Good Programmers strive to learn more and to be Developers.  If I worked for a large company, I would just be a Programmer and there is absolutely nothing wrong with that at all.  I do not look down on or think that I am better than a Programmer.  Programmers are not Developers.</div>
<div>Developers on the other hand are also Programmers.  Large companies have Developers and they are responsible for the Programmers.  Small companies and self-employed, are mostly Developers.  A self-employed person cannot just program.  They interact with clients, they are part of the design process, they develope and they program.  The developer may be every spoke of the wheel or they may work closely with other developers.  Developers can take a clients idea and make it a reality.  Developers must be flexible and know when to offer the client advice and when not to.  Sometimes the client may not know what they really want and it is the Developers job to tell them. And in the end, the Developer sits down, puts on their Programmers hat and writes code.</div>
<div>There is a place and a need for both Programmers and Developers.  Right now I am still learning and I would say that I am a Programmer.</div>
<div>But before long I will become a Developer.  <a href="http://rebel-outpost.com">Rebel Outpost, LLC.</a></div>
</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>468</wp:post_id>
  <wp:post_date>2011-11-06 16:34:13</wp:post_date>
  <wp:post_date_gmt>2011-11-06 23:34:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>whats-in-a-name-programmer-or-developer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="python"><![CDATA[Python]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4484a1672595639dd0ba1e8b5161c6f1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fa8bd2fc3c36c7e689f6447cbec8b42b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6f2bbf7bae85f1fa9bcb1b0bacc30414</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d2546cbc618fa771e4a245aff975c84a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cb5a4029b903e954b91bd206d5e2fa28</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6219315058645b654aded3199e597e9d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e3a221fdd0a3f8ddfcd5f5e6c71253d0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_61e00df438575329f110d753ad173322</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9bd9d6d94b8ec39e489cbb072e3d2a6b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a0e50c834e99ce6e1ab7ba80684114be</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2a3d921831f5bfbde5f4f4ad86d31016</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7aba89431af1351436501af038fb6fc0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d30bde2475a8c94a0f48882a860c7af1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cba3f70300292607b2671e6bd2fa1cac</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7a1393f4c83a5cdf167dcfc46b258c09</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fdfaa3f638f02e8ddc271e014c2d30df</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_319aa1bb5576212710d8b12c9a415ceb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_23c545dac991d593feb2d81e6e0f14c0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7d18637fa92e346f2109bc6fbbd98fd1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d9f8cfb12b2f70129e00cb0870f7e410</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>457</wp:comment_id>
    <wp:comment_author><![CDATA[Becoming a better Developer | My Corner of the Web]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://bob-roberts.net/2012/01/01/becoming-a-better-developer/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.7.75</wp:comment_author_IP>
    <wp:comment_date>2012-01-01 19:21:19</wp:comment_date>
    <wp:comment_date_gmt>2012-01-02 02:21:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] reading some good books this weekend that have made me think about an earlier post of mine, &#8220;Whats in a name? Programmer or Developer&#8221; and my views on the [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325470879.3549";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325471559</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325471559.7723";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-02 02:21:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>456</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>24.251.134.190</wp:comment_author_IP>
    <wp:comment_date>2011-12-30 14:24:40</wp:comment_date>
    <wp:comment_date_gmt>2011-12-30 21:24:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I agree and disagree with that.  The different terms and or job titles are in my opinion as well as yours, three different positions with three different responsibilities.

The issue is that there is no standardization of the terminology so that the terms are used interchangeably.

It is becoming even more diluted with the introduction of the term dev-ops.

In the end we are all coders and as long as I get paid you can call me anything!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>453</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325280280</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325280280.7944";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-30 21:24:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>468</wp:comment_id>
    <wp:comment_author><![CDATA[A geek with a hat &raquo; Programmers are born not made]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://swizec.com/blog/programmers-are-born-not-made/swizec/3369</wp:comment_author_url>
    <wp:comment_author_IP>77.234.129.42</wp:comment_author_IP>
    <wp:comment_date>2012-01-05 08:52:07</wp:comment_date>
    <wp:comment_date_gmt>2012-01-05 15:52:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] What&#8217;s in a name? Programmer or Developer (bob-roberts.net) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325778727.8791";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325780517</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325780517.5867";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-05 15:52:07</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>442</wp:comment_id>
    <wp:comment_author><![CDATA[A geek with a hat &raquo; Why programmers work at night]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://swizec.com/blog/why-programmers-work-at-night/swizec/3198</wp:comment_author_url>
    <wp:comment_author_IP>77.234.129.42</wp:comment_author_IP>
    <wp:comment_date>2011-12-15 09:18:09</wp:comment_date>
    <wp:comment_date_gmt>2011-12-15 16:18:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] What&#8217;s in a name? Programmer or Developer (bob-roberts.net) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1323965889.2604";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1323966200</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1323966201.0803";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-15 16:18:09</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>443</wp:comment_id>
    <wp:comment_author><![CDATA[Outsourcing Nepal]]></wp:comment_author>
    <wp:comment_author_email>info@outsourcingnepal.com</wp:comment_author_email>
    <wp:comment_author_url>http://blog.outsourcingnepal.com</wp:comment_author_url>
    <wp:comment_author_IP>49.244.137.86</wp:comment_author_IP>
    <wp:comment_date>2011-12-16 08:14:23</wp:comment_date>
    <wp:comment_date_gmt>2011-12-16 15:14:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[hm... seems you making me think on i am developer not programmer]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1324048463.447";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324055098.5081";s:7:"message";s:40:"broberts65 reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user</wp:meta_key>
      <wp:meta_value>broberts65</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324057453</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324057453.4601";s:7:"message";s:44:"broberts65 reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-16 15:14:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>444</wp:comment_id>
    <wp:comment_author><![CDATA[J Peters]]></wp:comment_author>
    <wp:comment_author_email>oldcoder57@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>136.1.1.102</wp:comment_author_IP>
    <wp:comment_date>2011-12-16 08:35:39</wp:comment_date>
    <wp:comment_date_gmt>2011-12-16 15:35:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If you were a bit older, you'd remember seeing the title "Programmer/Analyst". I always got a kick out of that one since one cannot really be a programmer without analyzing all kinds of things (ie, the code, the problem, the result, the tests, etc, etc.)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324049739.3532";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324055098.0381";s:7:"message";s:40:"broberts65 reported this comment as spam";s:5:"event";s:11:"report-spam";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user</wp:meta_key>
      <wp:meta_value>broberts65</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_wp_trash_meta_status</wp:meta_key>
      <wp:meta_value>0</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324057452</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324057452.7057";s:7:"message";s:44:"broberts65 reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-16 15:35:39</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>446</wp:comment_id>
    <wp:comment_author><![CDATA[Roger]]></wp:comment_author>
    <wp:comment_author_email>rogertdj@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>75.82.236.167</wp:comment_author_IP>
    <wp:comment_date>2011-12-17 11:10:27</wp:comment_date>
    <wp:comment_date_gmt>2011-12-17 18:10:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[wasn't analyst essentially just a developer minus the programming?  But in the case of "Programmer/Analyst" that's a Developer...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324145427.1532";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324148137</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1324148137.946";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-17 18:10:27</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>447</wp:comment_id>
    <wp:comment_author><![CDATA[Yoni Tsafir (@theyonibomber)]]></wp:comment_author>
    <wp:comment_author_email>theyonibomber@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/theyonibomber</wp:comment_author_url>
    <wp:comment_author_IP>94.159.245.32</wp:comment_author_IP>
    <wp:comment_date>2011-12-18 04:13:18</wp:comment_date>
    <wp:comment_date_gmt>2011-12-18 11:13:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[How about a "Software Engineer"? 
Is this a 3rd thing or is it the same as a software developer?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324206798.9396";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a1.twimg.com/profile_images/1618442253/Photo_on_2-11-11_at_8.30_AM_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>249179977</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324239081</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324239081.3673";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-18 11:13:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>448</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>24.251.134.190</wp:comment_author_IP>
    <wp:comment_date>2011-12-18 13:11:21</wp:comment_date>
    <wp:comment_date_gmt>2011-12-18 20:11:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[LOL, personally I think that they all mean the same!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>447</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324239081</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324239081.2823";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-18 20:11:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>453</wp:comment_id>
    <wp:comment_author><![CDATA[Habib Ahmed Bhutto]]></wp:comment_author>
    <wp:comment_author_email>habibbhutto@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>175.143.232.180</wp:comment_author_IP>
    <wp:comment_date>2011-12-25 07:08:48</wp:comment_date>
    <wp:comment_date_gmt>2011-12-25 14:08:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Software Engineer, Programmer and Developer, they all are different persons along their job titles each of them has it's own set of skills and responsibilities. I think that's main reason behind software crisis and software failure that we combine their jobs together and we think it's same.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1324822128.825";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1324948893</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1324948893.6843";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-12-25 14:08:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>760</wp:comment_id>
    <wp:comment_author><![CDATA[vijay choudhary]]></wp:comment_author>
    <wp:comment_author_email>choudhary_vj@rediffmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>118.95.59.141</wp:comment_author_IP>
    <wp:comment_date>2013-01-19 02:46:47</wp:comment_date>
    <wp:comment_date_gmt>2013-01-19 09:46:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[nice post]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358588807.346949100494384765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358627277</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358627277.3037960529327392578125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-19 09:46:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>756</wp:comment_id>
    <wp:comment_author><![CDATA[templelijah]]></wp:comment_author>
    <wp:comment_author_email>templelijah@gmx.com</wp:comment_author_email>
    <wp:comment_author_url>http://templelijah.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>98.225.124.158</wp:comment_author_IP>
    <wp:comment_date>2013-01-16 21:39:30</wp:comment_date>
    <wp:comment_date_gmt>2013-01-17 04:39:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Think of a land developer versus a land planner; The developer seems to get more into the development aspects of conceptualizing the big picture, and may know little about civil engineering, architecture, and various professions that are the slaves to aid the banker hand maidens;

Land developers are tapping a different teat all together; Conversely, many software developers have concepts that make less money then grunt programmers; 

NONE of this applies, I apologize, geeeeeeeeeeeeeeeeeeezzz...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>37518699</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358442461</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358442462.00603008270263671875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358397570.402101993560791015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:11:"templelijah";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-17 04:39:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>750</wp:comment_id>
    <wp:comment_author><![CDATA[biggigg]]></wp:comment_author>
    <wp:comment_author_email>ogleaad@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://maycart.in</wp:comment_author_url>
    <wp:comment_author_IP>27.4.82.68</wp:comment_author_IP>
    <wp:comment_date>2013-01-15 21:53:19</wp:comment_date>
    <wp:comment_date_gmt>2013-01-16 04:53:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[ok..its just too old fashioned to be programmer or hacker..
reminds me of ...who came first ...Egg or Chicken]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>true</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358311999.794291019439697265625;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:7:"biggigg";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358317675.268990993499755859375;s:7:"message";s:44:"broberts65 reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user</wp:meta_key>
      <wp:meta_value>broberts65</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358317691</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358317692.254621028900146484375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-16 04:53:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>751</wp:comment_id>
    <wp:comment_author><![CDATA[Lee]]></wp:comment_author>
    <wp:comment_author_email>aedasd@dsfgdfg.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>110.175.123.207</wp:comment_author_IP>
    <wp:comment_date>2013-01-15 22:17:04</wp:comment_date>
    <wp:comment_date_gmt>2013-01-16 05:17:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I prefer 'coder'.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358313424.6009318828582763671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358317690</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358317690.7607309818267822265625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-16 05:17:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>754</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-01-16 07:48:43</wp:comment_date>
    <wp:comment_date_gmt>2013-01-16 14:48:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well there are by far many different terms to describe the same thing and many different ways to define what it is that we do.  

I wrote this post right after I had just started to "code" for a living.  Since then I have learned a lot about what the differences are.  Lately the buzzword that I have heard and tend to like is Software Architect but I think that I will always refer to myself as a developer as I start with nothing and develop something out of that nothing.

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358347724</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358347725.581633090972900390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-16 14:48:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>753</wp:comment_id>
    <wp:comment_author><![CDATA[Saint Luci]]></wp:comment_author>
    <wp:comment_author_email>saintluci@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>121.54.92.119</wp:comment_author_IP>
    <wp:comment_date>2013-01-16 05:49:34</wp:comment_date>
    <wp:comment_date_gmt>2013-01-16 12:49:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[These are all just functional titles created by big corporations to classify the various functional roles in the big world of software development.

I am into the IT realm but more on IT infrastructure domain. In this field of technology, we have network/systems/voice admins (some call them operators) responsible for the day to day running, then you have the network/systems/voice engineers/architects who are in charge of design changes. Even further, you have storage admins, OS specific engineers, etc...

Are all these titles the same or interchangeable? Yes and No.

Yes they are in a very small company of less than 1,000 employees where the technology environment is not that complex.

No if you are in a company with thousands of employees and the environment is just too complex to be centrally managed by a single group of similar technical skills. You really need to break it down further into functional roles (which result to functional titles).

That is the same in the software development domain.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358340574.9840850830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358347363</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358347363.853744029998779296875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-16 12:49:34</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>758</wp:comment_id>
    <wp:comment_author><![CDATA[nir]]></wp:comment_author>
    <wp:comment_author_email>nirzari@tatvic.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>122.169.48.111</wp:comment_author_IP>
    <wp:comment_date>2013-01-17 01:27:13</wp:comment_date>
    <wp:comment_date_gmt>2013-01-17 08:27:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[He he .. so much confusing.. n now wht about technical analyst ?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358411234.3835780620574951171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358442467</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358442467.8352930545806884765625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-17 08:27:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>763</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Henley]]></wp:comment_author>
    <wp:comment_author_email>ntspec@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/ntspec</wp:comment_author_url>
    <wp:comment_author_IP>142.105.193.96</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 09:35:17</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 16:35:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Funny, my experience with companies is exactly the opposite. Devs are a recent development(groan) that sit in a dark room converting design to code. Programmers are people who are willing to do the dev job as long as we get the joy of doing the design.  Or this is what companies seem to expect. Of course my perspective may be colored by starting with fortran and assembly in 1979 . . . 
Our idea of the meaning could have changed, corporates never does.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358786118.0020449161529541015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ntspec";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358786514</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358786514.69822597503662109375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-21 16:35:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>764</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 09:43:15</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 16:43:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well, it certainly seems that there is no end to the names that we use to describe ourselves.

Lately I have heard a nice easy name for somebody that writes code: a coder!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>763</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358786595</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358786595.5213840007781982421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-21 16:43:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>766</wp:comment_id>
    <wp:comment_author><![CDATA[ntspec]]></wp:comment_author>
    <wp:comment_author_email>ntspec@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>142.105.193.96</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 09:51:24</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 16:51:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Oops, I thought it didn't post. (It took me to a login and came back to a blank message field) I wasn't responding to you because I hadn't seen yours yet.

Sorry about that!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>13023728</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358787085.792294025421142578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"ntspec";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358787173</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358787173.79576396942138671875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-21 16:51:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>767</wp:comment_id>
    <wp:comment_author><![CDATA[Jenstep]]></wp:comment_author>
    <wp:comment_author_email>stepler_j@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>98.237.192.147</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 13:54:38</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 20:54:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Your blog entry made this old lady smile.  I learned to write code (Fortran) in the 1970's because some of the chemical engineering problems I needed to solve were too hairy to solve without a computer.  That's right, I actually used a computer to compute.  To me, a programmer is someone who writes code for their own consumption, but never worries about any of the niceties that makes it usable by someone else.  No error checking, no fancy report formating, no COMMENTS.  A developer, on the other hand, is someone who writes code that is intended to be consumed by someone else.  They are developing a product to sell.
As such, I was a programmer, but not a developer.
In 1982, I wrote my first program on a PC.  I used Basic because there wasn't a Fortran compiler for the PC.  It did flare stack sizing for chemical plants.  You input the composition and amount of the waste stream that needed to be burned. It told you the height and land circumference needed for the flare stack.  I used it, a few of the other engineers in the office used it - it saved us a lot of time.  I guess no one even thinks about these sorts of applications anymore.  And so few people write code simply for their own use, it doesn't need its own identifier.
I guess its time for me to rethink my definitions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358801678.4876120090484619140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358801779</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358801780.432094097137451171875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-21 20:54:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>768</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 13:56:44</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 20:56:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A rose by any other name is still a Rose :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>767</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358801805</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358801806.3793289661407470703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-01-21 20:56:44</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>780</wp:comment_id>
    <wp:comment_author><![CDATA[What’s in a name? Programmer or Developer | My Corner of the Web | IADT.ICIR.com Student Portal]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://iadt.icir.com/whats-in-a-name-programmer-or-developer-my-corner-of-the-web-479</wp:comment_author_url>
    <wp:comment_author_IP>173.236.172.51</wp:comment_author_IP>
    <wp:comment_date>2013-02-02 19:29:06</wp:comment_date>
    <wp:comment_date_gmt>2013-02-03 02:29:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] via What&rsquo;s in a name? Programmer or Developer | My Corner of the Web. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359858546.1930949687957763671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1359871351</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1359871352.0114428997039794921875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-03 02:29:06</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>880</wp:comment_id>
    <wp:comment_author><![CDATA[bomshivas]]></wp:comment_author>
    <wp:comment_author_email>sanjayrocks90@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>223.229.91.30</wp:comment_author_IP>
    <wp:comment_date>2013-04-10 22:32:18</wp:comment_date>
    <wp:comment_date_gmt>2013-04-11 05:32:18</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[i m a developer]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>768</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1365663066</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365663066.797607898712158203125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1365658338.5374228954315185546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-04-11 05:32:18</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1192</wp:comment_id>
    <wp:comment_author><![CDATA[Why Programmers Work At Night | BaciNews]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.bacinews.com/?p=26034</wp:comment_author_url>
    <wp:comment_author_IP>199.193.255.91</wp:comment_author_IP>
    <wp:comment_date>2013-12-28 21:12:24</wp:comment_date>
    <wp:comment_date_gmt>2013-12-29 04:12:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] What&rsquo;s in a name? Programmer or Developer&nbsp;(bob-roberts.net) [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388290344.5444519519805908203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388295664</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388295665.0144159793853759765625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-12-29 04:12:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>First month as RoR programmer</title>
  <link>http://bob-roberts.net/2011/11/18/first-month-as-ror-programmer/</link>
  <pubDate>Sat, 19 Nov 2011 00:22:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=481</guid>
  <description/>
  <content:encoded><![CDATA[<div style="text-align:justify;">

I believe that a celebration is in order as I completed my first month as a full time Ruby on Rails programmer.  I have to reflect on my last post, that I really had no idea what I was in store for.  It has definitely been a challenging but yet fun first month.

I think that the biggest challenge that I have encountered is that it is one thing t create a NEW Ruby on Rails app and an entirely different matter working on a legacy RoR app.  My first project is a quite in depth and detailed one.  It has taken some time to just wrap my head around what it was that the application did and was supposed to do.  That was the first big hurdle for sure.

Now a month later I understand what it is that the client really wants and  I understand what it is that I need to do so that the client will get what they want.

For those of you out there thinking of quitting your day job and going it solo, I say do it, but plan it out first.  Were it not for the fact that there is a solid few months of work for this project I do not think I would have made the move.  By the time I am finished with this project, I will be more than ready to take on the next one.  If you are thinking of making the move, find a good project that will keep you busy for a few months so that there isn't the constant worry of "what next?" and you can really dig into the existing project.

After a month, I realize that I need to learn a lot more Ruby and Javascript.  So much to learn....

BDD/TDD development - Everything that I am doing is fully BDD/TDD development.  Do not write and code unless there is a test for it.  It will seem like a lot of extra work at first but later on when you start to make changes to your code you will be happy that you already have tests to run.  That is probably the biggest thing for test driven development, not the original code but when you start to refactor your code, you know that it was already working.  Everyday, I start off by checking my GitHub status and then running all of the specs.  The last thing that  do everyday is run all of the specs and push to GitHub.

For me, I use Rspec and Capybara.  I would say that about 90% f the tests are request tests.  I have never used cucumber all though I read about it in the Rspec book.  The project is also using Pivotal Tracker and the client is heavily involved in the stories in Pivotal Tracker.  It is a great way for them to keep up with what is being worked on everyday.

Well, that is it for this week........

&nbsp;

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>481</wp:post_id>
  <wp:post_date>2011-11-18 17:22:14</wp:post_date>
  <wp:post_date_gmt>2011-11-19 00:22:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>first-month-as-ror-programmer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>465</wp:comment_id>
    <wp:comment_author><![CDATA[technikhil]]></wp:comment_author>
    <wp:comment_author_email>nikhilkrishna@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://technikhil.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>117.199.2.151</wp:comment_author_IP>
    <wp:comment_date>2012-01-04 19:27:40</wp:comment_date>
    <wp:comment_date_gmt>2012-01-05 02:27:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Congratulations Bob. I too am a former .Net developer who took the plunge into Rails in the beginning of 2011 so it's been a year of RoR for me, but I wrote a similar piece about 6 months into my foray that you might like - http://technikhil.wordpress.com/2011/06/01/thoughts-on-ruby-i-think-its-great/

I think the biggest asset of Rails (actually I think more than Rails its a Ruby thing) is the incredible community around it. It's a really open and progressive one that embraces newcomers. I think it's one of the primary reasons so many people are successful moving to Rails from other places.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>110331</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325730460.4155";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"technikhil";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325742244</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325742244.2175";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-05 02:27:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>427</wp:comment_id>
    <wp:comment_author><![CDATA[Chris Hoffman (@angus650)]]></wp:comment_author>
    <wp:comment_author_email>angus650@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/angus650</wp:comment_author_url>
    <wp:comment_author_IP>50.129.192.84</wp:comment_author_IP>
    <wp:comment_date>2011-11-19 14:27:51</wp:comment_date>
    <wp:comment_date_gmt>2011-11-19 21:27:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Congrats.  I'm a .Net developer that has been 'playing' with Rails for the last year.  Hard to stop the day job when it is paying the bills.  Best of luck to you]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321751040.4153";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321738071.6471";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a2.twimg.com/profile_images/1407250310/image_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>29598397</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321751040</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2011-11-19 21:27:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Create a Ruby on Rails TODO application</title>
  <link>http://bob-roberts.net/2011/12/26/create-a-ruby-on-rails-todo-application/</link>
  <pubDate>Tue, 27 Dec 2011 02:03:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=490</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">In an attempt to improve my <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org/" rel="homepage">RoR</a> skills and based on the suggestion of @m3talsmith, I am going to be creating a TODO application from almost scratch.  I will be blogging each step as I create the TODO both for my personal learning experience in addition to helping others to learn.</p>
<p style="text-align:justify;">The TODO application will initially involve the following functions:</p>

<ul style="text-align:justify;">
	<li>Add a note</li>
	<li>Edit a note</li>
	<li>Delete a note</li>
	<li>View all notes</li>
</ul>
<p style="text-align:justify;">These functions will initially be for html, then xml and then json.</p>
<p style="text-align:justify;"><span style="text-decoration:underline;"><strong>Creating Stories</strong></span></p>
<p style="text-align:justify;">I have found that creating stories for each function is a great way to think thru the workflow.  I personally use Pivotal Tracker but there are other applications out there that you can use.</p>
<p style="text-align:justify;">ISBAT - I should be able to</p>
<p style="text-align:justify;">Generally, the stories are created using ISBAT.  For this TODO application, I will start with four stories:</p>

<ul style="text-align:justify;">
	<li>As a visitor ISBAT create a note</li>
	<li>As a visitor ISBAT edit a note</li>
	<li>As a visitor ISBAT delete a note</li>
	<li>As a visitor ISBAT view all notes</li>
</ul>
<p style="text-align:justify;">For testing I will be using <a class="zem_slink" title="RSpec" href="http://rspec.info/" rel="homepage">Rspec</a> and Capybara.  There are a lot of things that can be tested in an application, but I am going to be using just request specs.  These are tests to emulate the actual user experience to include filling in fields and clicking on buttons and links.  The theory behind this is that if you test all of the possible actions a user can perform, then the functionality behind the actions should work correctly.  I will be creating a blog entry for each of the above listed stories.</p>
<p style="text-align:justify;"><span style="text-decoration:underline;"><strong>Project Setup</strong></span></p>
<p style="text-align:justify;">The guys at RebelHold have created a great open source starter application to build an application upon which uses <a class="zem_slink" title="MongoDB" href="http://www.mongodb.org/" rel="homepage">MongoDB</a> and Mongoid, <a class="zem_slink" title="Haml" href="http://haml-lang.com/" rel="homepage">Haml</a>, Rspec, FactoryGirl, and <a class="zem_slink" title="Heroku" href="http://www.heroku.com/" rel="homepage">Heroku</a>.  As a today, <a href="https://github.com/rebelhold/Rebel-Foundation" target="_blank">Rebel-Foundation</a> uses Rails 3.1.3 and <a class="zem_slink" title="Ruby (programming language)" href="http://www.ruby-lang.org/" rel="homepage">Ruby</a> 1.9.2.</p>
To create my project I will clone Rebel-Foundation from github:

[sourcecode language="bash"]
git clone git@github.com:rebelhold/Rebel-Foundation.git todo_app
[/sourcecode]


This creates a new Rails application named "todo_app". Following the instructions on github:
<blockquote>
<pre>== Instructions

For those rvm users we've included a rvmrc. Just:

cp rvmrc .rvmrc
cd ..

And cd back in to your project.

Accept the rvmrcgem install bundler
bundle</pre>
</blockquote>
If you are NOT using rvm, then you need to!!

This will setup the basic project.  My next blog entry will be writing the first story, the tests for that story and the code to pass the tests.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>490</wp:post_id>
  <wp:post_date>2011-12-26 19:03:12</wp:post_date>
  <wp:post_date_gmt>2011-12-27 02:03:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-a-ruby-on-rails-todo-application</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="factorygirl"><![CDATA[factorygirl]]></category>
  <category domain="post_tag" nicename="request-specs"><![CDATA[request specs]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"151483243634503680";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Create a Ruby on Rails TODO application pt. 2</title>
  <link>http://bob-roberts.net/2011/12/29/create-a-ruby-on-rails-todo-application-pt-2/</link>
  <pubDate>Fri, 30 Dec 2011 02:25:04 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=505</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Ok, well with Christmas behind us it is time to get on with our project...</p>
<p style="text-align:justify;">I use <a class="zem_slink" title="Pivotal Tracker" href="http://www.pivotaltracker.com/" rel="homepage">Pivotal Tracker</a> for creating stories.  Creating stories is a new thing for me but it really helps to plan out your app.  In fact, if you write your stories well, it make writing our tests easier.</p>
<p style="text-align:justify;">As with any programmer worth their weight in code, I will be creating this app using TDD or BDD depending on how you view those two terms.  In my opinion, <a class="zem_slink" title="Test-driven development" href="http://en.wikipedia.org/wiki/Test-driven_development" rel="wikipedia">Test Driven Development</a> consists of writing the tests before writing the code whereas <a class="zem_slink" title="Behavior Driven Development" href="http://en.wikipedia.org/wiki/Behavior_Driven_Development" rel="wikipedia">Behavior Driven Development</a> is writing tests to describe the desired behavior that you want.  With BDD, it is more that you test what an object does and not so much what it is.</p>
<p style="text-align:justify;">On to Pivotal Tracker..  In pt.1 I listed four stories that I added to my Pivotal Tracker account. (<a title="https://www.pivotaltracker.com/projects/441447" href="https://www.pivotaltracker.com/projects/441447">https://www.pivotaltracker.com/projects/441447</a>).  One thing that I will not get into is the point estimation for stories in Pivotal Tracker.  That is what Google is for.</p>
<p style="text-align:justify;">Lets start with the first story; As a visitor ISBAT create a note.  Before we do anything, lets think what it is that we want to do.  We want our visitor to be able to create a note.  Now I know that a true TODO app would require user registration or just be for myself only but for this we are going to leave it open for all to use.  So, lets think through the process..</p>

<ul style="text-align:justify;">
	<li>Visit the main page</li>
	<li>Click on link 'Create Note'</li>
	<li>Fill in title with 'Clean the Garage'</li>
	<li>Fill in description with 'Get rid of junk and clean out the clutter'</li>
	<li>Select 'Due by:' as 2/1/2012</li>
	<li>Click on 'Save'</li>
</ul>
<p style="text-align:justify;">Pretty simple, isn't it?  We that is what I will fill in for my Pivotal story under tasks.  Now we are looking and thinking about what we want the user experience to be.  We have not really concerned ourselves with the workflow and have not written a line of code.</p>
<p style="text-align:justify;">The next thing we need to think of is "what do I expect to happen?" if I follow the above steps.</p>

<ul style="text-align:justify;">
	<li>I should see 'Note created successfully'</li>
	<li>I should not see any error messages</li>
	<li>The number of notes should increase by 1</li>
</ul>
<p style="text-align:justify;">Now we know what we expect to do to create a new note and we know what we expect to happen afterwards.  For testing I mentioned that I use <a class="zem_slink" title="RSpec" href="http://rspec.info/" rel="homepage">Rspec</a> and Capybara.  I am not saying that other testing tools are not good; I just have never used anything but.  Capybara just continues to amaze me.  There are so many different ways to use it that it seems like there is always a solution.  It works great with clicking links, making queries, testing Ajax , and more.  There once was a time that I tried to learn Selenium for automating tests in Firefox but I found it too cumbersome.  Capybara uses Selenium without having to write it!!</p>
<p style="text-align:justify;">I will write my test and post the code in pt.3.</p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>505</wp:post_id>
  <wp:post_date>2011-12-29 19:25:04</wp:post_date>
  <wp:post_date_gmt>2011-12-30 02:25:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-a-ruby-on-rails-todo-application-pt-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
  <category domain="post_tag" nicename="pivotal-story"><![CDATA[pivotal story]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="test-driven-development"><![CDATA[test driven development]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"152575918886490112";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bcc4e43cb4a03495c28909068e853fd5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Want to learn a thing or two about programming, right here, right now?</title>
  <link>http://bob-roberts.net/2011/12/31/want-to-learn-a-thing-or-two-about-programming-right-here-right-now/</link>
  <pubDate>Sat, 31 Dec 2011 19:15:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=509</guid>
  <description/>
  <content:encoded><![CDATA[Found a great starter list of resources for learning Ruby:

<a href="http://wp.me/p1StzO-1f">Want to learn a thing or two about programming, right here, right now?</a>.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>509</wp:post_id>
  <wp:post_date>2011-12-31 12:15:05</wp:post_date>
  <wp:post_date_gmt>2011-12-31 19:15:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>want-to-learn-a-thing-or-two-about-programming-right-here-right-now</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_format" nicename="post-format-aside"><![CDATA[Aside]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"153192472804208640";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Becoming a better Developer</title>
  <link>http://bob-roberts.net/2012/01/01/becoming-a-better-developer/</link>
  <pubDate>Mon, 02 Jan 2012 02:21:15 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=511</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I have been reading some good books this weekend that have made me think about an earlier post of mine, "<a href="http://bob-roberts.net/2011/11/06/whats-in-a-name-programmer-or-developer/">Whats in a name? Programmer or Developer</a>" and my views on the subject.</p>
<p style="text-align:justify;">One of the books that I read was "The Passionate Programmer" by Chad Fowler and "<a class="zem_slink" title="The Pragmatic Programmer: From Journeyman to Master" href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X%3FSubscriptionId%3D0G81C5DAZ03ZR9WH9X82%26tag%3Dzemanta-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D020161622X" rel="amazon">The Pragmatic Programmer</a>" by by Andrew Hunt and David Thomas.  Both are excellent sources of ideas and techniques to become a better programmer.  And there it is, the word "Programmer".</p>
<p style="text-align:justify;">Interestingly enough, after reading these two books about 'programmers' I feel as though that there is a greater distinction between Programmer and Developer than I had believed.  Both of these books discuss knowing more about the trade than just the writing of code.  They talk about learning and knowing the business end of programming.  They talk of learning more of what the user wants and feels.  They both talk about a lot more than writing clean code.</p>
<p style="text-align:justify;">I guess that the terms are also different based on the point of view.  A Programmer with a large fiem most likely never deals with users or clients but is more of the assembly line to the finished product whereas a freelance Programmer will spend a lot of time dealing with the client and management of the project in addition to the actual writing of the code.  Again, this is by no means any slight on Programmers.  At present that is exactly what I am.  I am not even the lead Programmer on the project that I am on.  So, the question then becomes; do I want to be a better Programmer or do I want to become a Developer?</p>
<p style="text-align:justify;">For me, the answer is simple; I want it all.  I want to be a developer to take a clients idea and make it come to life.  I do not want to site in an office and be told to program.  I want the interaction with the client and I want to know what the end users feel and think about the project.  In the end, isn't that what it all comes down to?  Satisfying the client and their customers?  The best coder in the world does not mean a thing, if that coder does not give the client what they want.  Now, there is a gray area there in the fact that a lot if not most clients do NOT know what it is that they really want.  A guess a difference between a good developer and a great developer is that the great developer discusses what the client wants and offers options as opposed to just writing the code to satisfy the requirements.</p>
<p style="text-align:justify;">So what to do to become a better developer?  Here are my thoughts intermingled with those from the aforementioned books.</p>

<ul>
	<li>Listen - don't let our egos get in the way.  Just because we 'think' we know better does not mean that we do.  Listen to the client and hear what they want.  Maybe they just cannot put it into words.  Don't assume that what you think they want is really what they want.  This becomes a gray area in the middle of the project.  A different interpretation of a desired functionality can lead to disagreement or creating more work that is out of scope.  The best way to prevent this is to listen to the client in the beginning and make sure that you have documented exactly what it is that they are expecting you  to give them.</li>
</ul>
<ul>
	<li style="text-align:justify;">Learn - Both of the books said the same thing; learn more.  Read books, write code, learn new languages.  I am going to make it a personal goal for myself to read a new book every two weeks.  Whether that book is about coding, or self improvement or  other programmer development books, I plan to read one every other week.  I am also going to learn a new language this year.  In addition to that, I am going to continue to learn more of the languages that I do use.</li>
</ul>
<ul>
	<li style="text-align:justify;">Mentors - Both books recommend to find a mentor.  I already have a couple of guys that I am learning from and hopefully continue to learn from.  Additionally, I hope to get to a point where I can become a mentor for somebody.  I plan on giving presentations for our local Ruby user group.  I have only given one presentation so far, but I have found that I learn more in the preparation.  Try to hang out with the geniuses; they will make you become smarter.</li>
</ul>
<ul>
	<li style="text-align:justify;">User Groups - I joined a Ruby user group last year and I attempt to make it to the monthly meetings.  There are always new things being presented or basic concepts that I need to learn better.  User groups are also a great way to meet fellow programers and create friendships that may help you out.</li>
</ul>
<ul>
	<li style="text-align:justify;">Give a Shit - As stated in the Pragmatic Programmer, Tips 1 and 2 are "care about your craft" and "think! about your work" and mean a lot.  Strive to write better cleaner code and to be proud of the code that you write.  Be proud enough to put your name on it.  We are the same as artists, and Picasso was not ashamed or embarrassed by his paintings that he did not leave his signature.  In my opinion, it is not a bad thing if you above and beyond what the client wants.  I would rather work a few hours for free and have a happy client.</li>
</ul>
As usual, these are just my thoughts and you can take them for what they are worth.  But, hopefully you can come away with something that makes YOU a better Developer!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>511</wp:post_id>
  <wp:post_date>2012-01-01 19:21:15</wp:post_date>
  <wp:post_date_gmt>2012-01-02 02:21:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>becoming-a-better-developer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="freelance-programmer"><![CDATA[freelance programmer]]></category>
  <category domain="post_tag" nicename="pragmatic-programmer"><![CDATA[pragmatic programmer]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"153662108616228864";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>461</wp:comment_id>
    <wp:comment_author><![CDATA[mapguymike]]></wp:comment_author>
    <wp:comment_author_email>mike.onzay@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/mapguymike</wp:comment_author_url>
    <wp:comment_author_IP>155.206.9.206</wp:comment_author_IP>
    <wp:comment_date>2012-01-03 10:50:13</wp:comment_date>
    <wp:comment_date_gmt>2012-01-03 17:50:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Whether you a writing code, talking to clients or giving presentations in front of your local users group you are communicating information. Writing and speaking require different skills. I might suggest checking out your local Toastmasters Club to learn and practice the skills to become an effective speaker.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325613014.7288";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325613099</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325613099.5748";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-03 17:50:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>484</wp:comment_id>
    <wp:comment_author><![CDATA[Ralph Miller]]></wp:comment_author>
    <wp:comment_author_email>ralph@flatterline.com</wp:comment_author_email>
    <wp:comment_author_url>http://flatterline.com/team/ralph-miller</wp:comment_author_url>
    <wp:comment_author_IP>70.184.119.107</wp:comment_author_IP>
    <wp:comment_date>2012-01-12 22:57:41</wp:comment_date>
    <wp:comment_date_gmt>2012-01-13 05:57:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I've never given much thought about the difference between a programmer and a developer. I think it's cool you want it all. There's definitely a lot more responsibility in being a developer.There's nothing better than creating something cool. Taking someone's idea and bringing it to life, and having them be happy about it, now that's an awesome feeling!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326434766.6517";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>true</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326434261.6801";s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326434757.2909";s:7:"message";s:44:"broberts65 reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user</wp:meta_key>
      <wp:meta_value>broberts65</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1326434766</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-13 05:57:41</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Create a Ruby on Rails TODO application pt. 3</title>
  <link>http://bob-roberts.net/2012/01/04/create-a-ruby-on-rails-todo-application-pt-3/</link>
  <pubDate>Thu, 05 Jan 2012 01:37:04 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=514</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">On with the test....</p>
<p style="text-align:justify;">I found something the other day that I was not aware of.  A major major kudos to Jeffrey Way and his tutorial "<a href="http://net.tutsplus.com/tutorials/ruby/the-intro-to-rails-screencast-i-wish-i-had/">The Intro to Rails Screencast I Wish I Had</a>" which is the easiest to understand and best explanation of a Rails project creation and setup that I have seen.  I did not know that there was a Rails generator for integration_test.</p>
<p style="text-align:justify;">After I created my app from the Rebel-Foundation clone, and did my bundle install, the next thing that I did was run 'rails g integration_test notes'.  This then created the notes_spec.rb file in the spec/requests directory.  I then cleaned out the mess and now my test looks like:</p>

[sourcecode language="ruby"]
require 'spec_helper'
describe &quot;Notes&quot; do
  it 'should be able to create a new note', js: true do
    visit notes_path
    click_link 'New Note'
    fill_in 'Title',        with: 'Clean out the Garage'
    fill_in 'Description',  with: 'Get rid of the junk and clean out the clutter'
    fill_in 'Due by',       with: '2/1/2012'
    click_link 'Save'

    page.should have_content 'Note created successfully'
    page.should_not have_content 'Error'
  end
end
[/sourcecode]
<p style="text-align:justify;">That was pretty easy to write seeing as we had this all listed in the story already.  Now it is easy to see that writing good stories is helpful for when you need to write the tests for them.</p>
<p style="text-align:justify;">So with using <a class="zem_slink" title="RSpec" href="http://rspec.info/" rel="homepage">Rspec</a> and Capybara we can create the actual steps that the user wil need to take to create a note.  On line 05, I added the js: true so that Capybara will launch Firefox and use Selenium for our tests.  I don't think that this is really needed for this test as we are not using any Javascript but it is nice to see our efforts in the browser.</p>
<p style="text-align:justify;">The first thing that we do is "visit notes_path", and then we follow the rest of the steps.  After clicking on 'Save' we EXPECT to see 'Note created successfully' on our page and not 'Error'.  When writing tests, think about what you are trying to do and what you expect to happen if you do that.  As we have not written any other code, we pretty much have a clean slate to work with.</p>

[sourcecode language="bash"]
Failures:

  1) Notes should be able to create a new note
     Failure/Error: visit notes_path
     NameError:
   undefined local variable or method `notes_path' for #&lt;RSpec::Core::ExampleGroup::Nested_1:0x007f8da8070458&gt;
 # ./spec/requests/notes_spec.rb:6:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 22.4 seconds
1 example, 1 failure
[/sourcecode]
<p style="text-align:justify;">From here, we start down our path of sometimes absolutely useless error messages.  The issue here is not that there is not a variable or method but rather that there is not any routes created.  So we need to add "resources :notes" to our config/routes.rb file.  After adding that to our routes, we can run "rake routes" to see our <a class="zem_slink" title="Representational State Transfer" href="http://en.wikipedia.org/wiki/Representational_State_Transfer" rel="wikipedia">RESTful</a> routes:</p>

[sourcecode language="bash"]
[master] ⚡$ rake routes
    notes GET    /notes(.:format)          notes#index
          POST   /notes(.:format)          notes#create
 new_note GET    /notes/new(.:format)      notes#new
edit_note GET    /notes/:id/edit(.:format) notes#edit
     note GET    /notes/:id(.:format)      notes#show
          PUT    /notes/:id(.:format)      notes#update
          DELETE /notes/:id(.:format)      notes#destroy
[/sourcecode]

With our Routes, we see that the index is notes. All we need to do to get to the index is add "_path" and we have "notes_path". We will also need to use the "new_note_path" when we go to create a new note. If we run our "rspec spec" test we now get:

[sourcecode language="bash"]
Failures:

1) Notes should be able to create a new note
 Failure/Error: click_link 'New Note'
 Capybara::ElementNotFound:
 no link with title, id or text 'New Note' found
 # (eval):2:in `click_link'
 # ./spec/requests/notes_spec.rb:7:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 19.59 seconds
1 example, 1 failure
[/sourcecode]

Well, at least this time we get an error message that make sense to us; there is no link 'New Note' for us to click on.  Sounds like a good thing to get into for our next post.

By the way, all of my code is available at git@github.com:brobertsaz/todo_application.git
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://technikhil.wordpress.com/2011/12/31/rails_glossary/">A Ruby on Rails glossary.</a> (technikhil.wordpress.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>514</wp:post_id>
  <wp:post_date>2012-01-04 18:37:04</wp:post_date>
  <wp:post_date_gmt>2012-01-05 01:37:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-a-ruby-on-rails-todo-application-pt-3</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="capybara"><![CDATA[Capybara]]></category>
  <category domain="post_tag" nicename="javascript"><![CDATA[JavaScript]]></category>
  <category domain="post_tag" nicename="rspec"><![CDATA[RSpec]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"154738198919131137";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_60f352d01e64d054397dd9e29adf0f47</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_34b1b7d7e515f48766b6de0c029dac8d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cb6d88ac205cd8e759e3804137fa547e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>466</wp:comment_id>
    <wp:comment_author><![CDATA[technikhil]]></wp:comment_author>
    <wp:comment_author_email>nikhilkrishna@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://technikhil.wordpress.com/</wp:comment_author_url>
    <wp:comment_author_IP>117.199.2.151</wp:comment_author_IP>
    <wp:comment_date>2012-01-04 19:32:31</wp:comment_date>
    <wp:comment_date_gmt>2012-01-05 02:32:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey Bob, 
I loved Rails setup screencast from Jeffrey Way as well, but there is a lot of great Rails tutorials out there as well. The folks at net.tuts have come up with a list, that readers may want to check out - http://net.tutsplus.com/articles/web-roundups/31-fascinating-ruby-on-rails-tutorials-guides/

Also, I always recommend the Rails guides - http://guides.rubyonrails.org/ - they are awesome - :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>110331</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325730752.1906";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"technikhil";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1325742286</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1325742286.2318";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-05 02:32:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>I want to work for you</title>
  <link>http://bob-roberts.net/2012/01/13/i-want-to-work-for-you/</link>
  <pubDate>Fri, 13 Jan 2012 22:56:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=568</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Todays post is a quick little rant of mine.  I noticed recently that there are areas in the world that are begging for Ruby on Rails devs.  If you list RoR on your Linkedin account you will get hammered by recruiters.  Read all of the RoR jobs that are posted around the world.</p>
<p style="text-align:justify;">So I think that we can all agree that there is a high demand for Rails devs, right?</p>
<p style="text-align:justify;">Then why the Hell do so many companies want to hire local devs?  I mean specifically for Rails and all other web applications, why?  We are making apps for the INTERNET.  Now, most of you have probably already been on the internet or at a minimum, heard about it.  Then there is another term that has been floating around for a bit that you might have heard of; <a class="zem_slink" title="Telecommuting" href="http://en.wikipedia.org/wiki/Telecommuting" rel="wikipedia">Telecommute</a>.</p>
<p style="text-align:justify;">We are building apps for the internet but it seems that too many employers do not want their devs to work via the internet.  Uh, WTF? (Again, this is my RANT)</p>
<p style="text-align:justify;">A friend sent me a link the other day to a blog post from <a class="zem_slink" title="37signals" href="http://37signals.com/" rel="homepage">37 Signals</a> but the main this was this :</p>
<p style="text-align:justify;"><a href="http://37signals.com/svn/posts/3064-stop-whining-and-start-hiring-remote-workers">So stop whining, spend a day to get up to speed on remote working practices, and hire outside of your commuter zone.</a></p>
<p style="text-align:justify;">Now I think that most would agree that 37 Signals is rather successful so maybe there is something to that.</p>
<p style="text-align:justify;">Now, I will agree some people NEED to work with others present.  Those are the ones that thrive on others energies.  They are also maybe those that find it hard to commit to working from home and going to an office is what they need to be in the right mindset.  Why do you think that so many <a class="zem_slink" title="Coworking" href="http://en.wikipedia.org/wiki/Coworking" rel="wikipedia">co-working</a> places exist?  People do not pay more money than what they pay for internet at home just to go to a co-working place and use the internet there.  Co-working places are great for those are the ones that work better with others around.</p>
<p style="text-align:justify;">Then there are the "others" and they are the ones that work better alone.  The programmer persona of the guy sitting in the dark and coding is not necessarily because those people are anti- social (all though that may be the case) but rather they work better when not interrupted. I can get more QUALITY work done at home than when I go to a co-working place and mind you that this is not to be meant as to demean co-working.  I need to focus and when there is too much going on I get distracted easily.  At home, I have no distractions BUT thanks to the INTERNET, I can <a class="zem_slink" title="Skype" href="http://skype.com" rel="homepage">Skype</a>, IM, Email, use Campfire, use <a class="zem_slink" title="Basecamp" href="http://www.basecamphq.com/" rel="homepage">Basecamp</a>, use Github and all is well.  I can even use my telephone if need be.  Like to pair-program?  There is this thing called screen sharing.</p>
<p style="text-align:justify;">So my point is this, if you NEED to have a dev on location, then good luck with your search.  If you DO NOT NEED a local dev and you need a web application built, then hire a dev to work remotely.  I work with RebelHold and we do Ruby on Rails web apps.  If you need a web application built, then we can do it!  Now you do not have to worry about hiring anybody locally because we can all use the internet to communicate (This assumes that you have Internet access).</p>
<p style="text-align:justify;">&lt;/RANT&gt;</p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>568</wp:post_id>
  <wp:post_date>2012-01-13 15:56:29</wp:post_date>
  <wp:post_date_gmt>2012-01-13 22:56:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>i-want-to-work-for-you</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"157959237778145280";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>489</wp:comment_id>
    <wp:comment_author><![CDATA[Brian D]]></wp:comment_author>
    <wp:comment_author_email>briandenzer@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>174.69.119.106</wp:comment_author_IP>
    <wp:comment_date>2012-01-19 09:16:09</wp:comment_date>
    <wp:comment_date_gmt>2012-01-19 16:16:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for this. I've been on the fence so long. Same here. I've been an ESRI GIS professional for a dozen years. I love Python. I've done the Google Maps API on a LAMP platform. I still have doubts about my investment in Django, though. Yes, Python integrates well with open source libraries, but the Django chatter seems to be dying down, whereas the Ruby on Rails community seems to get larger. I'll always use Python, but for web development, I've been leaning lately toward shifting my investment into RoR. Your endorsement helps.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326990196.9395";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326989769.8968";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1326990195</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-19 16:16:09</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>493</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobspython.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>24.251.134.190</wp:comment_author_IP>
    <wp:comment_date>2012-01-19 15:40:45</wp:comment_date>
    <wp:comment_date_gmt>2012-01-19 22:40:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There are times that I wished that Django had not been so difficult to me.  I really did give it a try but as you said, there is a large Ruby on Rails community.  Perhaps if there had been a Django group in town here (and incidentally, I tried to start a Python group which was not very successful) I would have continued to try.

That being said, I feel that there is by far more online tutorials, documents, and assistance for RoR than for Django.  I dont want to say that the Django world is diminishing by any means but it is more like the Ruby community just keeps growing. 

I wish you the best of luck with whatever it is that you decide to use.

BR]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>489</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1327012845</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327012845.9801";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-19 22:40:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>So you want to be a programmer</title>
  <link>http://bob-roberts.net/2012/02/15/so-you-want-to-be-a-programmer/</link>
  <pubDate>Thu, 16 Feb 2012 03:01:02 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=595</guid>
  <description/>
  <content:encoded><![CDATA[I thought that I would put this link up here.  Quite a good job describing what you need to do to become a programmer:

<a href="http://penny-arcade.com/patv/episode/so-you-want-to-be-a-developer-part-1">http://penny-arcade.com/patv/episode/so-you-want-to-be-a-developer-part-1</a>
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://likeabanana.wordpress.com/2012/03/03/computer-programmers-only-the-5th-most-sleep-deprived-profession/" target="_blank">Computer Programmers Only the 5th Most Sleep Deprived Profession</a> (likeabanana.wordpress.com)</li>
	<li class="zemanta-article-ul-li"><a href="http://restreaming.wordpress.com/2012/03/02/primitive-tools-primitive-programmers/" target="_blank">Primitive tools === primitive programmers?</a> (restreaming.wordpress.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>595</wp:post_id>
  <wp:post_date>2012-02-15 20:01:02</wp:post_date>
  <wp:post_date_gmt>2012-02-16 03:01:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>so-you-want-to-be-a-programmer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"169979578373246977";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_16e6cc5fb862e5123499ee08d5f1a0fd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>RebelHold Web Development Collective</title>
  <link>http://bob-roberts.net/2012/02/17/rebelhold-web-development-collective/</link>
  <pubDate>Fri, 17 Feb 2012 19:22:53 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=600</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Since the beginning of the year, I have been made an employee of RebelHold, LLC.  It is because of RH, that I am even working as a Ruby on Rails developer.  Prior to last fall all I ever did in RoR was tutorials, tutorials, and more tutorials.  I advertised that I would work for free just to get experience.  Can you believe that NOT ONE PERSON took me up on that offer!</p>
<p style="text-align:justify;">So there I was, a desire to quit my job and become a programmer but no way to do it.  It would be different if I were a college student and could study/practice more but I had a full time job that amounted to working a good 50 - 60 hours per week on salary.</p>
<p style="text-align:justify;">Then I met Michael (@m3talsmith) on Twitter and the rest is pretty much history.  I worked together with Michael and with Fletch (@fzf) by pairing with them and watching them work.  They were available to answer questions and to help me.  Then they offered me a paid internship!!  They offered to pay me hourly to learn and work with them!  Can you believe that?  I was trying to find people to let me work for free just to learn and these guys at RebelHold were going to PAY me to learn RoR.</p>
<p style="text-align:justify;">I quit my day job......</p>
<p style="text-align:justify;">So what is RebelHold?  In Michaels own words:</p>
<p style="text-align:justify;">"Rebelhold is a workers collective, completely worker owned and run.</p>
<p style="text-align:justify;">RebelHold was created to equalize the playing ﬁeld for workers, providing full health care (with no copays), paid training, equal salaries, and to meet the physical and social needs of communities all around us. We believe that putting the means of production in the hands of the workers is a ﬁrst step, and that training new people to be able to work in whatever capacity they can is valuable. Every worker is an owner, all decisions are made by consensus, and every worker has the combined responsibility of training others. We are highly motivated to taking care of the needs of others through this process; and open to other processes to help.</p>
<p style="text-align:justify;">To create a mass of workers on equal grounds with each other who are taken care of completely; to pour ourselves in to improving the communities around us through training, through direct action, and through charity as needed; to communicate well with others; and to make high quality software that we can be proud of."</p>
<p style="text-align:justify;">Now mind you we are still in our infancy stage and not all of the ideas have been implemented yet.  Decisions are made by the partners in a community like manner.  There is no Alpha male or boss or anybody in charge.  And opportunity to advance?  Well, I guess to ability to make partner is about as high of advancement that is possible.  As a partner, the incomes are all the same and decisions are made by the partners.  A truly employee owned and operated organization.  Notice that I didn't say company!!  It is more of a group or organization than anything else.</p>
<p style="text-align:justify;">We are always looking to add members to our group.  We intend to have a well rounded group of resources skilled in many facets of programming.  We call interns apprentices as they are learning a skill.  We endorse free training and open-source.  Our website is currently under construction and we are making it a community project called 'Communal' which is and will remain open-sourced.  Many of the things done at Rebelhold are open-sourced.  We are currently talking about Fridays being set aside for just this purpose.  Oh, yeah, we do NOT charge for training!!</p>
<p style="text-align:justify;">If you have read my other posts you know that I am pretty anti charging to teach programming.  Now there are tutorials and the like that I have paid for but not training.  We plan on offering free Ruby and Rails training here locally as has been expressed to the local Ruby::AZ group.  We have given presentations for the group already and will continue to do so in the future.</p>
<p style="text-align:justify;">We are still small at this point but slowly growing.  We will have a great group of programmers because it is fun to be here.  We are RebelHold.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>600</wp:post_id>
  <wp:post_date>2012-02-17 12:22:53</wp:post_date>
  <wp:post_date_gmt>2012-02-17 19:22:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rebelhold-web-development-collective</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="open-source"><![CDATA[Open source]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"170589091493183489";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-02-17 19:22:53";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Successful Entrepreneur in AZ</title>
  <link>http://bob-roberts.net/2012/02/17/successful-entrepreneur-in-az/</link>
  <pubDate>Fri, 17 Feb 2012 19:31:50 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=605</guid>
  <description/>
  <content:encoded><![CDATA[Just wanted to do a quick link for an article about a local AZ man and his success story in raising $1.5 million for his tech startup written by a friend of mine.  You can read it here <a title="Permalink for Entrepreneurship Series: Interview with Paul Kenjora" href="http://flatterline.com/blog/2012/01/12/entrepreneurship-series-interview-with-paul-kenjora">Entrepreneurship Series: Interview with Paul Kenjora</a> or here <a href="http://techcocktail.com/bootstrapping-why-one-entrepreneur-stopped-pursuing-investors-2012-02#.Tz6q0nLOxXe">NOW THAT’S CALLED BOOTSTRAPPING: WHY ONE ENTREPRENEUR STOPPED PURSUING INVESTORS</a>
<h4></h4>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>605</wp:post_id>
  <wp:post_date>2012-02-17 12:31:50</wp:post_date>
  <wp:post_date_gmt>2012-02-17 19:31:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>successful-entrepreneur-in-az</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"170591305745969152";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Behavior Driven Development - Using RSpec and Capybara</title>
  <link>http://bob-roberts.net/2012/02/17/608/</link>
  <pubDate>Fri, 17 Feb 2012 22:01:20 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=608</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">In writing my recent posts about creating a <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage">Ruby on Rails</a> TODO application from the ground up, I felt that I should have been more descriptive in explaining BDD - <a class="zem_slink" title="Behavior Driven Development" href="http://en.wikipedia.org/wiki/Behavior_Driven_Development" rel="wikipedia">Behavior Driven Development</a> in how it differs from TDD - <a class="zem_slink" title="Test-driven development" href="http://en.wikipedia.org/wiki/Test-driven_development" rel="wikipedia">Test Driven Development</a>.</p>
<p style="text-align:justify;">Additionally, I think that there is a lot more that can be explained about the entire BDD process and the tools that I use including <a class="zem_slink" title="RSpec" href="http://rspec.info/" rel="homepage">RSpec</a>, Capaybara and others.</p>
<p style="text-align:justify;"><strong>BDD vs. TDD</strong></p>
<p style="text-align:justify;">BDD is a concept or technique for testing that Dan North introduced to the programming community.  Some would argue that BDD is a programming philosophy.  What BDD did was change the perception of TDD.  Focus is placed on the overall behavior of the program from the user point of view.</p>
<p style="text-align:justify;">To fully understand BDD, we must first look at the meaning of TDD.  Credit is given to Kent Black for developing TDD.  Wikipedia defines <a href="http://en.wikipedia.org/wiki/Test-Driven_Development">TDD</a> “as a <a href="http://en.wikipedia.org/wiki/Software_development_process">software development process</a> that relies on the repetition of a very short development cycle: first the developer writes a failing automated <a href="http://en.wikipedia.org/wiki/Test_case">test case</a> that defines a desired improvement or new function, then produces code to pass that test and finally <a href="http://en.wikipedia.org/wiki/Code_refactoring">refactors</a> the new code to acceptable standards.”  Simply put, TDD means writing a test BEFORE writing the code and you know that the test will fail.  Then you write just enough code to pass the test.</p>
<p style="text-align:justify;"><a href="http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd">The Three Laws of TDD</a> according to UncleBob:</p>

<ol style="text-align:justify;">
	<li>You are not allowed to write any production code unless it is to make a failing unit test pass.</li>
	<li>You are not allowed to write any more of a unit test than is sufficient to fail; and compilation failures are failures.</li>
	<li>You are not allowed to write any more production code than is sufficient to pass the one failing unit test.</li>
</ol>
<p style="text-align:justify;">Benefits to TDD include:</p>

<ul style="text-align:justify;">
	<li>Less code when writing only the code needed to pass the test</li>
	<li>Writing tests first cause you to focus on what you want the code to do</li>
	<li>Assists when refactoring by telling you if changes have broken any tests</li>
</ul>
<p style="text-align:justify;">Ok, so what is the downside?  I will say this if you are not doing BDD then you MUST at least use TDD.  I do not think that there is a downside to TDD per se, but I feel that with TDD, you will write a lot more tests.  If you are properly testing, then you will have tests for all of your methods.  Is this a bad thing?  Absolutely not.  In the end, as long you have tested first, you will benefit.  So what is the difference?</p>
<p style="text-align:justify;">BDD is a development process that was created by Dan North to address issues that he had with the TDD process.  The testing process changed to thinking about the behavior that was expected or desired and not just writing tests on everything.</p>
<p style="text-align:justify;">With BDD, acceptance tests are written using “User Stories” which can be maintained using sites such as Pivotal Tracker.  A user story is written in a couple of ways.  I use ISBAT for “I should be able to” when writing my stories.  An example would be; “As a User ISBAT create a new task”.  Another format or way to think of writing stories is to use “As a [role] I want [feature] so that [benefit]".  Thinking this way and writing stories in this manner is that you think like the end user.  This is key for your client.  A good user experience will help them to achieve what they want.  Think of it in the clients perspective:</p>
<p style="text-align:justify;">As a (company owner) I want (a working e-commerce store) so that (I can make money)</p>
<p style="text-align:justify;">So what is the difference between TDD and BDD?  It is how you view setting up your tests.  The best definition or description of the difference that I have see comes from a <a href="http://www.killswitchcollective.com/articles/30_tdd_bdd_and_using_rspec">blog article on Killswitch Collective’s</a> site:</p>
<p style="text-align:justify;">“Test::Unit supports a Test Driven Development (TDD) approach, while RSpec implies a Behavior Driven Development (BDD) approach. In TDD, we are usually writing one test per function, leading to many small tests. In TDD, since there is one test per function, we end up writing tests at a core level that end up following the same structure as our code. With a BDD approach, we are using specs as a guide for testing. We are telling a story by describing how a set of functionality should behave, and focus less on the return value of a single method. Think of BDD as a humanized TDD; it is TDD written to use a more English like vocabulary for expressing functionality. BDD makes it easier for other developers to read and understand the code, becoming an additional form of documentation. BDD changes the way we think about testing, since it is more focused on implementing high level specs.”</p>
<p style="text-align:justify;">For BDD, I use RSpec and Capybara which is pretty much the standard for Ruby on Rails BDD testing.  RSpec was created by Steven Baker in 2005 to be a BDD testing tool.  Rspec is used for testing models and is usually in the following format:</p>

<pre>describe ‘Creating Blog Entry’ do
  context ‘after it is created’ do
    it ‘has required fields’ do
      blog.title.present?
      blog.body.present?
    end
  end
end</pre>
<p style="text-align:justify;">The test reads ‘Creating Blog Entry after it is created it has required fields’ and makes sense what we are doing.</p>
<p style="text-align:justify;">For the actual user interface we use what is called a request spec.  For emulating the user experience, we use Capybara written by Jonas Nicklas for testing.  From the <a href="http://jnicklas.github.com/capybara/">Capybara website</a> :</p>
<p style="text-align:justify;">“Capybara is a library written in the <a href="http://www.ruby-lang.org/">Ruby</a> programming language which makes it easy to simulate how a user interacts with your application.</p>
<p style="text-align:justify;">Capybara can talk with many different drivers which execute your tests through the same clean and simple interface. You can seamlessly choose between Selenium, Webkit or pure Ruby drivers.”</p>
<p style="text-align:justify;">Here is an example of how we would look at the same scenario but from the user point of view:</p>

<pre>As a user ISBAT create a blog entry:
ISBAT give it a title
ISBAT give it a body</pre>
<p style="text-align:justify;">These are behaviors we expect.  Underlying these ‘tasks’ in our story is the functionality that we will create, but based on the expected behavior.  Lets look at the request spec:</p>

<pre>describe ‘Creating Blog Entry’ do
    it ‘has required fields to fill out’ do
      visit new_blog_entry_path
      fill_in ‘Title’, with: ‘My New Post’
      fill_in ‘Body’, with: ‘Here is my post content’
      click_button ‘Save’
      page.should have_content ‘New Blog Entry created’
      page.should have_content ‘My New Post’
      page.should have_content ‘Here is my post content’
      page.should_not have_content ‘Error’
    end
end</pre>
<p style="text-align:justify;">Now you can see the test is written for the expectations a user will have to create a new blog entry.  This is same as how the user will create a blog entry.  Visit the new blog entry path is where you create a new blog entry.  You then fill out the form and click the ’Save’ button.  As this is Behavior Driven Development we also express what the expected or desired behavior is.  We should see a message that the blog entry was created.  We also expect that the entry will be visible after creating it so we expect to see the title and the body content.  We also do not want to see an error message.  Now we write the code to pass the test.  We are not so concerned with all the details that we are going to code to get this resulting behavior but rather we just want to make sure that the experience and the behavior happens.  And we only write enough code to pass our test.</p>
<p style="text-align:justify;">Hope this helps clarify BDD a bit.</p>

<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://codebetter.com/jameskovacs/2012/01/19/tddbdd-as-architectural-tools/">TDD/BDD as Architectural Tools</a> (codebetter.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>608</wp:post_id>
  <wp:post_date>2012-02-17 15:01:20</wp:post_date>
  <wp:post_date_gmt>2012-02-17 22:01:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>608</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bdd"><![CDATA[bdd]]></category>
  <category domain="post_tag" nicename="behavior-driven-development"><![CDATA[Behavior Driven Development]]></category>
  <category domain="post_tag" nicename="capybara"><![CDATA[Capybara]]></category>
  <category domain="post_tag" nicename="rspec"><![CDATA[RSpec]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="test-driven-development"><![CDATA[test driven development]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"170628938865967104";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why RebelHold kicks Ass!</title>
  <link>http://bob-roberts.net/2012/03/03/why-rebelhold-kicks-ass/</link>
  <pubDate>Sun, 04 Mar 2012 02:10:22 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=618</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Well, I have been a bit busy lately and it seems like I have a thousand things that I want to work on.  If I can only find the energy and the time to do so.....</p>
<p style="text-align:justify;">So, this is about why Rebelhold totally kicks ass!  A couple of weeks ago I was made partner!!  How is that for advancement opportunity?  Do I miss my old corporate America job?  Fuck NO!</p>
<p style="text-align:justify;">So here I am now a co-owner in a company owned and operated by its employees.  I know that I have ranted before about the awesome opportunity that RebelHold has given me.  I had the desire to become a Rails programmer but who hires anybody these days with no college or experience?  McDonalds, that's who.</p>
<p style="text-align:justify;">RebelHold will soon be a major name in the Rails web development community.  I want RebelHold to be the premium place for Ruby and Rails developers.  We are a collective of developers that encourage people to learn Ruby and Rails and we also believe it is our job to assist in the learning process.  We are building a community of programmers and designers and continuously improving ourselves with in house training and classes.  We have recently made the decision that Fridays are to be set aside for just that purpose.  Who can go to work with us?  Pretty much anybody that has a strong desire to be the best.  You will have to prove yourself to us that you have the desire and willpower to become one of us. We freely support our apprenticeship program and encourage all of those interested.  We are currently expanding our knowledge base to include IOS development as well.  We have members in several states now and are always interested in new talent.  In @m3talsmith's own words:</p>
<p style="text-align:justify;">"We believe that through working under such equal conditions, both to us and our clients, and through such revolutionary processes as being honest with each others skill sets, teaching each other, growing in a community that seeks the most quality out of everything that we do, that we will create great software.</p>

<div>
<p style="text-align:justify;">Some of the tools we use to hone this process include frameworks, such as <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage" target="_blank">Ruby on Rails</a>, methodologies, like <a class="zem_slink" title="Agile software development" href="http://en.wikipedia.org/wiki/Agile_software_development" rel="wikipedia" target="_blank">Agile Development</a> and Scrum, elastic data stores, <a class="zem_slink" title="MongoDB" href="http://www.mongodb.org/" rel="homepage" target="_blank">MongoDB</a> being our favorite, and cloud servers like <a class="zem_slink" title="Heroku" href="http://www.heroku.com/" rel="homepage" target="_blank">Heroku</a>. Other steps include lots of travel, a reasonable week of around 30 hours per week, and lots of pair programming; as well as constant experimentation and open source contributions.</p>
<p style="text-align:justify;">We are also looking for ways to build passive income in order to put us on sound financial footing outside of client work. Some of the passive income ideas include equity in clients, software services, and applications brought to markets such as mobile marketplaces."</p>
<p style="text-align:justify;">That is why RebelHold kicks ass and why I do not miss the corporate world!</p>
<p style="text-align:center;"><strong>Are you prepared to Rebel?</strong></p>
<p style="text-align:center;"><strong>We ARE RebelHold.</strong></p>

</div>
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://news.dice.com/2012/02/15/ruby-on-rails-community/" target="_blank">Ruby on Rails is Our New Talent Community</a> (news.dice.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>618</wp:post_id>
  <wp:post_date>2012-03-03 19:10:22</wp:post_date>
  <wp:post_date_gmt>2012-03-04 02:10:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-rebelhold-kicks-ass</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"176127422545141760";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-03-04 02:10:22";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>570</wp:comment_id>
    <wp:comment_author><![CDATA[John Lockwood]]></wp:comment_author>
    <wp:comment_author_email>john@particlewave.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.particlewave.com</wp:comment_author_url>
    <wp:comment_author_IP>67.174.151.132</wp:comment_author_IP>
    <wp:comment_date>2012-07-06 23:14:17</wp:comment_date>
    <wp:comment_date_gmt>2012-07-07 06:14:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Bob, thanks for the kind reply.  It definitely sounds like an exciting shop to work in.

I introduced JUnit to a shop I was working in back in my Java days and found it very useful.  I also had (am having) the pleasure at my current day job of doing a database driver in .NET that started out the right way -- in NUnit.  It was very gratifying today to be fixing a bug that those tests easily uncovered, even while another manager who doesn't get it was arguing that we should hack-and-ship as usual.  That really got me motivated to put feelers out -- software's too much fun not to be taken seriously. :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1341641657</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341641658.1054";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-07 06:14:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>568</wp:comment_id>
    <wp:comment_author><![CDATA[John Lockwood]]></wp:comment_author>
    <wp:comment_author_email>john@particlewave.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.particlewave.com</wp:comment_author_url>
    <wp:comment_author_IP>207.183.247.194</wp:comment_author_IP>
    <wp:comment_date>2012-07-06 17:08:54</wp:comment_date>
    <wp:comment_date_gmt>2012-07-07 00:08:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I enjoyed reading your post, which I found through a search for "employee owned ruby on rails shop".  I explored that idea some time ago (http://www.particlewave.com/2009/11/01/employee-owned-software-company/), but never really pursued it.  Cool ideas are cool, but having clients to pay the bills so one can work on cool ideas is cooler.

I'm working on one of those "passive income" projects you're talking about in Rails, but it's slow going while holding down a full time job as a legacy Windows C/C++/C# etc. programmer.  So I'd be interested in exchanging ideas etc to see if I can make a contribution.  I'm getting tired of the test-never approach of my current day job and am looking for an opportunity.

Also enjoyed your comments on the difficulty of getting started in a programming career.  I fought that battle in the early 90s.

Will follow on Twitter.  Hope to get to talk to you soon.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341619734.9406";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1341622462</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341622462.1714";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-07 00:08:54</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>569</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>70.176.118.149</wp:comment_author_IP>
    <wp:comment_date>2012-07-06 18:05:30</wp:comment_date>
    <wp:comment_date_gmt>2012-07-07 01:05:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[John,
It really is something that @m3talsmith created here.  The idea of a work collective and collaborative working is really awesome to be a part of.  It is hard to make the time to work on client stuff in addition to in house projects.  We were doing fun Fridays but I had some catching up to do on my current project.  Planning on doing that again.  Fridays are supposed to be for learning and in house projects which we need to do diligently.

As for the test-never approach, I never heard of testing when I was using Python.  I see now though, that testing in Python is becoming more common.

Bob]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>568</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1341623131</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341623131.2081";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-07-07 01:05:30</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Ruby and Rails 101 Course</title>
  <link>http://bob-roberts.net/2012/03/29/ruby-and-rails-101-course/</link>
  <pubDate>Thu, 29 Mar 2012 18:17:10 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=640</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">For quite some time I have wanted to put together a Ruby and Rails 101 course for the community at no charge for attendees.  I recently posted a message on the <a href="http://groups.google.com/group/phoenix-ruby">Ruby::AZ</a> google group to see what interest was there.  Although it seems that there is a greater need for intermediate classes, I still believe that we should start at the beginner level and if that is successful then we can have a more advanced course.</p>
<p style="text-align:justify;">The plan is to have a weekly class most located in Phoenix/Tempe area.  I feel that once a month class is too much time in between.  Once we have the course planned, we will know how many weeks we are looking at.  I want the classes to be hands-on and last 1 - 2 hours.</p>
<p style="text-align:justify;">So, as it stands it looks like RebelHold and our friends at <a href="http://flatterline.com/">Flatterline</a> along with the <a href="http://rubyaz.heroku.com/">Ruby::AZ</a> group are going to make this happen.  I have had several people volunteer to help out and that is yet another example of how great the Ruby community is!</p>
<p style="text-align:justify;">Why are we doing this?  If you have read my blog before, it is obvious that I do not like seeing people getting charged to learn programming.  Charging a company to do training is one thing but we as the Ruby community owe it to ourselves and others to help develop new Ruby programmers.  At RebelHold, we bring in apprentices and train them.  After they have made the transition, they are made partners.  So by offering this course, we are developing programmers that might work with us some day.  I owe a lot to many people that took the time to teach me Ruby and to help me learn.  Time to return the favor.</p>
<p style="text-align:justify;">If you are interested in attending or would like to help out with the classes, please <a href="mailto:broberts_az@yahoo.com">email me</a> or go to the <a href="http://groups.google.com/group/phoenix-ruby">Ruby::AZ</a> google group and post a message.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>640</wp:post_id>
  <wp:post_date>2012-03-29 11:17:10</wp:post_date>
  <wp:post_date_gmt>2012-03-29 18:17:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-and-rails-101-course</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="post_tag" nicename="ruby-az"><![CDATA[ruby az]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"185430416826707969";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_fb</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Life as a Rails developer</title>
  <link>http://bob-roberts.net/2012/04/27/life-as-a-rails-developer/</link>
  <pubDate>Sat, 28 Apr 2012 04:14:58 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=648</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So Holy Shit, I am coming up on my 7 month anniversary as a full time Ruby on Rails developer.  I guess the old adage that time flies when you are having fun.  So true indeed.</p>
<p style="text-align:justify;">I figured that it has been a while since I posted and that I need to get with it again.  On a daily basis, I am still learning so many things.  I really need to share these findings and I will try to do more posting in the near future.</p>
<p style="text-align:justify;">So being a partner with Rebelhold, LLC absolutely kicks ass.  We are still at 3 partners but we now have two paid apprentices and working on adding a third very soon.  It is so nice to be able to return the favor that Rebelhold showed me by teaching me <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage" target="_blank">RoR</a> and how to be a good developer.  I am still <a class="zem_slink" title="Lead programmer" href="http://en.wikipedia.org/wiki/Lead_programmer" rel="wikipedia" target="_blank">lead developer</a> on a big project and I have one paid intern that I am teaching now.  I have also brought on another intern that as of yet has not made it to paid status but I feel that is not so far off in the future.  I was asked a while back what I have done for the Ruby community, and this is what I have done and do.  To top that off, we do not charge to teach and on the contrary, we pay our interns to learn once they have established a basic knowledge of RoR.  It is a goal for us at Rebelhold to train apprentices to work for us.  If they choose not to work for us after the training, then so be it but we still intend to continue teaching members of our community, regardless of who they do to work for.</p>
<p style="text-align:justify;">We as Rebelhold has risen to the go to Rails shop in Arizona.  Many of the other Rails shops do not have the resources available that we do.  We have dev's waiting for us to get more work so that they may come on board as well.  Rebelhold will continue to be a go to Rails shop and we plan on expanding to other languages and platforms as well.</p>
<p style="text-align:justify;">Ok , so enough preaching for now.  I wanted to share some things that I learned over the last 7 months and hopefully somebody finds some of this as useful.  So here it goes........</p>

<ul style="text-align:justify;">
	<li>Keep learning
<ul>
	<li>I don't care how many hours a day or days a week that you are working, find the time to learn something new EVERY day.  There are so many tutorials out there that there are too many to list.  A good way to end the day is to watch a tutorial or try something new.</li>
</ul>
</li>
	<li>Write Code
<ul>
	<li>A lot of beginners get stuck in the keep learning part.  Watching tutorials and coding along is great.  Studying all there is to know about Ruby and Rails is great.  However, you will learn the MOST by trial and error.  Write code, write code and write code.  Create as many blogs, fake store fronts or whatever you want to but keep writing code.</li>
</ul>
</li>
	<li>Mentors
<ul>
	<li>Aside from the fact that Rubyists are really arrogant, they love to talk about Ruby.  I have NEVER asked a question to a Ruby or Rails person that was not answered.  Find a local user group and go.  The last intern that I brought on was a guy brand new to RoR but I saw him at every Ruby::AZ monthly meeting.  Sometimes the desire to learn outweighs all.</li>
</ul>
</li>
</ul>
<p style="text-align:justify;">That to me are the biggest things to get going.  Oh yes, there are a million other things that can help you get rolling but these are in my opinion the biggest.</p>
<p style="text-align:justify;">Oh yeah, why would you want to be a RoR developer?  Supply and Demand is why.  The demand for RoR dev's is insane.  If you are a RoR dev and on LinkedIn, you will get job offers daily.  Write a blog about RoR and you will get even more job offers.  The job market for RoR devs is totally all demand.</p>
<p style="text-align:justify;">One last thing....I hated my old job and it was exactly that, a job.  If web development is your thing and you like Ruby on Rails, then I say do it.  Keep learning and get Earning!</p>
<p style="text-align:justify;">BR</p>

<h6 class="zemanta-related-title" style="font-size:1em;text-align:justify;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li" style="text-align:justify;"><a href="http://www.cultofmac.com/159264/learn-ruby-on-rails-the-easy-way-deals/" target="_blank">Learn Ruby on Rails the Easy Way [Deals]</a> (cultofmac.com)</li>
	<li class="zemanta-article-ul-li" style="text-align:justify;"><a href="http://pragprog.com/news/online-ruby-programming-course-from-pragmatic-studio" target="_blank">Online Ruby Programming Course from Pragmatic Studio</a> (pragprog.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>648</wp:post_id>
  <wp:post_date>2012-04-27 21:14:58</wp:post_date>
  <wp:post_date_gmt>2012-04-28 04:14:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>life-as-a-rails-developer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-04-28 04:14:58";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"196090106099150848";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>553</wp:comment_id>
    <wp:comment_author><![CDATA[Rick Carlino (@rickcarlino)]]></wp:comment_author>
    <wp:comment_author_email>rickcarlino@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/rickcarlino</wp:comment_author_url>
    <wp:comment_author_IP>184.98.40.161</wp:comment_author_IP>
    <wp:comment_date>2012-04-29 20:15:21</wp:comment_date>
    <wp:comment_date_gmt>2012-04-30 03:15:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You're right. Life IS good.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1721120756/me_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>296627779</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1335801343</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1335801343.9529";s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1335755721.206";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-04-30 03:15:21</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>RebelHold growing the community</title>
  <link>http://bob-roberts.net/2012/05/10/rebelhold-growing-the-community/</link>
  <pubDate>Fri, 11 May 2012 04:05:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=655</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Things are really going great for RebelHold these days.  We are now the largest Ruby on Rails development shop in Arizona that is still taking on new projects.  It is because of this that we have been able to help community members to grow as developers.  I was asked a while back what it is that I have ever done for the community.  I have been training one of our new apprentices and I also brought a new Intern onboard.  We also added another apprentice and our Phoenix outpost has doubled in size in the last couple of months.</p>
<p style="text-align:justify;">We also have added a couple of apprentices on in other states and are proud to be able to entertain any new RoR projects as they come along.  Our goal continues to be training our own developers.  We still do not charge to teach and in fact we pay our apprentices while they learn.</p>
<p style="text-align:justify;">I feel proud to be able to help members of our community to learn RoR and earn at the same time.  I am proud to be part of RebelHold!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>655</wp:post_id>
  <wp:post_date>2012-05-10 21:05:29</wp:post_date>
  <wp:post_date_gmt>2012-05-11 04:05:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rebelhold-growing-the-community</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;a:2:{s:7:"user_id";s:11:"broberts_az";s:7:"post_id";s:18:"200798762170466304";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Progression of RebelHold</title>
  <link>http://bob-roberts.net/2012/07/03/the-progression-of-rebelhold/</link>
  <pubDate>Tue, 03 Jul 2012 21:10:28 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=674</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So it has been in the plans since it's inception, that Rebelhold would eventually morph into multiple "outposts" or "locations".  In the last couple of weeks, this has begun to transpire.  I was excited to recently create the "Rebel Outpost" group.  Additionally, Michael, after moving back to Michigan, created the "Deep Woods Brigade."  Fletcher is planning on creating his own group as well.</p>
<p style="text-align:justify;">We are proud to be rolling out <a href="http://rebel-outpost.com">rebel-outpost.com</a>.  We are still a member of the RebelHold family and for lack of a better explanation, we consider ourselves a subsidiary.  Our plan still remains to have a pool of resources with different specialties available across the country.</p>
<p style="text-align:justify;">If you are interested in discussing your project ideas or interested in interning at one of our locations, please let us know.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>674</wp:post_id>
  <wp:post_date>2012-07-03 14:10:28</wp:post_date>
  <wp:post_date_gmt>2012-07-03 21:10:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-progression-of-rebelhold</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rebel Outpost</title>
  <link>http://bob-roberts.net/2012/07/11/rebel-outpost/</link>
  <pubDate>Wed, 11 Jul 2012 21:34:33 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=685</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Since we fired up the <a href="http://rebel-outpost.com">Rebel Outpost</a> member of <a href="http://rebelhold.com">RebelHold</a>, we have added a website for it.  In putting together the website, we had to think about what we want and who we are to put that up on our site.  It was interesting for us to sit back and discuss this.  I fell that we all have the same general idea in mind but there are parts where these ideas are different.</p>
<p style="text-align:justify;">When we talked about what we want, it was quite apparent that the guys are mostly interested in <a class="zem_slink" title="Mobile application development" href="http://en.wikipedia.org/wiki/Mobile_application_development" rel="wikipedia" target="_blank">mobile development</a>.  I myself am totally fine with <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage" target="_blank">RoR</a> <a class="zem_slink" title="Web application" href="http://en.wikipedia.org/wiki/Web_application" rel="wikipedia" target="_blank">web applications</a>, but the others want to really get into mobile development.  A couple of the guys have already been involved in mobile development and spend the majority of their spare time working on mobile apps.  Even though we got our start as a RoR shop, I see the transition to adding mobile apps to our list of specialties.  We will always strive to learn new languages and to stay current with everything that we do.</p>
<p style="text-align:justify;">The who we are part was pretty simple to define; a group of developers working as a collective as is the RebelHold way. We come from different backgrounds and make up a assortment of skills.  We work together on various projects as well as our own personal projects.  Most of what we do we leave as open source so that others may use it as well.  We feel that having a broad variety of talent gives us the edge in that we can provide many services to our clients.  We want to build the very best applications for you.<span style="text-align:center;"> </span></p>
<p style="text-align:center;">Rebel Against the Norm</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>685</wp:post_id>
  <wp:post_date>2012-07-11 14:34:33</wp:post_date>
  <wp:post_date_gmt>2012-07-11 21:34:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rebel-outpost</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="open-source"><![CDATA[Open source]]></category>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="rebelhold"><![CDATA[Rebelhold]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-07-11 21:34:33";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Confirm This web page is being redirected to a new location...</title>
  <link>http://bob-roberts.net/2012/07/11/confirm-this-web-page-is-being-redirected-to-a-new-location/</link>
  <pubDate>Wed, 11 Jul 2012 21:09:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=687</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">We recently had issues with a lot of our Rspec tests suddenly failing.  We were getting a Selenium Error that there was a Modal dialog present.  After a lot of wasted time troubleshooting, it was determined that FF v. 13 was causing the issue.  It appears that this was an issue last fall (<a href="http://support.mozilla.org/en-US/questions/792131">http://support.mozilla.org/en-US/questions/792131</a>)  After following the recommendations from that forum article, we still had the modal dialog issue.</p>
<p style="text-align:justify;">Our fix was to revert to FF v. 12 until they get things fixed.</p>
<p style="text-align:justify;">Update: I also tested FF v. 14 and the same issue persists.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>687</wp:post_id>
  <wp:post_date>2012-07-11 14:09:29</wp:post_date>
  <wp:post_date_gmt>2012-07-11 21:09:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>confirm-this-web-page-is-being-redirected-to-a-new-location</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d9048e7327dfb469bf35eedc7a7d5a21</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7495e0e2a712b45a4043ae61fb5dd680</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_149d73bb401fa5b958d8ade9631372e2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9cbfee6d959e7981141f460f7e6a0c47</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1debe3a8279444309484098bf4e9ddb1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_300b258529317c985da099d5d06f9004</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4c186fbfc200a28aca5c5893a6b7dc0a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8a8585d6275ee15ce9f4c4b9a96c38d0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8d810f7f4aff8e545d361a0daf3a049d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f7f3d3d2c2e3152cde572427c04662d5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cc297472745080dde2b80b69444d0704</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e915a8e7f2b5e6c28344f11cd1a970fc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b51b217c1444d00148b9584683623c8a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_971fc70b6882ed942dbe00ea9da324f8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3738d81b5f58e3d69a2c11518c8dd1de</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2abf78d93c878ba17d8b8185152093cf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9b646ed72e5137259678cfad6f747420</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3ff2e108e29995f30ad09e04c2b8a1b4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c1df3bf1fc6096ebd27c9253e4851856</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f3f050acb91a31f1fd4c0e9740b88b44</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d2fa7d697575a2d664263746248bb73b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>@m3talsmith makes daily standup</title>
  <link>http://bob-roberts.net/2012/07/18/m3talsmith-makes-daily-standup/</link>
  <pubDate>Wed, 18 Jul 2012 18:12:33 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=699</guid>
  <description/>
  <content:encoded><![CDATA[Today, Michael was the first one on the standup call.  I had to blog this.......]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>699</wp:post_id>
  <wp:post_date>2012-07-18 11:12:33</wp:post_date>
  <wp:post_date_gmt>2012-07-18 18:12:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>m3talsmith-makes-daily-standup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My Intern is all grown up</title>
  <link>http://bob-roberts.net/2012/07/19/my-intern-is-all-grown-up/</link>
  <pubDate>Thu, 19 Jul 2012 19:20:45 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=702</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Yesterday was Ricks last day working with us...for now.  This spring I met Rick (@rickcarlino) at our local <a href="http://rubyaz.heroku.com/">Ruby::AZ</a> group.  He just started showing up to the meetings and we got to talking at the after meeting drinking hole.  Rick was ex-military and was excited to learn about Rails.  He had been <a class="zem_slink" title="Learning Ruby" href="http://www.amazon.com/Learning-Ruby-Michael-Fitzgerald-Dr/dp/0596529864%3FSubscriptionId%3D0G81C5DAZ03ZR9WH9X82%26tag%3Dzemanta-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0596529864" rel="amazon" target="_blank">learning Ruby</a> on his own and was interested in <a class="zem_slink" title="Web development" href="http://en.wikipedia.org/wiki/Web_development" rel="wikipedia" target="_blank">web development</a>.  Well, I decided to bring him on as an intern for <a href="http://rebelhold.com">RebeHold</a>.  It was a great idea.</p>
<p style="text-align:justify;">Rick was almost always the first person to get to <a href="http://www.heatsynclabs.org/">HeatSyncLabs</a>, a local <a class="zem_slink" title="Hackerspace" href="http://en.wikipedia.org/wiki/Hackerspace" rel="wikipedia" target="_blank">hackerspace</a> that we work out of, and usually one of the last to leave.  For about a month or so, Rick was there EVERY day.  The guy is like a sponge when it comes to learning new things.  He did so well that we soon started to pay him, albeit not a lot.  Rick continued to excel and was soon racking up more points getting stories done than the rest of us were.</p>
<p style="text-align:justify;">RebelHold went thru its transition that I have written about before and I put Rick full time on the project that I was managing under <a href="http://rebel-outpost.com">Rebel Outpost</a>.  I gave hime a raise; for one week.  The next week I tried out a sliding pay scale based on the <a class="zem_slink" title="User story" href="http://en.wikipedia.org/wiki/User_story" rel="wikipedia" target="_blank">user stories</a> completed.  That week I paid Rick our full pay for apprentices.  Not mentioning numbers here but it was like a 280% pay raise.  Rick worked even harder.</p>
<p style="text-align:justify;">Rick has an amazing desire to learn and it amazes me how much he retains.  In college for Korean and Business Management, he still wants to learn Mobile Apps, alternative programming languages, and anything to do with a computer!</p>
<p style="text-align:justify;">Well, he is off to Korea for a semester and we will miss him dearly.  It was great to watch him go from unpaid intern to what he has become, a full fledged developer.  The good news to all of this is, he will one day come back, as long as he doesn't defect to North Korea, and when he comes back we will have a place for him here.</p>
<p style="text-align:justify;">Be safe Ricky!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>702</wp:post_id>
  <wp:post_date>2012-07-19 12:20:45</wp:post_date>
  <wp:post_date_gmt>2012-07-19 19:20:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-intern-is-all-grown-up</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rebel-outpost"><![CDATA[rebel outpost]]></category>
  <category domain="post_tag" nicename="ruby-az"><![CDATA[ruby az]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Great Read: Egoless Programming</title>
  <link>http://bob-roberts.net/2012/07/31/great-read-egoless-programming/</link>
  <pubDate>Tue, 31 Jul 2012 19:36:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=706</guid>
  <description/>
  <content:encoded><![CDATA[Once in a while an article comes along that really impresses me.  Please checkout <strong><a href="http://blog.stephenwyattbush.com/2012/04/07/dad-and-the-ten-commandments-of-egoless-programming">Dad and the Ten Commandments of Egoless Programming</a> </strong>by <a href="http://twitter.com/wyattdanger">@wyattdanger</a> .

What a great story and its amazing that a book written in 1971 list rules that still hold true today.  A for sure must read for programmers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>706</wp:post_id>
  <wp:post_date>2012-07-31 12:36:25</wp:post_date>
  <wp:post_date_gmt>2012-07-31 19:36:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>great-read-egoless-programming</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>My how they grow up so fast.....</title>
  <link>http://bob-roberts.net/2012/07/31/my-how-they-grow-up-so-fast/</link>
  <pubDate>Tue, 31 Jul 2012 21:32:43 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=708</guid>
  <description/>
  <content:encoded><![CDATA[So our intern Ricky is headed off to Korea for a bit and we will miss him.  The project that he was working of for <a href="http://rebel-outpost.com">Rebel Outpost</a> has been quite a monster legacy Rails project.  Ricky was really amazing in that he never gave in without a fight.

The project required an activity stream and off to Google, Ricky went.  His approach was not only a huge success but something that none of us have ever used before; Mongoid Observers.

He even wrote a short tutorial for it at <a href="http://www.rickcarlino.com/?p=74"><strong>So you want to make an observer in Mongoid…</strong></a>

Thanks again Rick and hurry back!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>708</wp:post_id>
  <wp:post_date>2012-07-31 14:32:43</wp:post_date>
  <wp:post_date_gmt>2012-07-31 21:32:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-how-they-grow-up-so-fast</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>579</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Christenson II]]></wp:comment_author>
    <wp:comment_author_email>michael@rebelhold.com</wp:comment_author_email>
    <wp:comment_author_url>http://rebelhold.com</wp:comment_author_url>
    <wp:comment_author_IP>97.83.82.94</wp:comment_author_IP>
    <wp:comment_date>2012-07-31 22:36:08</wp:comment_date>
    <wp:comment_date_gmt>2012-08-01 05:36:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Looking forward to your return Rick!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343799368.58386993408203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"m3talsmith";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343835960</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343835960.9117090702056884765625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-01 05:36:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Django or Rails?</title>
  <link>http://bob-roberts.net/2012/08/02/django-or-rails/</link>
  <pubDate>Thu, 02 Aug 2012 18:13:35 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=713</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Today I got into a conversation on Twitter about Rails versus <a class="zem_slink" title="Django (Web framework)" href="http://www.djangoproject.com" rel="homepage" target="_blank">Django</a>.  I know that I have blogged about this before but I thought that I should maybe clarify my reasons for preferring one over the other.</p>
<p style="text-align:justify;">Before I start, I must confess that I did not use Django that much and it was also in my beginning stages of <a class="zem_slink" title="Web development" href="http://en.wikipedia.org/wiki/Web_development" rel="wikipedia" target="_blank">web development</a> so bear that in mind as you read this.</p>
<p style="text-align:justify;">I came from <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" rel="homepage" target="_blank">Python</a> where I first learned it for geoprocessing to use with <a class="zem_slink" title="ArcGIS" href="http://en.wikipedia.org/wiki/ArcGIS" rel="wikipedia" target="_blank">ArcGIS</a>.  Now using Python (which is installed with ArcGIS) for geoprocessing inside of ArcGIS is easier than natively.  For example, there is a UI for forms to define what fields or data types to use.  Python for geoprocessing is very well documented and is very easy to use.</p>
<p style="text-align:justify;">I soon found out that I was very limited are far as functionality goes using Python "inside" of ArcGIS.  I looked at options for creating desktop <a class="zem_slink" title="Graphical user interface" href="http://en.wikipedia.org/wiki/Graphical_user_interface" rel="wikipedia" target="_blank">GUI</a>'s and found that <a class="zem_slink" title="WxPython" href="http://wxpython.org/" rel="homepage" target="_blank">wxPython</a> was the easiest for me to use to accomplish what I wanted to do.  I have several posts regarding this stuff in my archives so I will not repeat myself.</p>

<h3 style="text-align:justify;">On to web development…</h3>
<p style="text-align:justify;">At my old "job" we had an app written in <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage" target="_blank">Ruby on Rails</a> and that was my starting transition to web applications.  I started by creating Python interfaces for desktop applications to interact with our RoR web application and then started to assist on the web application itself.  This piqued my interest.  I had taught myself Python so why not learn Django?</p>
<p style="text-align:justify;">I other posts I have commented that the best place to find help learning a new programming language is to go to user groups.  In Arizona there was not a Python/Django user group.  I found via Twitter a couple of local guys that were Django developers and met with them at coffee shops to try to learn from them and I greatly appreciated their assistance.</p>
<p style="text-align:justify;">It was the learning at home, alone, that was not successful.  I found that there was not a lot of training "materials" online for Django.  Do not get me wrong, there is a lot of stuff on the web to help with learning Django but a lot of it is just as confusing as Django is.  I even went as far as trying to start-up/re-incarnate a local Python group which was not very successful.</p>

<h3 style="text-align:justify;">Enter Ruby user group…</h3>
<p style="text-align:justify;">I found out that there was a local Ruby group and a local Rails group.  I went to my first <a href="http://rubyaz.heroku.com/">Ruby::AZ </a>meeting.  I was at a transitional stage where the separation between the Ruby group and the Rails group was diminishing and morphed into what it is today; Ruby and all things Ruby.</p>
<p style="text-align:justify;">I found the support group I was looking for.  There were so many Rubyists that were happy to point me in the right direction and to help me when I needed it.  The resources for learning RoR are phenomenal.  My still all time favorite and a major reference guide for me is Railscasts.com.</p>
<p style="text-align:justify;">I then met @m3talsmith with <a href="http://rebelhold.com">RebelHold </a>and he took me on as an apprentice.  The rest is history.  I now have my own company <a href="http://rebel-outpost.com">Rebel Outpost</a> which is a member of the RebelHold family.</p>

<h3 style="text-align:justify;">Django or Rails?</h3>
<p style="text-align:justify;"> In all fairness, I prefer Rails as I was able to learn it.  That does not mean that Python or Django are bad languages at all.  I also cannot say that Rails is better than Django but I do love Rails.</p>
<p style="text-align:justify;">Ruby is so clean and elegant to read and write but lacks the whitespace-ness (is that a word?) that Python has.</p>
<p style="text-align:justify;">So I hope that clarifies my love for Rails over Django………</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>713</wp:post_id>
  <wp:post_date>2012-08-02 11:13:35</wp:post_date>
  <wp:post_date_gmt>2012-08-02 18:13:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>django-or-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>584</wp:comment_id>
    <wp:comment_author><![CDATA[Chris Toledo]]></wp:comment_author>
    <wp:comment_author_email>uberscientist@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/uberscientist</wp:comment_author_url>
    <wp:comment_author_IP>75.172.143.111</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 12:28:43</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 19:28:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Cool! I agree with you on the python webdev community. It seems very sparse (and confusing).  I looked at a bunch of frameworks, finally set Django up because it seemed to be the least confusing, but never got anywhere past that since it didn't seem like a fit for what I was trying to do.  I actually still haven't made the project that initially got me looking seriously into web development a year or so ago.

I started learning Ruby (and Rails) just a couple weeks ago, the convention over configuration can be a bit confusing at first, but once a lot of the scary new terms become defined everything links up pretty beautifully.

Anyway, to close: The documentation/community behind a project is what makes it go bewm!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343935723.8686959743499755859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"uberscientist";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343935890</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343935891.1154000759124755859375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-02 19:28:43</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>585</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>70.176.118.149</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 12:32:08</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 19:32:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I just didn't want to come across as a Django hater.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>584</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343935928</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343935929.04611110687255859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-02 19:32:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>586</wp:comment_id>
    <wp:comment_author><![CDATA[monteslu]]></wp:comment_author>
    <wp:comment_author_email>monteslu@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/monteslu</wp:comment_author_url>
    <wp:comment_author_IP>72.44.240.228</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 15:03:29</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 22:03:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[you guys and your legacy languages...

Node.js, bros :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343945009.402245998382568359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"monteslu";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343945140</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343945140.1013419628143310546875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-02 22:03:29</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>587</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>70.176.118.149</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 15:06:16</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 22:06:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ok Ok, I will make the time to look at node.js!!  Geez!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>586</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343945176</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343945176.0624740123748779296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-02 22:06:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Twitter Bootstrap, Oh how I love thee</title>
  <link>http://bob-roberts.net/2012/08/02/twitter-bootstrap-oh-how-i-love-thee/</link>
  <pubDate>Thu, 02 Aug 2012 18:24:57 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=734</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">As a person that cannot even draw a worthwhile stickman, I have to say that I do not have a designer bone in my body.  Oh I can get around HTML/HAML and CSS/SASS but other than that I am pretty hopeless as a designer.</p>
<p style="text-align:justify;">I started to use<a href="http://twitter.github.com/bootstrap/"> Twitter Bootstrap</a> on a side project of mine and used it entirely for <a href="http://rebel-outpost.com">Rebel Outpost</a>.  It seems that the argument is that using it will make all sites look alike and I see that to a point.  But let me tell you the use that I found for it; I am learning to design.</p>
<p style="text-align:justify;">Using Twitter bootstrap has improved my <a class="zem_slink" title="Haml" href="http://haml-lang.com/" rel="homepage" target="_blank">HAML</a> and SASS skills.  I used to give every element a different id or class and had mountains of CSS/SASS.  Now I do not do that any more.  I have learned to use grids as well.  I have started to make my own custom Twitter Bootstrap file which I can now use as a foundation to any new site.</p>
<p style="text-align:justify;">So if you are like me, take a Twitter Bootstrap file, customize it and go with it as a foundation to use for your site.</p>

<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://blog.crowdint.com/2012/06/04/bootstrap-themes-with-bootswatch.html" target="_blank">Bootstrap Themes with Bootswatch</a> (crowdint.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>734</wp:post_id>
  <wp:post_date>2012-08-02 11:24:57</wp:post_date>
  <wp:post_date_gmt>2012-08-02 18:24:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>twitter-bootstrap-oh-how-i-love-thee</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="haml"><![CDATA[HAML]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="sass"><![CDATA[SASS]]></category>
  <category domain="post_tag" nicename="twitter-bootstrap"><![CDATA[Twitter Bootstrap]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Writing stories for Pivotal Tracker</title>
  <link>http://bob-roberts.net/2012/08/13/writing-stories-for-pivotal-tracker/</link>
  <pubDate>Mon, 13 Aug 2012 23:06:41 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=738</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I have had a lot of hits from people searching for how to write <a class="zem_slink" title="User story" href="http://en.wikipedia.org/wiki/User_story" rel="wikipedia" target="_blank">user stories</a> for <a class="zem_slink" title="Project Management" href="http://www.business.com/business-planning/project-management/" rel="businesscom" target="_blank">project management</a> solutions like <a class="zem_slink" title="Pivotal Tracker" href="http://www.pivotaltracker.com/" rel="homepage" target="_blank">Pivotal Tracker</a>.  User stories are used in the <a class="zem_slink" title="Agile Software Development" href="http://www.techopedia.com/definition/13564/agile-software-development" rel="techopedia" target="_blank">Agile development</a> process so that the <a class="zem_slink" title="Client (computing)" href="http://en.wikipedia.org/wiki/Client_%28computing%29" rel="wikipedia" target="_blank">client</a> can define the way that they want their application to perform.  They are written in a way that a non computer savvy client can describe what they want to the developer.</p>
<p style="text-align:justify;">User stories can be as simple as a one line sentence describing a function.  This is normally to answer the "who", "what", and "where" but not necessarily always.  A user story can also, and generally should, include a list of tasks that need to be accomplished to result in the desired behavior.  User stories are a big portion of the <a class="zem_slink" title="Behavior Driven Development" href="http://en.wikipedia.org/wiki/Behavior_Driven_Development" rel="wikipedia" target="_blank">Behavior Driven Development</a> (BDD) as they describe a desired behavior.</p>

<h3 style="text-align:justify;">ISBAT</h3>
<p style="text-align:justify;">A common term in writing user stories is ISBAT, short for "I should be able to" and is a great why for the client to think thru the functionality that they wish to achieve.</p>

<h3 style="text-align:justify;">A simple user story example</h3>
<p style="text-align:justify;">The client wants a site that a customer can go to, create and account and purchase something.  So the first thing we need to do is create an account.  Our story could start as "As a user ISBAT create an account."  This reads and is clear to what the desired behavior is.  So now how will we do that.  We can create tasks working together with the client.</p>

<ol style="text-align:justify;">
	<li>Task 1 - visit the home page</li>
	<li>Task 2 - click on create an account</li>
	<li>Task 3 - fill in a form and submit it</li>
	<li>Task 4 - click on  confirm my account in email</li>
</ol>
<p style="text-align:justify;">Now we have a pretty good understanding of exactly what the client wants and expects.  The more explicit that the user stories are the easier it is to write your tests.  You can use "create an account" in your describe and your first test should be it "creates new user account." Following this story, you can easily write the rest of the test such as visit root_path, click_link "Create Account", etc.</p>

<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://thecriticalpath.info/2012/07/27/defining-the-qualified-user-story/" target="_blank">Defining The Qualified User Story</a> (thecriticalpath.info)</li>
	<li class="zemanta-article-ul-li"><a href="http://www.allaboutagile.com/how-detailed-should-tasks-be-in-a-user-story/" target="_blank">How Detailed Should Tasks Be in a User Story?</a> (allaboutagile.com)</li>
	<li class="zemanta-article-ul-li"><a href="http://www.usabilitycounts.com/2012/06/08/product-talk-user-stories-are-better-than-prds/" target="_blank">Product Talk: User Stories Are Better Than PRDs</a> (usabilitycounts.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>738</wp:post_id>
  <wp:post_date>2012-08-13 16:06:41</wp:post_date>
  <wp:post_date_gmt>2012-08-13 23:06:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>writing-stories-for-pivotal-tracker</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1165</wp:comment_id>
    <wp:comment_author><![CDATA[AnAn]]></wp:comment_author>
    <wp:comment_author_email>anna.banszek@netguru.pl</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>185.24.202.206</wp:comment_author_IP>
    <wp:comment_date>2013-12-17 04:13:52</wp:comment_date>
    <wp:comment_date_gmt>2013-12-17 11:13:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Been there, done that! Creating a perfect user/feature story needs some experinece. Here's our recipe for doing the stories in the Pivotal Tracker the right way https://netguru.co/blog/posts/doing-features-and-user-stories-the-right-way]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1387278832.959330081939697265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1387287517</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1387287517</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1387287518.0334529876708984375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-12-17 11:13:52</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1166</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>208.93.128.118</wp:comment_author_IP>
    <wp:comment_date>2013-12-17 06:38:38</wp:comment_date>
    <wp:comment_date_gmt>2013-12-17 13:38:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes there is a certain finesse.  Great article on PT.  Thanks for your comment ;)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>1165</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1387287519</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1387287519.6906230449676513671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1387287520</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-12-17 13:38:38</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>David Claeys - 2013-06-11 16:07:54</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1007</link>
  <pubDate>Tue, 11 Jun 2013 23:07:54 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1007</guid>
  <description/>
  <content:encoded><![CDATA[Please contact me regarding a Ruby on Rails Developer full time position in Scottsdale. I WILL GIVE YOU THE DETAILS OF THIS POSITION AND COMPANY THAT WAS RECENTLY IDENTIFIED AS A PREFERRED PLACE TO WORK IN ARIZONA..
<!--more-->
AUTHOR: David Claeys
AUTHOR EMAIL: dclaeys@tech-recruitment.com
AUTHOR URL: http://www.tech-recruitment.com
SUBJECT: Email from Blog
IP: 98.119.118.218
Array
(
    [Name] =&gt; David Claeys
    [Email] =&gt; dclaeys@tech-recruitment.com
    [Website] =&gt; www.tech-recruitment.com
    [Comment] =&gt; Please contact me regarding a Ruby on Rails Developer full time position in Scottsdale. I WILL GIVE YOU THE DETAILS OF THIS POSITION AND COMPANY THAT WAS RECENTLY IDENTIFIED AS A PREFERRED PLACE TO WORK IN ARIZONA..
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1007</wp:post_id>
  <wp:post_date>2013-06-11 16:07:54</wp:post_date>
  <wp:post_date_gmt>2013-06-11 23:07:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>5f5a6fb01086a6c5147f8d88719a9722</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[David Claeys]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[dclaeys@tech-recruitment.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.tech-recruitment.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[98.119.118.218]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:12:"David Claeys";s:5:"Email";s:28:"dclaeys@tech-recruitment.com";s:7:"Website";s:24:"www.tech-recruitment.com";s:7:"Comment";s:215:"Please contact me regarding a Ruby on Rails Developer full time position in Scottsdale. I WILL GIVE YOU THE DETAILS OF THIS POSITION AND COMPANY THAT WAS RECENTLY IDENTIFIED AS A PREFERRED PLACE TO WORK IN ARIZONA..";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:481:"Name: David Claeys
Email: dclaeys@tech-recruitment.com
Website: http://www.tech-recruitment.com
Comment: Please contact me regarding a Ruby on Rails Developer full time position in Scottsdale. I WILL GIVE YOU THE DETAILS OF THIS POSITION AND COMPANY THAT WAS RECENTLY IDENTIFIED AS A PREFERRED PLACE TO WORK IN ARIZONA..

Time: Tuesday June 11, 2013 at 4:07 pm
IP Address: 98.119.118.218
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:153:"From: David Claeys <wordpress@bobspython.wordpress.com>
Reply-To: David Claeys <dclaeys@tech-recruitment.com>
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Alex - 2013-11-21 14:19:15</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1033</link>
  <pubDate>Thu, 21 Nov 2013 21:19:15 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1033</guid>
  <description/>
  <content:encoded><![CDATA[Hey there,

I came across one of your posts via a page from the Phoenix Ruby Group and was curious how often you take interns in. I'm currently a student at ASU studying Media Processing with a minor in Computer Science. This semester I'm taking a Rails class where I've made a blog, social networking site, plus a Q &amp; A app that has helped me get pretty comfortable with Rails; however, I want to dive deeper. 
Besides RoR, I do a bunch of Arduino hackery, 3D modeling/printing, fabrication/prototyping stuff, and more. 

Thanks for your time!
- Alex
<!--more-->
AUTHOR: Alex
AUTHOR EMAIL: ababich@asu.edu
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 172.56.7.237
Array
(
    [Name] =&gt; Alex
    [Email] =&gt; ababich@asu.edu
    [Website] =&gt; 
    [Comment] =&gt; Hey there,

I came across one of your posts via a page from the Phoenix Ruby Group and was curious how often you take interns in. I'm currently a student at ASU studying Media Processing with a minor in Computer Science. This semester I'm taking a Rails class where I've made a blog, social networking site, plus a Q &amp; A app that has helped me get pretty comfortable with Rails; however, I want to dive deeper. 
Besides RoR, I do a bunch of Arduino hackery, 3D modeling/printing, fabrication/prototyping stuff, and more. 

Thanks for your time!
- Alex
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1033</wp:post_id>
  <wp:post_date>2013-11-21 14:19:15</wp:post_date>
  <wp:post_date_gmt>2013-11-21 21:19:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>c13bbb061c484f4d8558724b19a5f14e</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Alex]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[ababich@asu.edu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[172.56.7.237]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:4:"Alex";s:5:"Email";s:15:"ababich@asu.edu";s:7:"Website";s:0:"";s:7:"Comment";s:557:"Hey there,

I came across one of your posts via a page from the Phoenix Ruby Group and was curious how often you take interns in. I'm currently a student at ASU studying Media Processing with a minor in Computer Science. This semester I'm taking a Rails class where I've made a blog, social networking site, plus a Q & A app that has helped me get pretty comfortable with Rails; however, I want to dive deeper. 
Besides RoR, I do a bunch of Arduino hackery, 3D modeling/printing, fabrication/prototyping stuff, and more. 

Thanks for your time!
- Alex";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:755:"Name: Alex
Email: ababich@asu.edu
Comment: Hey there,

I came across one of your posts via a page from the Phoenix Ruby Group and was curious how often you take interns in. I'm currently a student at ASU studying Media Processing with a minor in Computer Science. This semester I'm taking a Rails class where I've made a blog, social networking site, plus a Q & A app that has helped me get pretty comfortable with Rails; however, I want to dive deeper. 
Besides RoR, I do a bunch of Arduino hackery, 3D modeling/printing, fabrication/prototyping stuff, and more. 

Thanks for your time!
- Alex

Time: November 21, 2013 at 2:19 pm
IP Address: 172.56.7.237
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:124:"From: Alex <wordpress@bobspython.wordpress.com>
Reply-To: Alex <ababich@asu.edu>
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Home</title>
  <link>http://bob-roberts.net/?p=1038</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1038</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1038</wp:post_id>
  <wp:post_date>2013-12-07 16:44:15</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[1038]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[custom]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1386459857]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/?p=1039</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1039</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1039</wp:post_id>
  <wp:post_date>2013-12-07 16:44:17</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1386459858]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/?p=1040</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1040</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1040</wp:post_id>
  <wp:post_date>2013-12-07 16:44:18</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>nav_menu_item</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_menu_item_type</wp:meta_key>
    <wp:meta_value><![CDATA[post_type]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object_id</wp:meta_key>
    <wp:meta_value><![CDATA[215]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_object</wp:meta_key>
    <wp:meta_value><![CDATA[page]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_target</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_classes</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_xfn</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_menu_item_orphaned</wp:meta_key>
    <wp:meta_value><![CDATA[1386459859]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Richa - 2013-12-19 05:23:41</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1064</link>
  <pubDate>Thu, 19 Dec 2013 12:23:41 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1064</guid>
  <description/>
  <content:encoded><![CDATA[Greetings from my side. Trust you are doing great.

I've worked on several web platforms built in Ruby on Rails with an experience of 4+ years. 
I have good experience with HTML5/CSS3, HAML, SASS, Javascript, jQuery, AJAX, Mysql, Ruby 1.9.x and 2.0, Rails (2.x, 3.x, 4), rspec, capistrano, Git, svn, JIRA, Pivotal Tracker, Facebook API, Social Media integration, Payment gateway integration, Amazon AWS services, API development for mobile apps, Apache and Server Management.

I wanted to ask if you have requirement for a Ruby on Rails developer who can work remotely.
<!--more-->
AUTHOR: Richa
AUTHOR EMAIL: bhardwaj.richa17@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 122.162.36.92
Array
(
    [Name] =&gt; Richa
    [Email] =&gt; bhardwaj.richa17@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; Greetings from my side. Trust you are doing great.

I've worked on several web platforms built in Ruby on Rails with an experience of 4+ years. 
I have good experience with HTML5/CSS3, HAML, SASS, Javascript, jQuery, AJAX, Mysql, Ruby 1.9.x and 2.0, Rails (2.x, 3.x, 4), rspec, capistrano, Git, svn, JIRA, Pivotal Tracker, Facebook API, Social Media integration, Payment gateway integration, Amazon AWS services, API development for mobile apps, Apache and Server Management.

I wanted to ask if you have requirement for a Ruby on Rails developer who can work remotely.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1064</wp:post_id>
  <wp:post_date>2013-12-19 05:23:41</wp:post_date>
  <wp:post_date_gmt>2013-12-19 12:23:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>5d69f29bc530d1c3516e8937eb35ff1c</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Richa]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[bhardwaj.richa17@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[122.162.36.92]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:5:"Richa";s:5:"Email";s:26:"bhardwaj.richa17@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:574:"Greetings from my side. Trust you are doing great.

I've worked on several web platforms built in Ruby on Rails with an experience of 4+ years. 
I have good experience with HTML5/CSS3, HAML, SASS, Javascript, jQuery, AJAX, Mysql, Ruby 1.9.x and 2.0, Rails (2.x, 3.x, 4), rspec, capistrano, Git, svn, JIRA, Pivotal Tracker, Facebook API, Social Media integration, Payment gateway integration, Amazon AWS services, API development for mobile apps, Apache and Server Management.

I wanted to ask if you have requirement for a Ruby on Rails developer who can work remotely.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:785:"Name: Richa
Email: bhardwaj.richa17@gmail.com
Comment: Greetings from my side. Trust you are doing great.

I've worked on several web platforms built in Ruby on Rails with an experience of 4+ years. 
I have good experience with HTML5/CSS3, HAML, SASS, Javascript, jQuery, AJAX, Mysql, Ruby 1.9.x and 2.0, Rails (2.x, 3.x, 4), rspec, capistrano, Git, svn, JIRA, Pivotal Tracker, Facebook API, Social Media integration, Payment gateway integration, Amazon AWS services, API development for mobile apps, Apache and Server Management.

I wanted to ask if you have requirement for a Ruby on Rails developer who can work remotely.

Time: December 19, 2013 at 5:23 am
IP Address: 122.162.36.92
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:137:"From: Richa <wordpress@bobspython.wordpress.com>
Reply-To: Richa <bhardwaj.richa17@gmail.com>
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Milan - 2014-03-04 11:59:06</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1115</link>
  <pubDate>Tue, 04 Mar 2014 18:59:06 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1115</guid>
  <description/>
  <content:encoded><![CDATA[Hello Bob! 

First of all I wanted to thank you for creating and maintaining RailsCRM. 

I'm wondering if you are available for hire to deploy and customize and instance of RailsCRM? I'm starting a project and looking to use something like RailsCRM to avoid duplication of effort in building the basic functionality.

I'd love to hear from you.

Cheers,
Milan
<!--more-->
AUTHOR: Milan
AUTHOR EMAIL: mmalivuk@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 96.44.245.50
Array
(
    [Name] =&gt; Milan
    [Email] =&gt; mmalivuk@gmail.com
    [Website] =&gt; 
    [Comment] =&gt; Hello Bob! 

First of all I wanted to thank you for creating and maintaining RailsCRM. 

I'm wondering if you are available for hire to deploy and customize and instance of RailsCRM? I'm starting a project and looking to use something like RailsCRM to avoid duplication of effort in building the basic functionality.

I'd love to hear from you.

Cheers,
Milan
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1115</wp:post_id>
  <wp:post_date>2014-03-04 11:59:06</wp:post_date>
  <wp:post_date_gmt>2014-03-04 18:59:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2299f6989872bbd5d639c74c314dcc0a</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"subject";s:15:"Email from Blog";s:7:"message";s:567:"Name: Milan
Email: mmalivuk@gmail.com
Comment: Hello Bob! 

First of all I wanted to thank you for creating and maintaining RailsCRM. 

I'm wondering if you are available for hire to deploy and customize and instance of RailsCRM? I'm starting a project and looking to use something like RailsCRM to avoid duplication of effort in building the basic functionality.

I'd love to hear from you.

Cheers,
Milan

Time: March 4, 2014 at 11:59 am
IP Address: 96.44.245.50
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";s:7:"headers";s:133:"From: "Milan" <wordpress@bobspython.wordpress.com>
Reply-To: "Milan" <mmalivuk@gmail.com>
Content-Type: text/plain; charset="UTF-8"";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_all_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:4:{s:4:"Name";s:5:"Milan";s:5:"Email";s:18:"mmalivuk@gmail.com";s:7:"Website";s:0:"";s:7:"Comment";s:368:"Hello Bob! 

First of all I wanted to thank you for creating and maintaining RailsCRM. 

I'm wondering if you are available for hire to deploy and customize and instance of RailsCRM? I'm starting a project and looking to use something like RailsCRM to avoid duplication of effort in building the basic functionality.

I'd love to hear from you.

Cheers,
Milan";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_contact_form_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://bob-roberts.net/contact/]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_ip</wp:meta_key>
    <wp:meta_value><![CDATA[96.44.245.50]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_subject</wp:meta_key>
    <wp:meta_value><![CDATA[Email from Blog]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author</wp:meta_key>
    <wp:meta_value><![CDATA[Milan]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_email</wp:meta_key>
    <wp:meta_value><![CDATA[mmalivuk@gmail.com]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_author_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Louis D. Gallo - 2014-08-07 20:12:54</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1202</link>
  <pubDate>Fri, 08 Aug 2014 03:12:54 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1202</guid>
  <description/>
  <content:encoded><![CDATA[Hello Bob Roberts,

I believe my partner Jay contacted you some months ago (Feb or March, I believe) about implementing rails framework on our new website. We have a template website in place already and pretty much all we need is a back-end. My business partner handle maintenance and development of our website so please forgive my ignorance as I'm not as savvy as either of you when it comes to this sort of thing. Basically, I'm emailing you today to ask for a quote.

You can see the near complete front-end here: 
Mock-up Website: http://kolektakon.org/
Username: rubytime
Password: gored902

Thank you for your time and we look forward to hearing back from you!

Best,

Louis
<!--more-->
AUTHOR: Louis D. Gallo
AUTHOR EMAIL: distribution@kolektakon.com
AUTHOR URL: https://kolektakon.com/
SUBJECT: Email from Blog
IP: 67.191.62.171
Array
(
    [Name] =&gt; Louis D. Gallo
    [Email] =&gt; distribution@kolektakon.com
    [Website] =&gt; https://kolektakon.com/
    [Comment] =&gt; Hello Bob Roberts,

I believe my partner Jay contacted you some months ago (Feb or March, I believe) about implementing rails framework on our new website. We have a template website in place already and pretty much all we need is a back-end. My business partner handle maintenance and development of our website so please forgive my ignorance as I'm not as savvy as either of you when it comes to this sort of thing. Basically, I'm emailing you today to ask for a quote.

You can see the near complete front-end here: 
Mock-up Website: http://kolektakon.org/
Username: rubytime
Password: gored902

Thank you for your time and we look forward to hearing back from you!

Best,

Louis


)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1202</wp:post_id>
  <wp:post_date>2014-08-07 20:12:54</wp:post_date>
  <wp:post_date_gmt>2014-08-08 03:12:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>d7ded76b533cc6240c91dccf90ee19d2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:946:"Name: Louis D. Gallo
Email: distribution@kolektakon.com
Website: https://kolektakon.com/
Comment: Hello Bob Roberts,

I believe my partner Jay contacted you some months ago (Feb or March, I believe) about implementing rails framework on our new website. We have a template website in place already and pretty much all we need is a back-end. My business partner handle maintenance and development of our website so please forgive my ignorance as I'm not as savvy as either of you when it comes to this sort of thing. Basically, I'm emailing you today to ask for a quote.

You can see the near complete front-end here: 
Mock-up Website: http://kolektakon.org/
Username: rubytime
Password: gored902

Thank you for your time and we look forward to hearing back from you!

Best,

Louis

Time: August 7, 2014 at 8:12 pm
IP Address: 67.191.62.171
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Luke Brandt - Go Solutions - 2014-08-12 08:00:01</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1204</link>
  <pubDate>Tue, 12 Aug 2014 15:00:01 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1204</guid>
  <description/>
  <content:encoded><![CDATA[Bob,

I hope you are doing well. 

I came across profile on LinkedIn and I’m looking to network with Ruby on Rails professionals as I have a healthcare client looking to add an experienced developer. This is a 100% telecommute position with excellent compensation. 

They are seeking a developer with over 5 years of experience and who is a strong believer in test driven development.  This is a great opportunity to work with a very strong and experienced development group.  Your experience looks like it could be a great fit.  

I appreciate your time and would appreciate any referrals of contacts that may be looking for a change at this time. I look forward to hearing from you. 


Luke Brandt
National Recruiting Manager
GO Solutions

Email: lukebrandt@goesolutions.com
Phone: 480-241-5853
LinkedIn: www.linkedin.com/in/lukebrandt/ 
Website: www.goesolutions.com
<!--more-->
AUTHOR: Luke Brandt - Go Solutions
AUTHOR EMAIL: lukebrandt@goesolutions.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 72.201.13.213
Array
(
    [Name] =&gt; Luke Brandt - Go Solutions
    [Email] =&gt; lukebrandt@goesolutions.com
    [Website] =&gt; 
    [Comment] =&gt; Bob,

I hope you are doing well. 

I came across profile on LinkedIn and I’m looking to network with Ruby on Rails professionals as I have a healthcare client looking to add an experienced developer. This is a 100% telecommute position with excellent compensation. 

They are seeking a developer with over 5 years of experience and who is a strong believer in test driven development.  This is a great opportunity to work with a very strong and experienced development group.  Your experience looks like it could be a great fit.  

I appreciate your time and would appreciate any referrals of contacts that may be looking for a change at this time. I look forward to hearing from you. 


Luke Brandt
National Recruiting Manager
GO Solutions

Email: lukebrandt@goesolutions.com
Phone: 480-241-5853
LinkedIn: www.linkedin.com/in/lukebrandt/ 
Website: www.goesolutions.com


)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1204</wp:post_id>
  <wp:post_date>2014-08-12 08:00:01</wp:post_date>
  <wp:post_date_gmt>2014-08-12 15:00:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>495257cdaa61dd80862f0b0a2d3a0f34</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:1120:"Name: Luke Brandt - Go Solutions
Email: lukebrandt@goesolutions.com
Comment: Bob,

I hope you are doing well. 

I came across profile on LinkedIn and I’m looking to network with Ruby on Rails professionals as I have a healthcare client looking to add an experienced developer. This is a 100% telecommute position with excellent compensation. 

They are seeking a developer with over 5 years of experience and who is a strong believer in test driven development.  This is a great opportunity to work with a very strong and experienced development group.  Your experience looks like it could be a great fit.  

I appreciate your time and would appreciate any referrals of contacts that may be looking for a change at this time. I look forward to hearing from you. 


Luke Brandt
National Recruiting Manager
GO Solutions

Email: lukebrandt@goesolutions.com
Phone: 480-241-5853
LinkedIn: www.linkedin.com/in/lukebrandt/ 
Website: www.goesolutions.com

Time: August 12, 2014 at 8:00 am
IP Address: 72.201.13.213
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>akhil - 2014-08-20 01:33:19</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1207</link>
  <pubDate>Wed, 20 Aug 2014 08:33:19 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1207</guid>
  <description/>
  <content:encoded><![CDATA[Hi Bob,

 Thank you for reblogging my post at http://akhilkr.wordpress.com. And Im sorry to tell you that I have closed that blog and created a new one in my own new server. If you can please edit your reblogging post so that people will not be redirected to wrong page. And I have same post at http://www.cheatchits.com/amazon-ses-ruby-on-rails/.


Thank you
Akhil
<!--more-->
AUTHOR: akhil
AUTHOR EMAIL: akhil7687@gmail.com
AUTHOR URL: http://www.cheatchits.com/
SUBJECT: Email from Blog
IP: 122.167.118.175
Array
(
    [Name] =&gt; akhil
    [Email] =&gt; akhil7687@gmail.com
    [Website] =&gt; http://www.cheatchits.com/
    [Comment] =&gt; Hi Bob,

 Thank you for reblogging my post at http://akhilkr.wordpress.com. And Im sorry to tell you that I have closed that blog and created a new one in my own new server. If you can please edit your reblogging post so that people will not be redirected to wrong page. And I have same post at http://www.cheatchits.com/amazon-ses-ruby-on-rails/.


Thank you
Akhil  
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1207</wp:post_id>
  <wp:post_date>2014-08-20 01:33:19</wp:post_date>
  <wp:post_date_gmt>2014-08-20 08:33:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>b9be6ff78c49922458c9a389d92a0803</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:611:"Name: akhil
Email: akhil7687@gmail.com
Website: http://www.cheatchits.com/
Comment: Hi Bob,

 Thank you for reblogging my post at http://akhilkr.wordpress.com. And Im sorry to tell you that I have closed that blog and created a new one in my own new server. If you can please edit your reblogging post so that people will not be redirected to wrong page. And I have same post at http://www.cheatchits.com/amazon-ses-ruby-on-rails/.


Thank you
Akhil

Time: August 20, 2014 at 1:33 am
IP Address: 122.167.118.175
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Jason Miller - 2015-02-19 15:27:22</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1232</link>
  <pubDate>Thu, 19 Feb 2015 22:27:22 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1232</guid>
  <description/>
  <content:encoded><![CDATA[Hi Bob,

I came across your blog and wanted to see if you ever would be open to hearing about development opportunities here in PHX?  I see RoR from time to time and would love to be able to keep you in mind.  Hope to hear from you soon!

Jason Miller
Randstad Technologies
602.635.1338
Jason.miller@randstadusa.com
<!--more-->
AUTHOR: Jason Miller
AUTHOR EMAIL: jason.miller@randstadusa.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 174.251.162.60
Array
(
    [1_Name] =&gt; Jason Miller
    [2_Email] =&gt; jason.miller@randstadusa.com
    [3_Website] =&gt; 
    [4_Comment] =&gt; Hi Bob,

I came across your blog and wanted to see if you ever would be open to hearing about development opportunities here in PHX?  I see RoR from time to time and would love to be able to keep you in mind.  Hope to hear from you soon!

Jason Miller
Randstad Technologies
602.635.1338
Jason.miller@randstadusa.com
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1232</wp:post_id>
  <wp:post_date>2015-02-19 15:27:22</wp:post_date>
  <wp:post_date_gmt>2015-02-19 22:27:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>e77467e9419394a8765c227c0add3a69</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:543:"Name: Jason Miller
Email: jason.miller@randstadusa.com
Comment: Hi Bob,

I came across your blog and wanted to see if you ever would be open to hearing about development opportunities here in PHX?  I see RoR from time to time and would love to be able to keep you in mind.  Hope to hear from you soon!

Jason Miller
Randstad Technologies
602.635.1338
Jason.miller@randstadusa.com

Time: February 19, 2015 at 3:27 pm
IP Address: 174.251.162.60
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Garth - 2015-05-08 08:48:32</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1239</link>
  <pubDate>Fri, 08 May 2015 15:48:32 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1239</guid>
  <description/>
  <content:encoded><![CDATA[How much would you sell your bike for?
<!--more-->
AUTHOR: Garth
AUTHOR EMAIL: garth@socialwhirled.com
AUTHOR URL: http://socialwhirled.com
SUBJECT: Email from Blog
IP: 184.176.138.167
Array
(
    [1_Name] =&gt; Garth
    [2_Email] =&gt; garth@socialwhirled.com
    [3_Website] =&gt; socialwhirled.com
    [4_Comment] =&gt; How much would you sell your bike for?
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1239</wp:post_id>
  <wp:post_date>2015-05-08 08:48:32</wp:post_date>
  <wp:post_date_gmt>2015-05-08 15:48:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>4e2ae4f629d4a0bc2d58aadd9f6cd598</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:276:"Name: Garth
Email: garth@socialwhirled.com
Website: http://socialwhirled.com
Comment: How much would you sell your bike for?

Time: May 8, 2015 at 8:48 am
IP Address: 184.176.138.167
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Garth - 2015-05-08 08:48:32</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1240</link>
  <pubDate>Fri, 08 May 2015 15:48:32 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1240</guid>
  <description/>
  <content:encoded><![CDATA[How much would you sell your bike for?
<!--more-->
AUTHOR: Garth
AUTHOR EMAIL: garth@socialwhirled.com
AUTHOR URL: http://socialwhirled.com
SUBJECT: Email from Blog
IP: 184.176.138.167
Array
(
    [1_Name] =&gt; Garth
    [2_Email] =&gt; garth@socialwhirled.com
    [3_Website] =&gt; socialwhirled.com
    [4_Comment] =&gt; How much would you sell your bike for?
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1240</wp:post_id>
  <wp:post_date>2015-05-08 08:48:32</wp:post_date>
  <wp:post_date_gmt>2015-05-08 15:48:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>4e2ae4f629d4a0bc2d58aadd9f6cd598-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:276:"Name: Garth
Email: garth@socialwhirled.com
Website: http://socialwhirled.com
Comment: How much would you sell your bike for?

Time: May 8, 2015 at 8:48 am
IP Address: 184.176.138.167
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Kent - 2015-05-24 08:47:56</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1242</link>
  <pubDate>Sun, 24 May 2015 15:47:56 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1242</guid>
  <description/>
  <content:encoded><![CDATA[Media buying is the #1 most effective way to generate meaningful traffic - but unfortunately the large media companies that serve these ads - the same ads you see on the sites you browse all day, charge you $100s or even $1000s per day to buy their traffic since they only sell in large volumes! 
 
Fox Media Solutions is an adexchange partner with these many major networks and we split up the costs between the many other customers we have in your niche - all seeing a TON more visitors to their many music, real estate, sports, web hosting, travel/tourism, gambling, and other niches. 
 
We think bob-roberts.net can get a lot more exposure from buying and driving traffic using http://foxmediasolutions.com/traffic-plans.html the same way all of these other successful websites have been doing for so long! 
 
If you're looking to boost your traffic to bob-roberts.net, you have t check out http://foxmediasolutions.com/traffic-plans.html 
 
Here's to your success and quick website growth! 
Kent 
Fox Media Solutions
<!--more-->
AUTHOR: Kent
AUTHOR EMAIL: unevendownlink2a@rediffmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 178.137.85.199
Array
(
    [1_Name] =&gt; Kent
    [2_Email] =&gt; unevendownlink2a@rediffmail.com
    [3_Website] =&gt; 
    [4_Comment] =&gt; Media buying is the #1 most effective way to generate meaningful traffic - but unfortunately the large media companies that serve these ads - the same ads you see on the sites you browse all day, charge you $100s or even $1000s per day to buy their traffic since they only sell in large volumes! 
 
Fox Media Solutions is an adexchange partner with these many major networks and we split up the costs between the many other customers we have in your niche - all seeing a TON more visitors to their many music, real estate, sports, web hosting, travel/tourism, gambling, and other niches. 
 
We think bob-roberts.net can get a lot more exposure from buying and driving traffic using http://foxmediasolutions.com/traffic-plans.html the same way all of these other successful websites have been doing for so long! 
 
If you're looking to boost your traffic to bob-roberts.net, you have t check out http://foxmediasolutions.com/traffic-plans.html 
 
Here's to your success and quick website growth! 
Kent 
Fox Media Solutions
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1242</wp:post_id>
  <wp:post_date>2015-05-24 08:47:56</wp:post_date>
  <wp:post_date_gmt>2015-05-24 15:47:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2bed24f1838399673153481cf05d6f0c</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:1242:"Name: Kent
Email: unevendownlink2a@rediffmail.com
Comment: Media buying is the #1 most effective way to generate meaningful traffic - but unfortunately the large media companies that serve these ads - the same ads you see on the sites you browse all day, charge you $100s or even $1000s per day to buy their traffic since they only sell in large volumes! 
 
Fox Media Solutions is an adexchange partner with these many major networks and we split up the costs between the many other customers we have in your niche - all seeing a TON more visitors to their many music, real estate, sports, web hosting, travel/tourism, gambling, and other niches. 
 
We think bob-roberts.net can get a lot more exposure from buying and driving traffic using http://foxmediasolutions.com/traffic-plans.html the same way all of these other successful websites have been doing for so long! 
 
If you're looking to boost your traffic to bob-roberts.net, you have t check out http://foxmediasolutions.com/traffic-plans.html 
 
Here's to your success and quick website growth! 
Kent 
Fox Media Solutions

Time: May 24, 2015 at 8:47 am
IP Address: 178.137.85.199
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Mike Kovarik - 2015-10-22 11:11:06</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1267</link>
  <pubDate>Thu, 22 Oct 2015 18:11:06 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1267</guid>
  <description/>
  <content:encoded><![CDATA[I am currently piloting my Ruby built web app platform with Shanrock Foods and I found your info as a Ruby guru and would love to buy you coffee and have you look at our application. 

Let me know if you are available tomorrow am to chat.

Thanks,

Mike
CEO &amp; Founder, Attribytes
<!--more-->
AUTHOR: Mike Kovarik
AUTHOR EMAIL: mike@attribytes.com
AUTHOR URL: http://Attribytes.com
SUBJECT: Email from Blog
IP: 98.165.123.81
Array
(
    [1_Name] =&gt; Mike Kovarik
    [2_Email] =&gt; mike@attribytes.com
    [3_Website] =&gt; Attribytes.com
    [4_Comment] =&gt; I am currently piloting my Ruby built web app platform with Shanrock Foods and I found your info as a Ruby guru and would love to buy you coffee and have you look at our application. 

Let me know if you are available tomorrow am to chat.

Thanks,

Mike
CEO &amp; Founder, Attribytes 
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1267</wp:post_id>
  <wp:post_date>2015-10-22 11:11:06</wp:post_date>
  <wp:post_date_gmt>2015-10-22 18:11:06</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>7df693d7f41f6f23a04e43ced4b72351</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:528:"Name: Mike Kovarik
Email: mike@attribytes.com
Website: http://Attribytes.com
Comment: I am currently piloting my Ruby built web app platform with Shanrock Foods and I found your info as a Ruby guru and would love to buy you coffee and have you look at our application. 

Let me know if you are available tomorrow am to chat.

Thanks,

Mike
CEO & Founder, Attribytes

Time: October 22, 2015 at 11:11 am
IP Address: 98.165.123.81
Contact Form URL: http://bob-roberts.net/contact/
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Colton Hagan - 2016-02-24 18:50:42</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1288</link>
  <pubDate>Thu, 25 Feb 2016 01:50:42 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1288</guid>
  <description/>
  <content:encoded><![CDATA[We have a ruby site that's almost done. Need help. (480) 259-6679. Call me.
<!--more-->
AUTHOR: Colton Hagan
AUTHOR EMAIL: Colton@chuzum.com
AUTHOR URL: http://na
SUBJECT: Email from Blog
IP: 68.104.133.131
Array
(
    [1_Name] =&gt; Colton Hagan
    [2_Email] =&gt; Colton@chuzum.com
    [3_Website] =&gt; na
    [4_Comment] =&gt; We have a ruby site that's almost done. Need help. (480) 259-6679. Call me.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1288</wp:post_id>
  <wp:post_date>2016-02-24 18:50:42</wp:post_date>
  <wp:post_date_gmt>2016-02-25 01:50:42</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>8b8cd16f4fb097c02bc3cae3f54968cd</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:390:"<b>Name:</b> Colton Hagan<br /><br /><b>Email:</b> Colton@chuzum.com<br /><br /><b>Website:</b> http://na<br /><br /><b>Comment:</b> We have a ruby site that's almost done. Need help. (480) 259-6679. Call me.<br /><br />Time: February 24, 2016 at 6:50 pm<br />IP Address: 68.104.133.131<br />Contact Form URL: http://bob-roberts.net/contact/<br />Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>John - 2016-03-31 14:48:06</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1289</link>
  <pubDate>Thu, 31 Mar 2016 21:48:06 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">http://bob-roberts.net/?post_type=feedback&amp;p=1289</guid>
  <description/>
  <content:encoded><![CDATA[Dear Bob

I am relatively new to RoR,
and I am trying to figure out,
how to make browser detection using the 'browser' gem.
I read in one of your threads that you have used it.
Could you please give me some relevant info about installation-usage?
I think documentation of the gem is not very clear.
<!--more-->
AUTHOR: John
AUTHOR EMAIL: jpsail@windowslive.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 87.202.139.125
Array
(
    [1_Name] =&gt; John
    [2_Email] =&gt; jpsail@windowslive.com
    [3_Website] =&gt; 
    [4_Comment] =&gt; Dear Bob

I am relatively new to RoR,
and I am trying to figure out,
how to make browser detection using the 'browser' gem.
I read in one of your threads that you have used it.
Could you please give me some relevant info about installation-usage?
I think documentation of the gem is not very clear.
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1289</wp:post_id>
  <wp:post_date>2016-03-31 14:48:06</wp:post_date>
  <wp:post_date_gmt>2016-03-31 21:48:06</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>e2fee599b26839d8dd03a3f2203d1c47</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:655:"<b>Name:</b> John<br /><br />
<b>Email:</b> jpsail@windowslive.com<br /><br />
<b>Website:</b> <br /><br />
<b>Comment:</b> Dear Bob<br />
<br />
I am relatively new to RoR,<br />
and I am trying to figure out,<br />
how to make browser detection using the 'browser' gem.<br />
I read in one of your threads that you have used it.<br />
Could you please give me some relevant info about installation-usage?<br />
I think documentation of the gem is not very clear.<br /><br />

Time: March 31, 2016 at 2:48 pm<br />
IP Address: 87.202.139.125<br />
Contact Form URL: http://bob-roberts.net/contact/<br />
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Larry Rohr - 2016-07-25 19:43:31</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1298</link>
  <pubDate>Tue, 26 Jul 2016 02:43:31 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">https://bob-roberts.net/?post_type=feedback&amp;p=1298</guid>
  <description/>
  <content:encoded><![CDATA[I am developing a family genealogy website that I am paying for myself using ROR, responsive Bootstrap, Apache2 and PostgreSQL. I currently have a first draft model of it in MSAccess. I would collaborate through repositories on GitHub. I want to remain the principal developer but need help in doing so. Would you be interested in assisting me?
<!--more-->
AUTHOR: Larry Rohr
AUTHOR EMAIL: lfrohr@gmail.com
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 70.190.0.200
Array
(
    [1_Name] =&gt; Larry Rohr
    [2_Email] =&gt; lfrohr@gmail.com
    [3_Website] =&gt; 
    [4_Comment] =&gt; I am developing a family genealogy website that I am paying for myself using ROR, responsive Bootstrap, Apache2 and PostgreSQL. I currently have a first draft model of it in MSAccess. I would collaborate through repositories on GitHub. I want to remain the principal developer but need help in doing so. Would you be interested in assisting me?
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1298</wp:post_id>
  <wp:post_date>2016-07-25 19:43:31</wp:post_date>
  <wp:post_date_gmt>2016-07-26 02:43:31</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>2edc187b824ab1df1790d1c518edf54a</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:650:"<b>Name:</b> Larry Rohr<br /><br />
<b>Email:</b> lfrohr@gmail.com<br /><br />
<b>Website:</b> <br /><br />
<b>Comment:</b> I am developing a family genealogy website that I am paying for myself using ROR, responsive Bootstrap, Apache2 and PostgreSQL. I currently have a first draft model of it in MSAccess. I would collaborate through repositories on GitHub. I want to remain the principal developer but need help in doing so. Would you be interested in assisting me?<br /><br />

Time: July 25, 2016 at 7:43 pm<br />
IP Address: 70.190.0.200<br />
Contact Form URL: https://bob-roberts.net/contact/<br />
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Adveho - 2016-12-10 15:30:07</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1312</link>
  <pubDate>Sat, 10 Dec 2016 22:30:07 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">https://bob-roberts.net/?post_type=feedback&amp;p=1312</guid>
  <description/>
  <content:encoded><![CDATA[Hi bob

Hope your well. 

Clle.eu and Russtrategic no longer running?

If you want a chat about work let me know
<!--more-->
AUTHOR: Adveho
AUTHOR EMAIL: adveho@hotmail.co.uk
AUTHOR URL: 
SUBJECT: Email from Blog
IP: 2.25.80.234
Array
(
    [1_Name] =&gt; Adveho
    [2_Email] =&gt; adveho@hotmail.co.uk
    [3_Website] =&gt; 
    [4_Comment] =&gt; Hi bob

Hope your well. 

Clle.eu and Russtrategic no longer running?

If you want a chat about work let me know 
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1312</wp:post_id>
  <wp:post_date>2016-12-10 15:30:07</wp:post_date>
  <wp:post_date_gmt>2016-12-10 22:30:07</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>3b530c0dc9729d35922aff4a979cd51f</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:463:"<b>Name:</b> Adveho<br /><br />
<b>Email:</b> adveho@hotmail.co.uk<br /><br />
<b>Website:</b> <br /><br />
<b>Comment:</b> Hi bob<br />
<br />
Hope your well. <br />
<br />
Clle.eu and Russtrategic no longer running?<br />
<br />
If you want a chat about work let me know<br /><br />

Time: December 10, 2016 at 3:30 pm<br />
IP Address: 2.25.80.234<br />
Contact Form URL: https://bob-roberts.net/contact/<br />
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A great web development workflow</title>
  <link>http://bob-roberts.net/?p=1313</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1313</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1313</wp:post_id>
  <wp:post_date>2017-01-06 18:01:11</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Sania Lorison - 2017-02-15 05:07:54</title>
  <link>http://bob-roberts.net/?post_type=feedback&amp;p=1315</link>
  <pubDate>Wed, 15 Feb 2017 12:07:54 +0000</pubDate>
  <dc:creator/>
  <guid isPermaLink="false">https://bob-roberts.net/?post_type=feedback&amp;p=1315</guid>
  <description/>
  <content:encoded><![CDATA[Hi
We can help your website to get on first page of Google and increase the number of leads and sales you are getting from your website. Please email us back for full proposal.

Best Regards
Sania
<!--more-->
AUTHOR: Sania Lorison
AUTHOR EMAIL: sania.lorison@gmail.com
AUTHOR URL: http://www.netcaremarketing.net
SUBJECT: Email from Blog
IP: 103.212.144.221
Array
(
    [1_Name] =&gt; Sania Lorison
    [2_Email] =&gt; sania.lorison@gmail.com
    [3_Website] =&gt; http://www.netcaremarketing.net
    [4_Comment] =&gt; 
Hi
We can help your website to get on first page of Google and increase the number of leads and sales you are getting from your website. Please email us back for full proposal.

Best Regards
Sania
)
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1315</wp:post_id>
  <wp:post_date>2017-02-15 05:07:54</wp:post_date>
  <wp:post_date_gmt>2017-02-15 12:07:54</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>35d0c381a6e5e501d841481c6b2f884e</wp:post_name>
  <wp:status>spam</wp:status>
  <wp:post_parent>215</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>feedback</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_feedback_email</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:21:"broberts_az@yahoo.com";}s:7:"message";s:578:"<b>Name:</b> Sania Lorison<br /><br />
<b>Email:</b> sania.lorison@gmail.com<br /><br />
<b>Website:</b> http://www.netcaremarketing.net<br /><br />
<b>Comment:</b> Hi<br />
We can help your website to get on first page of Google and increase the number of leads and sales you are getting from your website. Please email us back for full proposal.<br />
<br />
Best Regards<br />
Sania<br /><br />

Time: February 15, 2017 at 5:07 am<br />
IP Address: 103.212.144.221<br />
Contact Form URL: https://bob-roberts.net/contact/<br />
Sent by an unverified visitor to your site.";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_feedback_extra_fields</wp:meta_key>
    <wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nice and Simple :)</title>
  <link>http://bob-roberts.net/?p=1316</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1316</guid>
  <description/>
  <content:encoded><![CDATA[<a href="https://deadsimpleror.wordpress.com/2017/02/19/facebook-omniauth-integration-ror/"><img src="https://deadsimpleror.files.wordpress.com/2017/02/dsr_fb_integ_whitebg.png?quality=80&amp;strip=info&amp;w=1600" /></a>
<blockquote>To integrate Facebook signup and login in your application you need to do the followings.</blockquote>
via <a href="https://deadsimpleror.wordpress.com/2017/02/19/facebook-omniauth-integration-ror/">Dead Simple Facebook Integration With Your ROR App — Dead Simple Ruby On Rails</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1316</wp:post_id>
  <wp:post_date>2017-03-02 16:57:52</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/?p=1319</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1319</guid>
  <description/>
  <content:encoded><![CDATA[<pre></pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1319</wp:post_id>
  <wp:post_date>2017-05-01 22:08:13</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
</item>
<item>
  <title>What I have learned as a freelance developer</title>
  <link>http://bob-roberts.net/2012/08/29/what-i-have-learned-as-a-freelance-developer/</link>
  <pubDate>Thu, 30 Aug 2012 04:01:16 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=744</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Well, I am almost at one year since I quit corporate America and went freelance.  I am not really sure what the definition of a 'freelance' developer is and I don't care what wikipedia says it is.  All I know is that I do NOT work for a company and I consider that <a class="zem_slink" title="Freelancer" href="http://en.wikipedia.org/wiki/Freelancer" rel="wikipedia" target="_blank">freelancing</a>.</p>
<p style="text-align:justify;">So what have I learned in the almost year of not working for the 'man'?  I would have to say a lot.  Let's break it down into pros and cons with the cons up first.</p>

<h3 style="text-align:justify;">Cons</h3>
<ul style="text-align:justify;">
	<li>No health insurance
<ul>
	<li>Now this might not matter to all of the younger generation of developers, but at my age this is something that I dreadfully miss.  There are options out there for individual health insurance but they are overly expensive and that is a shame.</li>
</ul>
</li>
</ul>
<ul style="text-align:justify;">
	<li>What am I doing next week?
<ul>
	<li>It can be said that there is security in working for a company, but I have seen that to be a fallacy in many situations.  I left my 'corporate' job when they started to cut out benefits.  I figured that was the writing on the wall that things were going to be tight for some time to come.  To me it seemed that IF they were going to pull employee benefits, then the chances of a raise anytime in the near future were pretty slim.</li>
	<li>The best way to counter this 'fear' is to secure large projects whenever possible.  This may mean making less money but for a guaranteed amount of time which for me was the case and that in itself added a feeling of security.  There is no guarantee of anything in this world but try to give yourself as much of a safety net as possible.</li>
</ul>
</li>
	<li> No taxes
<ul>
	<li>This might sound like a great thing but I am shitting my pants in fear on next April.  Set the money aside for taxes or you will regret it.  This sounds like a no brainer but I know this and I have not done it.  Epic Fail!</li>
</ul>
</li>
</ul>
<h3 style="text-align:justify;">Pros</h3>
<ul>
	<li style="text-align:justify;">Being your own boss
<ul style="text-align:justify;">
	<li>Now this could go in the cons category for a lot of you.  It takes something to be your own boss.  You have to be a bigger asshole than any boss that you have ever worked for.  It is so easy to get lazy when there is nobody looking over your shoulder.  This really is not a good situation for everybody but if you are dedicated, then this really is a pro.</li>
	<li>Work hard and play hard but don't burn yourself out.  There are many development companies out there that adhere to a 4 day work week with Fridays being set aside for open-source or fun projects.  Do not work yourself to death which is the extreme opposite of being lazy and occurs more often than not.</li>
</ul>
</li>
	<li style="text-align:justify;">Unlimited Income
<ul>
	<li style="text-align:justify;">Now there really is not anything as unlimited income but as a freelancer you have the opportunity to make as much (and as little) money as physically possible and by that I mean that there are only so many hours in the week and one does need some sleep.</li>
</ul>
</li>
	<li style="text-align:justify;">Your own time
<ul>
	<li style="text-align:justify;">You control your time.  Obviously you have deadlines for your client(s) but how you spend your time is up to you.  Use it well and do not waste it.</li>
	<li style="text-align:justify;">Work on open-sourced projects.  I have heard that this is a great way to get your name out there.  Make the time to learn something new and to work on your own project.  In my case I found that there was not any <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage" target="_blank">Ruby on Rails</a> <a class="zem_slink" title="Customer relationship management" href="http://en.wikipedia.org/wiki/Customer_relationship_management" rel="wikipedia" target="_blank">CRM</a> out there that was based on <a class="zem_slink" title="MongoDB" href="http://www.mongodb.org/" rel="homepage" target="_blank">MongoDB</a> so I decided to make my own <a title="Rails-Mongo-CRM" href="http://brobertsaz.github.com/rails_mongo_crm/">Rails-Mongo-CRM</a> in the hopes that people will see not only my work but that I am giving back to the community.</li>
</ul>
</li>
	<li style="text-align:justify;">Do your own thing
<ul>
	<li style="text-align:justify;">I fell that the bottom line is that you can do your own thing.  Do what you want to do and what you enjoy doing.  The moment that you no longer 'enjoy' if, go back to corporate America</li>
</ul>
</li>
</ul>
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://www.techwench.com/financial-tips-for-the-newbie-freelancer/" target="_blank">Financial Tips For The Newbie Freelancer</a> (techwench.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>744</wp:post_id>
  <wp:post_date>2012-08-29 21:01:16</wp:post_date>
  <wp:post_date_gmt>2012-08-30 04:01:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-i-have-learned-as-a-freelance-developer</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="mongodb"><![CDATA[MongoDB]]></category>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-08-30 04:01:16";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>620</wp:comment_id>
    <wp:comment_author><![CDATA[Bosstiger]]></wp:comment_author>
    <wp:comment_author_email>gs3tiger@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gigable.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>46.198.139.64</wp:comment_author_IP>
    <wp:comment_date>2012-08-30 07:36:19</wp:comment_date>
    <wp:comment_date_gmt>2012-08-30 14:36:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://gigable.wordpress.com/2012/08/30/what-i-have-learned-as-a-freelance-developer/" rel="nofollow">Gigable - Tech Blog</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>17465007</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346337379.5656960010528564453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"tigerboose";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1346341579</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346341580.2641780376434326171875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-08-30 14:36:19</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Invitation Modal</title>
  <link>http://bob-roberts.net/2012/08/30/invitation-modal/</link>
  <pubDate>Thu, 30 Aug 2012 16:22:22 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/08/30/invitation-modal/</guid>
  <description/>
  <content:encoded><![CDATA[Very good tutorial covers a lot here.  Great Job!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>747</wp:post_id>
  <wp:post_date>2012-08-30 09:22:22</wp:post_date>
  <wp:post_date_gmt>2012-08-30 16:22:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>invitation-modal</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[16]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[39785881]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b3546c19ee668eb3660802af25162ad0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_44767143b73eec7bacd03b45e584c02f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0e7941cfc9ac9b385ead905347812b8e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9231dff58114e8e6c26d7b90954186af</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a6bba39d0e6058c58a4a2fb9c7f07794</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5cbd2139e6dbf3f3844f343ca81d1096</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Issue installing Ruby after upgrading to Mountain Lion</title>
  <link>http://bob-roberts.net/2012/09/04/issue-installing-ruby-after-upgrading-to-mountain-lion/</link>
  <pubDate>Tue, 04 Sep 2012 22:46:11 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=749</guid>
  <description/>
  <content:encoded><![CDATA[I think that most of us that have upgraded to Mountain Lion have encountered this issue already, but for those that have not, here is what you need to do.

Chances are that if you are trying to install <a class="zem_slink" title="Ruby (programming language)" href="http://www.ruby-lang.org/" rel="homepage" target="_blank">Ruby</a> you are getting an error, which once you look in the log, says:

<code>configure: error: no acceptable C compiler found in $PATH</code>

Even if you had <a class="zem_slink" title="Xcode" href="http://developer.apple.com/tools/xcode/" rel="homepage" target="_blank">Xcode</a> installed before you will need to download it from the App store and install it.  After it is installed, open Xcode, go to preferences and then the downloads tab.  There you will see an option to install the command line tools.

Restart your terminal, and you should be able to install Ruby.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>749</wp:post_id>
  <wp:post_date>2012-09-04 15:46:11</wp:post_date>
  <wp:post_date_gmt>2012-09-04 22:46:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>issue-installing-ruby-after-upgrading-to-mountain-lion</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="mac-os-x"><![CDATA[Mac OS X]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails CRM</title>
  <link>http://bob-roberts.net/2012/09/05/rails-crm/</link>
  <pubDate>Thu, 06 Sep 2012 02:12:03 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=761</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">An ongoing pet project of mine has been <a href="http://railscrm.com" target="_blank">Rails CRM</a> which is a CRM (<a class="zem_slink" title="CRM and Sales Software" href="http://www.business.com/software/crm-and-sales-software/" rel="businesscom" target="_blank">Customer Relations Management</a>) built on Rails and using <a class="zem_slink" title="MongoDB" href="http://www.mongodb.org/" rel="homepage" target="_blank">Mongodb</a> for the database.  This was also a practice project for my last intern Ricky.  This all came about when we were trying to find an <a class="zem_slink" title="Open Source" href="http://www.wikinvest.com/concept/Open_Source" rel="wikinvest" target="_blank">open-sourced</a> CRM for RebelHold to use.  There are a few out there but none using our preferred and probably the best database, Mongodb.  Many also had a lot of shall I say baggage.  I was looking for a more or less basic CRM to customize and finally came to the conclusion that I would need to make a new one.</p>
<p style="text-align:justify;">Well recently I spent quite a bit of time cleaning up the <a class="zem_slink" title="RSpec" href="http://rspec.info/" rel="homepage" target="_blank">Rspec</a> tests and the Twitter Bootstrap layout.  It is by no means ready for primetime but we are really close.  Most of the basic functionality is there but I am planning on adding some more bells and whistles.  After that, I am going to leave it alone and use a clone of it to further customize for our use.</p>
<p style="text-align:justify;">You can find more information on the <a href="http://railscrm.com" target="_blank">Rails CRM</a> homepage or can find the project on <a href="https://github.com/brobertsaz/rails_mongo_crm" target="_blank">Github</a>.  Please feel free to email me ideas/suggestions/bitches and/or complaints.  I will update when the project is fully completed.</p>
<p style="text-align:justify;">Update: You can now go to railscrm.com or to check out the demo, go to demo.railscrm.com.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>761</wp:post_id>
  <wp:post_date>2012-09-05 19:12:03</wp:post_date>
  <wp:post_date_gmt>2012-09-06 02:12:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-crm</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="customer-relationship-management"><![CDATA[Customer relationship management]]></category>
  <category domain="post_tag" nicename="mongodb"><![CDATA[MongoDB]]></category>
  <category domain="post_tag" nicename="open-source"><![CDATA[Open source]]></category>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-09-06 19:49:34";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/09/06/774/</link>
  <pubDate>Thu, 06 Sep 2012 21:00:33 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/09/06/774/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>774</wp:post_id>
  <wp:post_date>2012-09-06 14:00:33</wp:post_date>
  <wp:post_date_gmt>2012-09-06 21:00:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>774</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[12]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40047130]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_502bfa68afde24a526fa2f80a5706972</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f9e99bab77ea14a189e552c6d4ebe8c5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e3d7aaaa22f9b7132c2a2d56c0a3c9c4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/09/06/775/</link>
  <pubDate>Thu, 06 Sep 2012 23:40:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/09/06/775/</guid>
  <description/>
  <content:encoded><![CDATA[Really nice post on TDD]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>775</wp:post_id>
  <wp:post_date>2012-09-06 16:40:59</wp:post_date>
  <wp:post_date_gmt>2012-09-06 23:40:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>775</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[33]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[12826470]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dynamically change options for select based on first drop down</title>
  <link>http://bob-roberts.net/2012/09/15/dynamically-change-options-for-select-based-on-first-drop-down/</link>
  <pubDate>Sat, 15 Sep 2012 22:27:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=776</guid>
  <description/>
  <content:encoded><![CDATA[I recently needed to change the options for select for a drop down based on the selection of another drop down.  At first this seemed like a pretty easy thing to do, right?  I thought that I could simply throw an if statement into the view and all would be well.  As I started to add the code to the view, I realized that this approach was not going to work at all.  That is when it hit me that I was going to need to use Javascript.

There were a million examples and forum answers all over the web and I tried about half of them to no avail.  I called in the big gun himself, Michael (@m3talsmith) our in-house Javascript expert.

Here is the entire code (minus the extra crap obviously) :

https://gist.github.com/3710100

Now, I will break it down into each part.  First lets start with the form part, and again this is not the entire form but rather just the 2 drop downs that we are working with.

https://gist.github.com/3729943

So we have the two drop downs in our form.  The first drop down has the values from the controller as @share_types.  So based on the selected value of the :share_type we will have different set of options for select for the second drop down.  For this we will need to check the selected value of the :share_type.  The first thing that we do is look for the change of that selection.

https://gist.github.com/3729944

First we call the initSubOptions() function on document ready.  This function watches the #selected_share_type drop down for it to change.  When it sees that drop down change it takes the value of it ($(this).val()) and passes that to the populateSubOptions function.

https://gist.github.com/3730040

The populateSubOptions() function looks at the selected value of the first drop down.  There are only 3 options that will ever be present in the first drop down and we have just two cases, if it is “share_across” or either of the other options.  Our if statement looks to see if the value is “share_across” and if it is it calls .empty() on the #share_exp_dates select and then appends to it the optionFromArray(share_across_options) otherwise it appends the optionFromArray(share_down_options).

https://gist.github.com/3730070

The optionsFromArray function creates the options for select based on which array it is passed.  The two array options are defined based on the values that are passed in from the controller; either @share_across_dates or @share_down_dates.

It then runs thru the array and creates the option values.  The @options for @share_across_dates is an array of arrays:

[['1 Week', 'one_week'], ['2 Weeks', 'two_weeks'], ['3 Weeks', 'three_weeks'], ['4 Weeks', 'four_weeks'], ['5 Weeks', 'five_weeks'], ['6 Weeks', 'six_weeks'] ]

So, easy stuff here if you are good at javascript.  We watch for the value of the first drop down to be changed and then based on that we display the options for select accordingly.

I am sure that there may be a better/easier way out there, but this worked for me.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>776</wp:post_id>
  <wp:post_date>2012-09-15 15:27:05</wp:post_date>
  <wp:post_date_gmt>2012-09-15 22:27:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dynamically-change-options-for-select-based-on-first-drop-down</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/09/12/786/</link>
  <pubDate>Wed, 12 Sep 2012 22:36:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/09/12/786/</guid>
  <description/>
  <content:encoded><![CDATA[Nice, short and sweet.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>786</wp:post_id>
  <wp:post_date>2012-09-12 15:36:46</wp:post_date>
  <wp:post_date_gmt>2012-09-12 22:36:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>786</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[3774]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[6931535]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4233f50f1a9b39aa6e1c5ff6862d66ee</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8b4003b0e0166b129f6c97c3f9301d53</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Next up...Intern number 2</title>
  <link>http://bob-roberts.net/2012/09/20/next-up-intern-number-2/</link>
  <pubDate>Thu, 20 Sep 2012 22:19:23 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=810</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So I was in my usual hunting grounds (<a href="http://rubyaz.heroku.com/">Ruby::AZ</a>) for scouting for <a class="zem_slink" title="Internship" href="http://en.wikipedia.org/wiki/Internship" rel="wikipedia" target="_blank">interns</a>, when there sitting in the middle wide-eyed as can be, I saw my next victim.  We spoke for a bit and he said that he was just beginning to learn <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" rel="homepage" target="_blank">RoR</a>.  He emailed me a more thorough profile of himself and we spent quite a bit of time chatting the next day.</p>
<p style="text-align:justify;">So without further ado, please welcome Steve Tong to the <a href="http://rebel-outpost.com">Rebel Outpost</a> community:</p>
<p style="text-align:justify;">"Here is a little bit about myself to see if you are interesting in working (teaching) with me. I have business degree with a major in marketing. I have been doing marketing (mostly internet marketing) and advertising operations as a day job for about 5 years now. Side projects including email development, <a class="zem_slink" title="Black Hat Search Engine Optimization" href="http://www.techopedia.com/definition/4860/black-hat-seo" rel="techopedia" target="_blank">SEO</a> work, and the occasional website build....</p>
<p style="text-align:justify;">My development experience consists of a year of C# in college and about another year of dabbling around with it after. Although the only thing I really retained was logic. I have done work with HTML/CSS and have started really learning Ruby on Rails since this past May. I feel I have taught myself a lot but am definitely still a beginner and need to learn much more, and would greatly benefit having someone help me turn this into a career."</p>
<p style="text-align:justify;">After looking at some of the work that Steve Tong has done on his own, I am highly impressed with his Rails skills.  We are happy to bring him on with his SEO skills in addition to Marketing skills and expect Steve to be a great fit and a great coder.</p>
<p style="text-align:justify;">We all know that he has some big shoes to fit after our last intern, but I think he can do it!!</p>
&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>810</wp:post_id>
  <wp:post_date>2012-09-20 15:19:23</wp:post_date>
  <wp:post_date_gmt>2012-09-20 22:19:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>next-up-intern-number-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rebel Outpost adds new Partner</title>
  <link>http://bob-roberts.net/2012/09/21/rebel-outpost-adds-new-partner/</link>
  <pubDate>Sat, 22 Sep 2012 01:48:58 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=812</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Today, we added Steve Young (@jediunixmaster) as a partner to the <a href="http://rebel-outpost.com">Rebel Outpost, LLC</a>.  Steve has been working his tail off since joining us in the beginning of the year.  Always eager to please and a workaholic by nature, Steve never slows down and he does not quit until the job is done.</p>
<p style="text-align:justify;">His many years of programming experience combined with his business management skills will definitely be a valuable asset to Rebel Outpost.</p>
<p style="text-align:justify;">It has been an exciting week this week with a new partner and a new intern!!!  Go Rebel Outpost!!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>812</wp:post_id>
  <wp:post_date>2012-09-21 18:48:58</wp:post_date>
  <wp:post_date_gmt>2012-09-22 01:48:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rebel-outpost-adds-new-partner</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rebel-outpost"><![CDATA[rebel outpost]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:0;i:197;}s:2:"wp";a:1:{i:0;i:21;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails, stuck on the tracks</title>
  <link>http://bob-roberts.net/2012/10/10/rails-stuck-on-the-tracks/</link>
  <pubDate>Thu, 11 Oct 2012 03:02:17 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=824</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I have put much thought into this post, now that is not to say that the other posts were created without any thought.</p>
<p style="text-align:justify;">I am what I consider to be as a self taught programmer.  A couple of years ago I decided to learn <a class="zem_slink" title="Python (programming language)" href="http://www.python.org/" target="_blank" rel="homepage">Python</a> as I was working with <a class="zem_slink" title="ArcGIS" href="http://en.wikipedia.org/wiki/ArcGIS" target="_blank" rel="wikipedia">ArcGIS</a> on a regular basis and I wanted to automate some of the functions that I did on a regular basis.  That summer I studied and taught myself Python at least the part for creating geoprocessing scripts.  Before this I had no desire to learning programming let alone programming itself.  Soon I had found that it was fun to program.  I then created user interfaces to pass data between our application that ran on ESRi’s ArcGIS and our clients and third party softwares.  I was hooked.</p>
<p style="text-align:justify;">The company that I worked for then began to create a web based routing application that was written using Ruby on Rails.  I started to dabble with this application as I already had a pretty good grip on HTML and CSS.  It was fun designing and developing this application and helping create it from the ground up.  I started to learn Ruby on Rails.</p>
<p style="text-align:justify;">Not to insult those that created the initial application or those that have made it what it is but as I now know that the application is horrible.  As I was trying to learn <a class="zem_slink" title="Ruby On Rails" href="http://www.techopedia.com/definition/3534/ruby-on-rails-ror" target="_blank" rel="techopedia">RoR</a>, I would ask the developer questions about Ruby.  I will never forget the comment that this well known Rails developer told me; “I really do not know Ruby that well.”</p>
<p style="text-align:justify;">So going forward, I assumed that <a class="zem_slink" title="Learning Ruby" href="http://www.amazon.com/Learning-Ruby-Michael-Fitzgerald-Dr/dp/0596529864%3FSubscriptionId%3D0G81C5DAZ03ZR9WH9X82%26tag%3Dzemanta-20%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D0596529864" target="_blank" rel="amazon">learning Ruby</a> was not that important to be a Rails developer.  On the outside looking in or scraping the surface it truly is mostly HTML or as I have learned to love, <a class="zem_slink" title="Haml" href="http://haml-lang.com/" target="_blank" rel="homepage">HAML</a>.  I didn’t spend much time learning Ruby as the ‘expert’ Rails developer said he didn’t know Ruby that well so why should I?</p>
<p style="text-align:justify;">So off to the tutorial I went.  I was and am amazed at the amount of learning tools and tutorials that are out there for learning RoR be it free or paid stuff.  I originally looked at Django as I was coming from Python but I did not find as much material for learning Django as I did for RoR.</p>
<p style="text-align:justify;">Blogs, To do’s, pretend stores.....</p>
<p style="text-align:justify;">I spent quite a while going thru many of the available Rails tutorials that are available out there from <a class="zem_slink" title="Michael Hartl" href="http://michaelhartl.com/" target="_blank" rel="homepage">Michael Hartl</a>’s tutorial to creating pretend stores to <a class="zem_slink" title="Rickrolling" href="http://www.techopedia.com/definition/13185/rickrolling" target="_blank" rel="techopedia">Rick Rolling</a> it, I went thru the tutorials.  Over and over like a sponge I went thru these tutorials.  <a title="Rails for Zombies" href="http://railsforzombies.org/">Rails for Zombies</a>, and <a href="https://peepcode.com/">Peepcode</a> and anything that I could get my hands on, I did tutorials.</p>
<p style="text-align:justify;">But then, I found myself stuck on the Rails tracks not sure where I was going or how to get there.  I knew how to follow the step by step instructions but how was I to advance?  I tried to think of an application that I could create and tried to create that application.  I had no clue what the Hell I was doing and got really frustrated.</p>
<p style="text-align:justify;">It hit me; Rails, now what?  What do I do now?  What is the next step to becoming that super ninja Rails developer?  Now what?</p>
<p style="text-align:justify;">We have all been there.  It seems that most of the RoR people I know are ‘self taught’ with some having formal education for programming.  How do I make it from making applications using tutorials to becoming that full fledged Rails developer?</p>
<p style="text-align:justify;">That is in my opinion the missing link.  As I have brought aboard my 3rd Rails intern I have seen that they are most of the time in the same situation as I once was, asking themselves ‘now what’?</p>
<p style="text-align:justify;">Well, I am happy to announce that <a title="Rebel Outpost" href="http://rebel-outpost.com">Rebel Outpost</a> is going to be adding a ‘learning section’ to our website and we are going to be adding videos for a “Rails, now what?” screencast series.</p>
<p style="text-align:justify;">I will be adding a list of topics soon as well as our first screencast “BDD and the <a class="zem_slink" title="User story" href="http://en.wikipedia.org/wiki/User_story" target="_blank" rel="wikipedia">User Story</a>” to include the presentation slides.  These videos will hopefully help others in the ‘missing link’ stage of their Rails training.</p>
<p style="text-align:justify;">I will be blogging about the videos as we release them and if there are any topics that those of you feel should be included, by all means, email me your suggestions.</p>
<p style="text-align:justify;"></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>824</wp:post_id>
  <wp:post_date>2012-10-10 20:02:17</wp:post_date>
  <wp:post_date_gmt>2012-10-11 03:02:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-stuck-on-the-tracks</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:199;}s:2:"wp";a:1:{i:0;i:21;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/10/14/830/</link>
  <pubDate>Sun, 14 Oct 2012 19:35:01 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/10/14/830/</guid>
  <description/>
  <content:encoded><![CDATA[Great post on refactoring.  Thank you for this.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>830</wp:post_id>
  <wp:post_date>2012-10-14 12:35:01</wp:post_date>
  <wp:post_date_gmt>2012-10-14 19:35:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>830</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[283]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[15881214]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/10/14/831/</link>
  <pubDate>Sun, 14 Oct 2012 19:39:41 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/10/14/831/</guid>
  <description/>
  <content:encoded><![CDATA[Although, not entirely about Ruby on Rails, this is quite an inspirational post.  This goes out to all of you beginner Rubyist's with the message that it can be done]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>831</wp:post_id>
  <wp:post_date>2012-10-14 12:39:41</wp:post_date>
  <wp:post_date_gmt>2012-10-14 19:39:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>831</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[385]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[34033291]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/10/15/832/</link>
  <pubDate>Mon, 15 Oct 2012 18:54:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/10/15/832/</guid>
  <description/>
  <content:encoded><![CDATA[Presenters:  Something I really need to start using.  Nice read.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>832</wp:post_id>
  <wp:post_date>2012-10-15 11:54:09</wp:post_date>
  <wp:post_date_gmt>2012-10-15 18:54:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>832</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[53]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7522631c0abba0bca0885839d2bb9ed5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[39785881]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2f4fd7b81837c7009382b7f7145b2b66</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9c9ab5b50b4af9518b10ffa640d58b34</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_181aef8055586478912831e02c12585d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9e239271ad4534cb9633a90f109ad0ab</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4c2587c763cc4739808238521753a68b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9309e533aef2d8e6869c081b18de16d5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4be60a2d66fdc36e5d5119877c715b09</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8eec98412429542a8cfb9c7051444de9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b677fe9b9daae6e08b6a1e41f6b9e028</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_45ea15ebe953e42aecf55ba0d92b3d1c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8d49b5f609ac634a46ccd5032c4cc126</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0534c278fb7b4881bf7e98d22003ecc2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6386ec27bc6c306134079596ed82f141</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Hey Companies looking for direct hires......</title>
  <link>http://bob-roberts.net/2012/10/18/hey-companies-looking-for-direct-hires/</link>
  <pubDate>Thu, 18 Oct 2012 18:26:41 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=833</guid>
  <description/>
  <content:encoded><![CDATA[It amazes me how often I am contacted by recruiters looking for direct hire developers in cities that I would never move to.  I have blogged about remote workers before but I still do not see companies moving to hire them.

So, from the <a class="zem_slink" title="Harvard Business Review" href="http://www.hbr.org/" target="_blank" rel="homepage">Harvard Business Review</a>:

<a href="http://blogs.hbr.org/cs/2012/08/are_you_taking_your_people_for.html">Why Remote Workers Are More (Yes, More) Engaged</a>

If you cannot find direct hires in your city, well then look for remote workers.  It really is that simple!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>833</wp:post_id>
  <wp:post_date>2012-10-18 11:26:41</wp:post_date>
  <wp:post_date_gmt>2012-10-18 18:26:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hey-companies-looking-for-direct-hires</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="harvard-business-review"><![CDATA[Harvard Business Review]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Startup Weekend Phoenix Impression</title>
  <link>http://bob-roberts.net/2012/10/22/startup-weekend-phoenix-impression/</link>
  <pubDate>Mon, 22 Oct 2012 23:18:48 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=835</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">This weekend I attended my first ever <a class="zem_slink" title="Startup Weekend" href="http://www.startupweekend.org" target="_blank" rel="homepage">Startup Weekend</a>.  I am not sure what I expected it to be like but it was not what I expected at all.</p>
<p style="text-align:justify;">The weekend started off Friday night with 51 ideas being pitched for Startups.  It was amazing to hear so many different ideas for starting new companies.  After all of the pitches, all attendees we asked to vote for 3 ideas that they liked.  After this voting, ideas were selected based on the number of votes and we were left with I believe about a dozen selected ideas.  Then the frenzy began...</p>
<p style="text-align:justify;">Teams started to form around each of the selected ideas.  There was a definite shortage of developers and designers so I was approached by several teams to join.  I went with "Get that kid a job" which was pitched as a service to help students to identify career paths, prep them for interviews, assist with resumes', and how to keep a job.  Over the weekend we were "assisted" by mentors that had us pulled in several directions.  In the end we "simplified" our application down to providing week long internships for students at <a class="zem_slink" title="Business" href="http://en.wikipedia.org/wiki/Business" target="_blank" rel="wikipedia">businesses</a> that they were interested in.</p>
<p style="text-align:justify;">We did not win.</p>
<p style="text-align:justify;">What did I learn from the weekend?  Well, it was more of the process of identifying a real problem and providing a successful solution.  There was more <a class="zem_slink" title="Business plan" href="http://en.wikipedia.org/wiki/Business_plan" target="_blank" rel="wikipedia">business planning</a> and ideas than there was developing anything.  It was great.  Even that I own my own business, I have never participated in the whole business planning.  We had a small team of four and we all spent the weekend discussing what we wanted our new company to do and how to do it.  Even though we did not win, the four of us committed to continue working on the project.</p>
<p style="text-align:justify;">I have never had any desire to work for a startup and I have actually heard bad things about developers working for startups.  This weekend changed all of that.  Granted there are a plethora of ways to get funding, I think I have gotten bit by the startup bug.</p>
<p style="text-align:justify;">When building web applications for others, there is not any <a class="zem_slink" title="Passive income" href="http://en.wikipedia.org/wiki/Passive_income" target="_blank" rel="wikipedia">residual income</a> involved.  When building <a class="zem_slink" title="Open-source software" href="http://en.wikipedia.org/wiki/Open-source_software" target="_blank" rel="wikipedia">open sourced software</a>, there is no residual income or any income for that matter.  Time is money and my time is very valuable to me.  There were a couple of ideas that I really thought would be good money making ventures and I am talking with some about working on a sweat equity based project.  What do I have to lose?  Some of my spare time which as I said is very valuable to me.  What do I have to gain?  Partnering with smart people with great ideas and a revenue stream in the process.</p>
<p style="text-align:justify;">If you have never been to a startup weekend, you must go.  From working on something new to making new friends to networking, it was a great weekend.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>835</wp:post_id>
  <wp:post_date>2012-10-22 16:18:48</wp:post_date>
  <wp:post_date_gmt>2012-10-22 23:18:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>startup-weekend-phoenix-impression</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:208;}s:2:"wp";a:1:{i:0;i:23;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>663</wp:comment_id>
    <wp:comment_author><![CDATA[m3talsmith (@m3talsmith)]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>24.180.194.169</wp:comment_author_IP>
    <wp:comment_date>2012-10-22 19:28:41</wp:comment_date>
    <wp:comment_date_gmt>2012-10-23 02:28:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It's awesome that you got value out of this!

I do have a point of contention with regards to residual income and open source. There are valid business models to make this happen. I think what it boils down to is learning how to create those business models or use them if you've found them. this is definitely drives home a point towards attending a startup weekend.

Congrats on the new experience! It looks like you took it well.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/2454443729/b9dgbjd7x9b6b8tza6r6_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350959321.098763942718505859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>9442942</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1350962799</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350962799.8341209888458251953125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-23 02:28:41</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>664</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2012-10-22 20:26:23</wp:comment_date>
    <wp:comment_date_gmt>2012-10-23 03:26:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Dude, seriously I do NOT consider RH as a startup. I really do not know why I feel this way but it never felt like a startup to me.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>662</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1350962784</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350962784.7437388896942138671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-23 03:26:23</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>662</wp:comment_id>
    <wp:comment_author><![CDATA[m3talsmith (@m3talsmith)]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>24.180.194.169</wp:comment_author_IP>
    <wp:comment_date>2012-10-22 19:25:57</wp:comment_date>
    <wp:comment_date_gmt>2012-10-23 02:25:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Should I take it as a compliment that you don't consider RebelHold a startup?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/2454443729/b9dgbjd7x9b6b8tza6r6_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>9442942</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350959157.715694904327392578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1350962785</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1350962786.0055599212646484375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-10-23 02:25:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Lunch is on Michael</title>
  <link>http://bob-roberts.net/2012/10/24/lunch-is-on-michael/</link>
  <pubDate>Wed, 24 Oct 2012 20:24:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=840</guid>
  <description/>
  <content:encoded><![CDATA[Check out Michael's post about RebelHold and free lunches at http://m3talsmith.tumblr.com/post/17016846060/free-lunches]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>840</wp:post_id>
  <wp:post_date>2012-10-24 13:24:46</wp:post_date>
  <wp:post_date_gmt>2012-10-24 20:24:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lunch-is-on-michael</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:213;}s:2:"wp";a:1:{i:0;i:23;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Giving back to the community</title>
  <link>http://bob-roberts.net/2012/10/29/giving-back-to-the-community/</link>
  <pubDate>Mon, 29 Oct 2012 20:02:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=845</guid>
  <description/>
  <content:encoded><![CDATA[<div class="mceTemp"></div>
<p style="text-align:justify;">I pondered the title of this post for a few minutes today.  I almost went with "What have you done for me lately?" but decided not to.</p>
<p style="text-align:justify;">The point of this post is giving back to the community that has given us so much.  In my early days learning Ruby on Rails I got so much free help from so many people and resources.  I now earn my living using <a class="zem_slink" title="Open-source software" href="http://en.wikipedia.org/wiki/Open-source_software" target="_blank" rel="wikipedia">open sourced software</a> that does not cost me a penny.  There are a zillion free sites for learning <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" target="_blank" rel="homepage">RoR</a> as well as paid sites.  The point is, we all should return the favor and give back to the community.</p>
<p style="text-align:justify;">One of the biggest Rails companies out there is <a class="zem_slink" title="thoughtbot" href="http://thoughtbot.com" target="_blank" rel="homepage">Thoughtbot</a>.  We all use free open sourced tools that they created like <a class="zem_slink" title="Factory Girl" href="http://www.rottentomatoes.com/m/factory_girl" target="_blank" rel="rottentomatoes">Factory Girl</a>, Paperclip, Capybara Webclip, etc..  They could very easily charge for these tools and we would all happily pay for them.  How do they do it?  Taken from the <a href="http://thoughtbot.com/jobs/">Thoughtbot website</a>:</p>

<blockquote>We invest Fridays in ourselves

Our fundamental expectation for ourselves is delivering excellent work for clients Monday-Thursday. We use Fridays for personal development, contributing to <a class="zem_slink" title="Open Source" href="http://www.wikinvest.com/concept/Open_Source" target="_blank" rel="wikinvest">open source</a> projects, mentoring apprentices, sharing lessons learned on the blog, and making internal tools to make our jobs easier and more fun</blockquote>
<p style="text-align:justify;">Now tell me that these guys do not kick ass!!!  Now they are not the only ones that are giving back.  Go count all of the <a class="zem_slink" title="RubyGems" href="http://rubygems.org" target="_blank" rel="homepage">Ruby gems</a> out there!!!</p>
<p style="text-align:justify;">So what is <a href="http://rebel-outpost.com">Rebel Outpost</a> doing to give back to the community?  We have the <a href="http://railscrm.com/">RailsCRM</a> which is getting close to alpha.  It can be used already if you want a no fluff, just the right stuff <a class="zem_slink" title="Customer relationship management" href="http://en.wikipedia.org/wiki/Customer_relationship_management" target="_blank" rel="wikipedia">Customer Relations Management</a> (CRM) system.  Check it out and if you would like to make changes, go ahead and fork it, change it, and submit a pull request.  If you have ideas or suggestions, please email me.</p>
<p style="text-align:justify;">Last week I release <a href="https://github.com/rebel-outpost/rebel-outpost-foundation">Rebel Outpost Foundation</a> which is a foundation starter app.  We are constantly making new rails applications so this foundation is to be used as our starting point.  This is also designed to be bare bones with not styling but comes loaded with all of our favorites like Mongodb, Mongoid, Devise, SASS, <a class="zem_slink" title="Haml" href="http://haml-lang.com/" target="_blank" rel="homepage">HAML</a>, Pry and more.  There is (hopefully) a pretty good explanation in the readme file for setting it up and deploying it on <a class="zem_slink" title="Heroku" href="http://www.heroku.com/" target="_blank" rel="homepage">Heroku</a>.  If you try it out and find any issues, again, please let me  know.</p>
<p style="text-align:justify;">So, what else?  Well, I am really trying to balance everything so that I can start putting out my "Rails, now what?" screencasts and I think that I would like to create an easy to use RoR Content Management System (CMS) in the not so distant future.</p>
<p style="text-align:justify;">So remember the community that gives you so much and show a little gratitude by giving back to it.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>845</wp:post_id>
  <wp:post_date>2012-10-29 13:02:59</wp:post_date>
  <wp:post_date_gmt>2012-10-29 20:02:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>giving-back-to-the-community</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="factory-girl"><![CDATA[Factory Girl]]></category>
  <category domain="post_tag" nicename="heroku"><![CDATA[Heroku]]></category>
  <category domain="post_tag" nicename="mongodb"><![CDATA[MongoDB]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:217;}s:2:"wp";a:1:{i:0;i:23;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>686</wp:comment_id>
    <wp:comment_author><![CDATA[Andrew K Kirk]]></wp:comment_author>
    <wp:comment_author_email>andrew.k.kirk+bobroberts@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.andrewkkirk.com/2012/10/3-tips-help-learning-to-program/</wp:comment_author_url>
    <wp:comment_author_IP>75.85.53.62</wp:comment_author_IP>
    <wp:comment_date>2012-11-09 16:20:48</wp:comment_date>
    <wp:comment_date_gmt>2012-11-09 23:20:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Glad to hear you continue to giving back. I'm found (in my limited experience), the Ruby community to be extremely helpful! 
It's enabled me to go from the zero to off the ground and running with Ruby. Without the community it wouldn't have been possible.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>true</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352503248.6678230762481689453125;s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352508971.56554889678955078125;s:7:"message";s:44:"broberts65 reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user</wp:meta_key>
      <wp:meta_value>broberts65</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1352508979</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352508979.57161808013916015625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-11-09 23:20:48</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>726</wp:comment_id>
    <wp:comment_author><![CDATA[How to get help while developing in RoR? &laquo; My Journy to Become a Ruby on Rails Developer]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://igotrailed.wordpress.com/2012/12/29/how-to-get-help-while-developing-in-ror/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.114.3</wp:comment_author_IP>
    <wp:comment_date>2012-12-29 11:34:08</wp:comment_date>
    <wp:comment_date_gmt>2012-12-29 18:34:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Giving back to the community (bob-roberts.net) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1356806049.5628740787506103515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1356815516</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1356815516.269812107086181640625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-29 18:34:08</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/10/29/850/</link>
  <pubDate>Mon, 29 Oct 2012 22:15:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/10/29/850/</guid>
  <description/>
  <content:encoded><![CDATA[Nice tute for those using Cucumber]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>850</wp:post_id>
  <wp:post_date>2012-10-29 15:15:36</wp:post_date>
  <wp:post_date_gmt>2012-10-29 22:15:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>850</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[172]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40364483]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What's new</title>
  <link>http://bob-roberts.net/2012/11/22/whats-new/</link>
  <pubDate>Thu, 22 Nov 2012 22:57:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=852</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Wow, I have really been too busy to find time to post anything lately.  Lots going on the last couple of weeks.</p>
<p style="text-align:justify;">We just started a new project that it totally cutting edge and I am so excited to be a part of it.  Intern #2 Steve Tong, is now fulltime on the new project as a Junior Developer.  Truth be said, Steve Tong was not mush of an intern as he was already passed that point skill wise.  Something that Steve T. displayed that impressed me is his ability to think outside the box.  I know that is a horrible cliche but it is what distinguishes a developer from a programmer.  The new gig is mostly a concept so we are able to design / create it as we feel fit, and that is what requires a developer that has ideas and can envision something great.  For now the who what and where obviously will remain a secret but I guarantee that I will be blogging about it as soon as it goes live.</p>
<p style="text-align:justify;">So what makes a great intern?  Simply put, motivation.  It does not matter how much or how little you know or even at times, how fast you can learn it.  What does matter is the effort and the motivation to make it as a developer.  I recently met a junior developer that is mostly doing front end stuff and has expressed the desire to become a Rails developer.  What impressed me already is that he learned <a class="zem_slink" title="Git (software)" href="http://git-scm.com" target="_blank" rel="homepage">Git</a> over the weekend.  He was using some crazy <a class="zem_slink" title="Graphical user interface" href="http://en.wikipedia.org/wiki/Graphical_user_interface" target="_blank" rel="wikipedia">GUI</a> for accessing Github and I gave him a hard time about it.  So I guess he showed me!!</p>
<p style="text-align:justify;">Some cool things that I have learned about recently......</p>

<blockquote>
<h3>Select2 for rails asset pipeline</h3>
<a href="https://github.com/ivaynberg/select2">Select2</a> is a <a class="zem_slink" title="JQuery" href="http://jquery.com/" target="_blank" rel="homepage">jQuery</a> based replacement for select boxes. It supports searching, remote data sets, and infinite scrolling of results.

The <code>select2-rails</code> gem integrates the <code>Select2</code> jQuery plugin with the Rails asset pipeline.

Awesome and so easy to use for kick ass drop downs.  A must have in your rails toolshed!
<h3>
RABL for Rails</h3>
RABL (Ruby API Builder Language) is a ruby templating system for rendering resources in different format (<a class="zem_slink" title="JSON" href="http://json.org/" target="_blank" rel="homepage">JSON</a>, <a class="zem_slink" title="XML" href="http://en.wikipedia.org/wiki/XML" target="_blank" rel="wikipedia">XML</a>, <a class="zem_slink" title="BSON" href="http://bsonspec.org" target="_blank" rel="homepage">BSON</a>, ...). You can find documentation <a href="http://github.com/nesquena/rabl">here</a>.

rabl-rails is <strong>faster</strong> and uses <strong>less memory</strong> than the standard rabl gem while letting you access the same features. There are some slight changes to do on your templates to get this gem to work but it should't take you more than 5 minutes.

rabl-rails only targets <strong>Rails 3+ application</strong> and is compatible with mri 1.9.3, <a class="zem_slink" title="JRuby" href="http://www.jruby.org/" target="_blank" rel="homepage">jRuby</a> and rubinius.

If you use a lot of json, this is the gem for you!!!
<h3>
Easy git deployment</h3>
Straightforward, <a href="http://heroku.com/">Heroku</a>-style, push-based deployment. Your deploys will look like this:
<pre><code>$ git push production master
</code></pre>
To get started, install the "git-deploy" gem.
<pre><code>$ gem install git-deploy</code></pre>
<p style="text-align:justify;">Screw using all the hard stuff.  With this I can now deploy to staging or production just as easily as pushing to me fork.</p>
<p style="text-align:justify;"></p>

<h3 style="text-align:justify;">Rails ERD</h3>
<a href="http://rails-erd.rubyforge.org/" target="_blank"><strong>Rails ERD</strong></a> is a plugin for <a href="http://rubyonrails.org/">Ruby on Rails</a> that generates diagrams based on your <a class="zem_slink" title="Active record pattern" href="http://en.wikipedia.org/wiki/Active_record_pattern" target="_blank" rel="wikipedia">Active Record</a> models. Such an <strong>entity-relationship diagram</strong> gives an overview of your models and how they are associated. Browse through <a href="http://rails-erd.rubyforge.org/gallery.html">example diagrams</a>, or read the <a href="http://rails-erd.rubyforge.org/install.html">installation instructions</a>.</blockquote>
Well, that is about it for this post.  Enjoy!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>852</wp:post_id>
  <wp:post_date>2012-11-22 15:57:09</wp:post_date>
  <wp:post_date_gmt>2012-11-22 22:57:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>whats-new</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="active-record-pattern"><![CDATA[Active record pattern]]></category>
  <category domain="post_tag" nicename="git"><![CDATA[Git]]></category>
  <category domain="post_tag" nicename="github"><![CDATA[Github]]></category>
  <category domain="post_tag" nicename="jquery"><![CDATA[JQuery]]></category>
  <category domain="post_tag" nicename="json"><![CDATA[JSON]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:223;}s:2:"wp";a:1:{i:0;i:22;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ubuntu 12.10 Server Setup for Ruby on Rails, Passenger, Nginx</title>
  <link>http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/</link>
  <pubDate>Wed, 05 Dec 2012 23:53:38 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=858</guid>
  <description/>
  <content:encoded><![CDATA[So we all know what a pain in the ass it is to setup a new server for Ruby on Rails. This is why I love to use Heroku for hosting. There are times that this is not an option so we have to use a hosted linux server. For this walk thru I used Rackspace with <a class="zem_slink" title="List of Ubuntu releases" href="http://www.ubuntu.com/" target="_blank" rel="homepage">Ubuntu 12.04</a> for hosting. This is about as fully detailed as possible.
<h1>Server Setup</h1>
<ul>
	<li>Create new server on Rackspace</li>
	<li>Login to new server
<ul>
	<li>ssh root@IPaddress (you can also use the domain name if you have the DNS setup already)</li>
	<li>accept the RSA key</li>
	<li>use the password provided at server setup</li>
	<li>change the password that was provided at setup<span style="color:#000000;"><span style="font-family:ArialMT, sans-serif;"><span style="font-size:medium;">:</span></span></span>
<ul>
	<li>$ passwd</li>
</ul>
</li>
</ul>
</li>
	<li>Create a new user for deployment
<ul>
	<li>$ sudo adduser "username"
<ul>
	<li>accept the defaults</li>
</ul>
</li>
	<li>add new user to staff and sudo groups:
<ul>
	<li>$ usermod -a -G staff "username”</li>
	<li>$ usermod -a -G sudo "username”</li>
</ul>
</li>
	<li>switch user
<ul>
	<li>$ su "username"</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
	<li>Update and Install dependencies:</li>
</ul>
https://gist.github.com/4220718
<ul>
	<li>To make our live easier, lets go ahead and add our ssh keys to the new server so we do not have to sign in every time (this is done from your machine and not on the server):</li>
</ul>
<p style="padding-left:60px;">$ cat ~/.ssh/id_rsa.pub | ssh root@IPaddress "cat &gt;&gt; ~/.ssh/authorized_keys"</p>

<h1>Install Ruby</h1>
Install your Ruby (obviously you use the version that you want. At this point many people use a Ruby version management like RVM or RBENV. As these servers are normally setup for just on application we will use the system version of Ruby):

https://gist.github.com/4220698
<h1>Passenger and Nginx</h1>
First let's install Passenger and Nqinx:

https://gist.github.com/4220722

Setup script to control Nginx:

https://gist.github.com/4220728

You should be able to control Nginx. To start and stop server:

https://gist.github.com/4220752
<ul>
	<li>Go to your IPaddress (or domain name) and you should see "Welcome to nginx"</li>
	<li>After installing nginx, you should see the following message in the terminal:</li>
</ul>
<a href="http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/screen-shot-2012-11-22-at-5-42-34-pm-2/" rel="attachment wp-att-870"><img class="size-medium wp-image-870 aligncenter" alt="Screen Shot 2012-11-22 at 5.42.34 PM" src="http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-22-at-5-42-34-pm.png?w=300" height="165" width="300" /></a>
<ul>
	<li>Setup the nginx.conf for our server
<ul>
	<li>edit the /opt/nginx/conf/nginx.conf</li>
	<li>add the IPaddress to the server name (You may use the domain name if you have one)</li>
	<li>add the path to your apps public directory to the root</li>
	<li>add the user to the nginx.conf
<ul>
	<li>user “username” staff;</li>
</ul>
</li>
	<li>if necessary, set the rails environment using rails.env</li>
</ul>
</li>
</ul>
<p style="text-align:center;"> <a href="http://bob-roberts.net/2012/12/05/ubuntu-12-10-server-setup-for-ruby-on-rails/screen-shot-2012-11-23-at-1-16-58-pm-2/" rel="attachment wp-att-871"><img class="alignnone size-medium wp-image-871" alt="Screen Shot 2012-11-23 at 1.16.58 PM" src="http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-23-at-1-16-58-pm.png?w=300" height="88" width="300" /></a></p>

<h1>Database Setup</h1>
At this point there are a lot of different ways to go. The database needs to be setup. There are multiple options for databases such as MySQL, PostgreSQL, and Mongodb.
<h3>MySQL</h3>
https://gist.github.com/4220778
<h1>Deploying Rails</h1>
There are also several options for deploying your Rails application. The option that I am going to use is a nice little gem called <a href="https://github.com/mislav/git-deploy">git-deploy</a>.

After following the directions for git-deploy:
<ul>
	<li>ssh into the server</li>
	<li>cd into you application</li>
	<li>check your Rails environment$ echo $RAILS_ENV
<ul>
	<li>if it needs to be set:
<ul>
	<li>add "export RAILS_ENV=staging" to the the ~/.bashrc</li>
	<li>$ source ~/.bashrc</li>
</ul>
</li>
</ul>
</li>
	<li>run bundle</li>
	<li>rake db:create</li>
	<li>rake db:schema:load (if needed)</li>
	<li>rake db:migrate</li>
	<li>touch tmp/restart.txt</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>858</wp:post_id>
  <wp:post_date>2012-12-05 16:53:38</wp:post_date>
  <wp:post_date_gmt>2012-12-05 23:53:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ubuntu-12-10-server-setup-for-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="mysql"><![CDATA[MySQL]]></category>
  <category domain="post_tag" nicename="nginx"><![CDATA[Nginx]]></category>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="rackspace"><![CDATA[Rackspace]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:223;}s:2:"wp";a:1:{i:0;i:22;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:86:"http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-22-at-5-42-34-pm.png";s:6:"images";a:2:{s:86:"http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-22-at-5-42-34-pm.png";a:6:{s:8:"file_url";s:86:"http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-22-at-5-42-34-pm.png";s:5:"width";i:650;s:6:"height";i:358;s:4:"type";s:5:"image";s:4:"area";i:232700;s:9:"file_path";b:0;}s:86:"http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-23-at-1-16-58-pm.png";a:6:{s:8:"file_url";s:86:"http://bobspython.files.wordpress.com/2012/12/screen-shot-2012-11-23-at-1-16-58-pm.png";s:5:"width";i:525;s:6:"height";i:154;s:4:"type";s:5:"image";s:4:"area";i:80850;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:2;s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-12-06 00:14:41";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>707</wp:comment_id>
    <wp:comment_author><![CDATA[Jim B]]></wp:comment_author>
    <wp:comment_author_email>jimbrayton@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>174.63.72.156</wp:comment_author_IP>
    <wp:comment_date>2012-12-08 20:25:33</wp:comment_date>
    <wp:comment_date_gmt>2012-12-09 03:25:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is an incredibly useful post.  I was setting up a VirtualBox/Ubuntu 12.04 image for local development and this saved me a lot of time.  Thanks for writing this up.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355023533.9986400604248046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355023747</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355023747.2885448932647705078125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-09 03:25:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>708</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2012-12-08 20:29:41</wp:comment_date>
    <wp:comment_date_gmt>2012-12-09 03:29:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Glad I could help.  Just seems to me that it should be easier to do!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>707</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355023781</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355023781.77328205108642578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-09 03:29:41</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>705</wp:comment_id>
    <wp:comment_author><![CDATA[Jerry]]></wp:comment_author>
    <wp:comment_author_email>ja2038@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/j2038</wp:comment_author_url>
    <wp:comment_author_IP>98.177.196.183</wp:comment_author_IP>
    <wp:comment_date>2012-12-05 21:06:45</wp:comment_date>
    <wp:comment_date_gmt>2012-12-06 04:06:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So I haven’t done this in most of a decade, but I have done this before with various LAMP servers.

What I don’t see in this that A) I used to see mentioned all the time, and B) never see really discussed in terms of cloud servers Amazon to Rackspace to even things like Google app engine, heroku, engine yard, is what your security model is.

What are you doing on the firewall?
How are you securing nginx?
What does Ruby/Rails need to secure that application?

How often, how do you, get updates to ubuntu, rails, ruby, nginx, etc.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354766805.1486709117889404296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"j2038";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354810128</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354810129.28765010833740234375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-12-06 04:06:45</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>824</wp:comment_id>
    <wp:comment_author><![CDATA[Ubuntu 12.10 Server Setup for Ruby on Rails, Passenger, Nginx | Selva&#039;s Blog]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://selvaonrails.wordpress.com/2013/03/11/ubuntu-12-10-server-setup-for-ruby-on-rails-passenger-nginx/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.8.82</wp:comment_author_IP>
    <wp:comment_date>2013-03-10 23:52:33</wp:comment_date>
    <wp:comment_date_gmt>2013-03-11 06:52:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Ubuntu 12.10 Server Setup for Ruby on Rails, Passenger, Nginx. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362984836</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362984836.5140140056610107421875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362984754.2354509830474853515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-11 06:52:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/12/05/868/</link>
  <pubDate>Wed, 05 Dec 2012 22:48:20 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/12/05/868/</guid>
  <description/>
  <content:encoded><![CDATA[Absolutely Awesome!!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>868</wp:post_id>
  <wp:post_date>2012-12-05 15:48:20</wp:post_date>
  <wp:post_date_gmt>2012-12-05 22:48:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>868</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[529]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40611007]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/12/17/888/</link>
  <pubDate>Mon, 17 Dec 2012 15:37:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/12/17/888/</guid>
  <description/>
  <content:encoded><![CDATA[A great write up on setting up a production Rails server]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>888</wp:post_id>
  <wp:post_date>2012-12-17 08:37:12</wp:post_date>
  <wp:post_date_gmt>2012-12-17 15:37:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>888</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[140]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[7306922]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f69022fa7e98e57000b2dcb496abf823</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f4b3c1728d5d8c934e3956beeb197dde</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ubuntu 12.04, Ruby, Rails, Nginx, Unicorn and git-deploy</title>
  <link>http://bob-roberts.net/2012/12/19/ubuntu-12-04-ruby-rails-nginx-unicorn-and-git-deploy/</link>
  <pubDate>Wed, 19 Dec 2012 18:43:03 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=889</guid>
  <description/>
  <content:encoded><![CDATA[I recently put together a sort of setup script for setting up a Rails production server:

https://gist.github.com/4330509]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>889</wp:post_id>
  <wp:post_date>2012-12-19 11:43:03</wp:post_date>
  <wp:post_date_gmt>2012-12-19 18:43:03</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ubuntu-12-04-ruby-rails-nginx-unicorn-and-git-deploy</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:229;}s:2:"wp";a:1:{i:0;i:22;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Testing with Rails Select2</title>
  <link>http://bob-roberts.net/2012/12/19/testing-with-rails-select2/</link>
  <pubDate>Wed, 19 Dec 2012 18:53:32 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=893</guid>
  <description/>
  <content:encoded><![CDATA[Lately we have been incorporating <a href="https://github.com/argerim/select2-rails">select2-rails</a> into our applications.  I cannot say enough how much I love this tool and its ease of use.

That being said, we had had issues with testing and select2-rails.  So Steve Tong of Rebel-Outpost spent some time and found a small script to use for testing it.

https://gist.github.com/4339329

The only issue with this is that you can only have one option in the select2.

If anybody finds a better way, please let us know.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>893</wp:post_id>
  <wp:post_date>2012-12-19 11:53:32</wp:post_date>
  <wp:post_date_gmt>2012-12-19 18:53:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>testing-with-rails-select2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="frameworks"><![CDATA[Frameworks]]></category>
  <category domain="post_tag" nicename="heroku"><![CDATA[Heroku]]></category>
  <category domain="post_tag" nicename="languages"><![CDATA[Languages]]></category>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="steve-tong"><![CDATA[Steve Tong]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-12-19 18:53:32";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Another year gone by...</title>
  <link>http://bob-roberts.net/2012/12/19/another-year-gone-by/</link>
  <pubDate>Thu, 20 Dec 2012 03:58:34 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=898</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Wow, it is so hard to believe that I have been living the life of a freelance Rails developer for the entire year of 2012.  What a year it has been.</p>
<p style="text-align:justify;">I have learned so much this year and expect to learn more next year.  I know that it is early for new years resolutions but I plan on being more active in the <a class="zem_slink" title="Ruby (programming language)" href="http://www.ruby-lang.org/" target="_blank" rel="homepage">Ruby</a> community next year.  I will finally get off my ass and start creating screencasts and doing local presentations for what I call "Rails, now what?"</p>
<p style="text-align:justify;">I know that all of us in the Ruby community owe so much to others that have come before us.  Many are those that are unnamed and others we all know of.  No matter how much or how little, we are all part of the community and are all responsible for growing this community.</p>
<p style="text-align:justify;">Let's all try to teach other more next year.  Let's all try to stay away from the Rails community drama that makes all look like arrogant assholes.  Let's all remember what it was like when we were just starting out and how much we appreciated help from others.  Next year let's all of us take the time to teach one other person about Ruby.  There are people that are interested in becoming interns.  Find them, teach them and set them free.  The best <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" target="_blank" rel="homepage">RoR</a> programmer you will ever hire is one that you yourself have trained.  Let's all of us commit to giving at least one presentation this upcoming year.</p>
<p style="text-align:justify;">Remember people, that we are what we are because somebody helped us out once upon a time.</p>
<p style="text-align:justify;">Here is to a great 2013 and lets all make Ruby on Rails the best that we can!!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>898</wp:post_id>
  <wp:post_date>2012-12-19 20:58:34</wp:post_date>
  <wp:post_date_gmt>2012-12-20 03:58:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>another-year-gone-by</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="web-application"><![CDATA[Web application]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:8:"15714693";s:7:"blog_id";s:8:"15193052";s:9:"mod_stamp";s:19:"2012-12-20 03:58:34";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2012/12/21/912/</link>
  <pubDate>Fri, 21 Dec 2012 22:10:43 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2012/12/21/912/</guid>
  <description/>
  <content:encoded><![CDATA[Very interesting read........]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>912</wp:post_id>
  <wp:post_date>2012-12-21 15:10:43</wp:post_date>
  <wp:post_date_gmt>2012-12-21 22:10:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>912</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[1776]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[12979675]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Plans for 2013</title>
  <link>http://bob-roberts.net/2013/01/07/plans-for-2013/</link>
  <pubDate>Tue, 08 Jan 2013 00:51:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=913</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Well another year has gone by.  Time now for all of our plans that we sillily (I guess that is a rela word) call resolutions!!</p>
<p style="text-align:justify;">Last year was big for me.  First I was made partner with RebelHold, and then created my own Rebel Outpost, LLC.  I had two successful interns which are still working with us.  I spent the majority of the year working on a behemoth project called Bulletin Builder for the Greek Orthodox church.  I finally passed the reins for Bulletin Builder off to Steve Young to see to completion.  I worked on another short project as well as some in house open source stuff.</p>
<p style="text-align:justify;"><a href="http://railscrm.com">RailsCRM</a> is still in the works with a recent Alpha release.  I am trying to add some more functionality to it without bloating it.  We are using it full time now for internal leads and finding a few changes needed here and there.  I have even been thinking about forking it and going full blown with it to offer SaaS to compete with the likes of Salesforce.</p>
<p style="text-align:justify;">I have additionally been working on perfecting a script to create the perfect Rails production server.  I started to use Vagrant for testing my server setup.  I wish the world survived just on Heroku but it unfortunately does not.  So for the rest I am trying to come up with a better way to do it.</p>
<p style="text-align:justify;">OK, so 2013.  I have big plans for Rebel Outpost this year.  I hope to make it a breeding zone for Rails developers as plan on taking on more interns.  I also have been talking to a friend about some more serious Rails incubation.  I find myself with a bit more time at the beginning of the year and have focused on getting all caught up and ready for tax time.  Now, I should have the time to finally get going with my "Rails, now what?" screencasts that I have been talking about since last year.  I intend to be a bigger part in the local Rails community and hope to get others to join me.</p>
<p style="text-align:justify;">I want to continue to work on free and open source applications and might even think about building some kind of money making application as well.</p>
<p style="text-align:justify;">So that is it.  Open source, teaching interns, and making Rebel Outpost a kick ass place to work.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>913</wp:post_id>
  <wp:post_date>2013-01-07 17:51:29</wp:post_date>
  <wp:post_date_gmt>2013-01-08 00:51:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>plans-for-2013</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="heroku"><![CDATA[Heroku]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="software-as-a-service"><![CDATA[Software as a service]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rebel Outpost and Open Source</title>
  <link>http://bob-roberts.net/2013/01/21/rebel-outpost-and-open-source/</link>
  <pubDate>Tue, 22 Jan 2013 01:10:19 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=921</guid>
  <description/>
  <content:encoded><![CDATA[So I blogged recently about giving back to the community.  Well we are.  When we are not working on Ruby on Rails client work, we are working on the <a href="http://railscrm.com">RailsCRM</a> which has been out for a bit in a more or less alpha state but is usable for anybody that wants it.

Next we have @the_tong_song who has been working on a sharable calendar built on Rails and @rickcarlino is going to be rolling out his goal setter application.

We will be adding these to our <a title="Ruby on Rails Web Development" href="http://rebel-outpost.com">Rebel Outpost</a> website very soon.

My future plans for <a title="Phoenix AZ Web Development" href="http://rebel-outpost.com">Rebel Outpost</a> is to dedicate 20% of our time to either open source or internal projects.  I hope that everybody makes that a goal for themselves as well.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>921</wp:post_id>
  <wp:post_date>2013-01-21 18:10:19</wp:post_date>
  <wp:post_date_gmt>2013-01-22 01:10:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rebel-outpost-and-open-source</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:234;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>reblog of Don't Call Yourself A Programmer, And Other Career Advice</title>
  <link>http://bob-roberts.net/2013/01/23/reblog-of-dont-call-yourself-a-programmer-and-other-career-advice/</link>
  <pubDate>Wed, 23 Jan 2013 20:26:17 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=929</guid>
  <description/>
  <content:encoded><![CDATA[Fantastic article by Patrick, the founder of Kalzumeus Software:

http://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>929</wp:post_id>
  <wp:post_date>2013-01-23 13:26:17</wp:post_date>
  <wp:post_date_gmt>2013-01-23 20:26:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>reblog-of-dont-call-yourself-a-programmer-and-other-career-advice</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ff9bf8d52e0b06d7893fd6bb5ab362c4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_81cacf30eb4459337047738b0883e7ea</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_96aecf2a5a4e3703562e1ff15b4f8263</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_56016df7a0a1ac9db435875a9e310f41</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e1de9d2c101e949a130a9e7309e3dab6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_05587f892947a96c9adc728f17660a18</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ab249e949001c4f1c451792efef8db87</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7eab3654f4c4f60969481eb556d570d3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_da81398cf5a815fb4dc65cd25cff5848</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>To Freelance or Not To Freelance, that is my question</title>
  <link>http://bob-roberts.net/2013/02/06/to-freelance-or-not-to-freelance-that-is-my-question/</link>
  <pubDate>Wed, 06 Feb 2013 19:20:04 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=932</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Recently I have been seriously questioning my desire to be a Rails freelancer.  I love <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" target="_blank" rel="homepage">RoR</a> and coding and all that goes with being a freelancer except for the continuos struggle to find new clients.</p>
<p style="text-align:justify;">That struggle has been the core of my recent frustrations and the reason for questioning <a class="zem_slink" title="Freelancer" href="http://en.wikipedia.org/wiki/Freelancer" target="_blank" rel="wikipedia">freelancing</a>.  For those of you that are considering becoming a freelancer, do not get me wrong, it is a great life and I would never try to deter anybody from becoming a freelance developer.  I think that the one-person freelance operation is great but I tried to take it further.</p>
<p style="text-align:justify;">What are the reasons that people prefer to freelance as opposed to working for the man?  Two main reasons in my opinion; higher pay and not working in an office.  What would make a developer want to work for a company?  In my opinion again, I feel it is for security and benefits.</p>
<p style="text-align:justify;">That is what I wanted to offer the guys that work with me; benefits and security.</p>
<p style="text-align:justify;">I have learned an amazingly lot about running a business mostly the hard way after my first year.  Employees simply will cost more money and by employees I mean W-2 employees.  Contractors cost less for a business.  So I struggled with that; my desire to help out those working with me and the increased cost to do so.</p>
<p style="text-align:justify;">Ultimately, I recently failed a couple of those guys.  I just could not find any work for them.  What leads I had were mostly people with great ideas and no money.  Others seemed to prefer the lost cost development available overseas.  I looked on the various freelance sites and boards but all there are there are jobs that pay less than if I went to work in a fast food restaurant.</p>
<p style="text-align:justify;">I then thought about RoR <a class="zem_slink" title="Telecommuting" href="http://en.wikipedia.org/wiki/Telecommuting" target="_blank" rel="wikipedia">telecommute</a> jobs.  There are not many of those out there.  I guess it is that companies feel that they cannot trust a person to work remotely.  Maybe they hate working in an office and figure that everybody should have to be miserable too.  I know that some big name developers have repeatedly commented on the lack of telecommute jobs.  Hey I might want to work for a Bay Area company but I sure as shit do not want to work there.  I got a headhunter email from Boston asking if I was interested in moving.  Why the hell would I leave my beautiful Phoenix weather to go play in the cold and snow?</p>
<p style="text-align:justify;">So I am left with the idea of local jobs.  Punching the time clock (do they still have time clocks anymore) and sitting in an office.  Would I rather do that than be a freelancer? Well, no but the other option is hoping to get new business.  Who know, maybe tomorrow the phone will ring with a great big shiny new application that needs to be built.</p>
<p style="text-align:justify;">Bottom line, do what makes you happy if you can.  Maybe my feelings are just those of somebody in their 40's and maybe I would fell differently if I were in my 20's.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>932</wp:post_id>
  <wp:post_date>2013-02-06 12:20:04</wp:post_date>
  <wp:post_date_gmt>2013-02-06 19:20:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>to-freelance-or-not-to-freelance-that-is-my-question</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>782</wp:comment_id>
    <wp:comment_author><![CDATA[Jerry]]></wp:comment_author>
    <wp:comment_author_email>jerry@mailinator.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>72.222.211.162</wp:comment_author_IP>
    <wp:comment_date>2013-02-06 13:27:57</wp:comment_date>
    <wp:comment_date_gmt>2013-02-06 20:27:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I hear ya. I'd really like to quiz the folks at Hacker News that are all about freelancing and get some demographics about their various gigs. What are they doing? Are their other developers on the project? How many hours per week for each client are they putting in? How many simultaneous clients are they working with? How did they get leads? How much non-development time are they spending?

My experience consulting in C, C++, and at times SmallTalk and LISP, is that most projects I work on last months, and and clients require a full time focus. So it creates this poor cycle of feast or famine. 

So I've been curious just what tasks these new breeds of freelancers are taking on, or what is it about web applications in Ruby that allows a freelancer to work for a client for a few days, or week or two, and have actually accomplished much.

I can understand working for a small company of n freelancers with a paid salestaff lining up new work, but hey, then that's a small consulting company, not a freelancing opportunity. And of course, even the small consulting companies are certainly not guaranteed to succeed.

And while I hate to blame it on Phoenix, I think being a freelancer or having a small consulting company, especially a RoR practice would work out 1000x easier based in San Francisco, Seattle, New York, Boston, London, Tokyo, ... where there is just tons more demand for it, and where the clients are thick enough that one is likely to  meet another at a Starbucks or meeting and drop your name.

I think my goal to learning RoR, etc., is not to be a freelancer, always dependent on finding someone else with an idea and a website, but to use freelancing (or a 9 to 5) job to pay for my time in the downtimes or evenings to develop my own sites.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360182670.5832359790802001953125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360182477.954245090484619140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360182670</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-06 20:27:57</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>783</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-02-06 13:35:56</wp:comment_date>
    <wp:comment_date_gmt>2013-02-06 20:35:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes there is a very fine line between freelancer and business owner.  Like two freelancers working together on a project.  Are they freelancers or a company.  One freelancer with a sales staff; is that a company?  Fine line indeed.

Interestingly, you mentioned something that I never thought of and have not seen written about, using paid sales staff.

I do agree with you that the opportunities is some cities are going to be less abundant than in other cities.  The trick is to get oneself known in other cities.

I appreciate you comment.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360182956</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360182957.008224010467529296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-06 20:35:56</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>784</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Allen Christenson II]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>24.180.194.169</wp:comment_author_IP>
    <wp:comment_date>2013-02-06 14:57:04</wp:comment_date>
    <wp:comment_date_gmt>2013-02-06 21:57:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[@bob, the paid sales staff is something we're heading towards. That's why we give a 10% commission for every paying lead already.

I think @jerry is partially right in that Phoenix is not thick as fleas when it comes to work like this. That's why Integrum is flying across the country for work. I can see more air based commuting in the future for other firms.

As far as freelancing goes, I'm not a freelancer with RebelHold. I consider myself a member and co-owner of a new breed of worker owned businesses. It's been rough this winter, but nothing that can't be toughed out.

I think one mistake we've made is spending too much time in client work and not enough time honing our marketing. We've also not been focusing enough on building our own product. You know that's my current kick so I won't rant on about it. But without less of a dependency on any particular client, the feast and famine cycle will continue.

Keep the faith. Build, build, build.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360187825.05539608001708984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value/>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>536911325</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360187897</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360187897.1443779468536376953125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-06 21:57:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>785</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Allen Christenson II]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>24.180.194.169</wp:comment_author_IP>
    <wp:comment_date>2013-02-06 15:36:13</wp:comment_date>
    <wp:comment_date_gmt>2013-02-06 22:36:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Here's a fuller reply I think: http://blog.deepwoodsbrigade.com/post/42455918110/developing-a-stable-income-eco-system]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360190173</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360190173.3201808929443359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://graph.facebook.com/536911325/picture?type=large</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>536911325</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-06 22:36:13</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>786</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.110.127.36</wp:comment_author_IP>
    <wp:comment_date>2013-02-06 16:00:04</wp:comment_date>
    <wp:comment_date_gmt>2013-02-06 23:00:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great write up Michael! Thanks :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360191605</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360191606.2996408939361572265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-06 23:00:04</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>787</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Allen Christenson II]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.facebook.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>24.180.194.169</wp:comment_author_IP>
    <wp:comment_date>2013-02-06 16:07:15</wp:comment_date>
    <wp:comment_date_gmt>2013-02-06 23:07:15</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Your welcome :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>786</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360192037</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360192037.9296720027923583984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>facebook</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://graph.facebook.com/536911325/picture?type=large</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>536911325</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-06 23:07:15</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>790</wp:comment_id>
    <wp:comment_author><![CDATA[The Beauty and the Beast that is #Freelancing &laquo; Reading &#039;En Vogue&#039;]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://readingenvogue.wordpress.com/2013/02/09/the-beauty-and-the-beast-that-is-freelancing/</wp:comment_author_url>
    <wp:comment_author_IP>66.155.9.107</wp:comment_author_IP>
    <wp:comment_date>2013-02-09 19:40:40</wp:comment_date>
    <wp:comment_date_gmt>2013-02-10 02:40:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] To Freelance or Not To Freelance, that is my question (bob-roberts.net) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360464044.4056999683380126953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1360528434</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1360528434.961289882659912109375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-02-10 02:40:40</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1198</wp:comment_id>
    <wp:comment_author><![CDATA[Nicole Boivin]]></wp:comment_author>
    <wp:comment_author_email>info@simpletelecommute.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>174.100.252.179</wp:comment_author_IP>
    <wp:comment_date>2013-12-30 16:24:26</wp:comment_date>
    <wp:comment_date_gmt>2013-12-30 23:24:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hey, you may want to check out http://www.simpletelecommute.com search engine for freelance and other work at home jobs]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1388445866.3312680721282958984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>18712173423</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1388458853</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1388458853</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-12-30 23:24:26</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Remote / Telecommuting Web Development</title>
  <link>http://bob-roberts.net/2013/02/08/remote-telecommuting-web-development/</link>
  <pubDate>Fri, 08 Feb 2013 18:07:20 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=934</guid>
  <description/>
  <content:encoded><![CDATA[I know that I have bitched and complained about this before.  There have been many that have as well.  Companies and headhunters are always contacting me to move to some place I will never ever ever want to move to.  Ask them about <a class="zem_slink" title="Telecommuting" href="http://en.wikipedia.org/wiki/Telecommuting" target="_blank" rel="wikipedia">telecommuting</a> and they say they do not do that.  So they continue to search.  Maybe they find somebody or maybe they just take the best they can find and not the ideal candidate.

Well I think that most of us have heard of <a class="zem_slink" title="Stack Overflow" href="http://stackoverflow.com/" target="_blank" rel="homepage">StackOverflow</a> so take a look at the SUCCESS they are having with literally a totally <a class="zem_slink" title="Virtual business" href="http://en.wikipedia.org/wiki/Virtual_business" target="_blank" rel="wikipedia">virtual company</a>:

<a href="http://blog.stackoverflow.com/2013/02/why-we-still-believe-in-working-remotely/">http://blog.stackoverflow.com/2013/02/why-we-still-believe-in-working-remotely/</a>

Keep kicking ass SO and spreading the word
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://www.scientificamerican.com/podcast/episode.cfm?id=telecommuters-work-longer-hours-tha-12-12-26" target="_blank">Telecommuters Work Longer Hours Than Office-Goers</a> (scientificamerican.com)</li>
	<li class="zemanta-article-ul-li"><a href="http://www.gtdtimes.com/2013/01/30/telecommuting-tips-to-increase-your-productivity/" target="_blank">Telecommuting tips to increase your productivity</a> (gtdtimes.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>934</wp:post_id>
  <wp:post_date>2013-02-08 11:07:20</wp:post_date>
  <wp:post_date_gmt>2013-02-08 18:07:20</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>remote-telecommuting-web-development</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="telecommuting"><![CDATA[Telecommuting]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_40daeeb37687a7fb2dda4987e6e45279</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a303aef7f55d48c6ab054f25113c5385</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2013/02/12/937/</link>
  <pubDate>Tue, 12 Feb 2013 17:33:45 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/02/12/937/</guid>
  <description/>
  <content:encoded><![CDATA[Great article on successful freelancing]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>937</wp:post_id>
  <wp:post_date>2013-02-12 10:33:45</wp:post_date>
  <wp:post_date_gmt>2013-02-12 17:33:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>937</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[865]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[11140810]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2013/02/14/939/</link>
  <pubDate>Thu, 14 Feb 2013 22:02:52 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/02/14/939/</guid>
  <description/>
  <content:encoded><![CDATA[Perfect write up for sending emails with RoR]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>939</wp:post_id>
  <wp:post_date>2013-02-14 15:02:52</wp:post_date>
  <wp:post_date_gmt>2013-02-14 22:02:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>939</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[795]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40528223]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5967fa5e5239e7804301dd6b303278ea</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2b70de12f3936a1616b1d0af901871d2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c156130d8ef953c963d93040739933c7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5ed8d45a97b4a51814da0d378f08da4c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2013/02/15/940/</link>
  <pubDate>Sat, 16 Feb 2013 00:59:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/02/15/940/</guid>
  <description/>
  <content:encoded><![CDATA[Speed up Rspec testing!!! Thank you thank you.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>940</wp:post_id>
  <wp:post_date>2013-02-15 17:59:56</wp:post_date>
  <wp:post_date_gmt>2013-02-16 00:59:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>940</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[28]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40528223]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2013/02/20/941/</link>
  <pubDate>Wed, 20 Feb 2013 23:42:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/02/20/941/</guid>
  <description/>
  <content:encoded><![CDATA[Nginx and Puma]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>941</wp:post_id>
  <wp:post_date>2013-02-20 16:42:05</wp:post_date>
  <wp:post_date_gmt>2013-02-20 23:42:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>941</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[545]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[21824714]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails Rspec total test time error</title>
  <link>http://bob-roberts.net/2013/03/04/rails-rspec-total-test-time/</link>
  <pubDate>Tue, 05 Mar 2013 02:04:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=942</guid>
  <description/>
  <content:encoded><![CDATA[So I was getting this crazy value for the total time to run my <a class="zem_slink" title="RSpec" href="http://rspec.info/" target="_blank" rel="homepage">Rspec</a> tests.  It was like a bizarre decimal.  I never really cared until I started to try to speed up my tests.

It took me longer to find the solution than it took to fix it.  If you are not getting a actual positive number in Rspec tests it might be Timecop.  We are using Timecop and the time was frozen, hence the crazy total time.  After running a test using Timecop, just add Timecop.return.

Piece of cake!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>942</wp:post_id>
  <wp:post_date>2013-03-04 19:04:29</wp:post_date>
  <wp:post_date_gmt>2013-03-05 02:04:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-rspec-total-test-time</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_zemanta_has_recommendations</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:240;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Cleanup files created with Rspec</title>
  <link>http://bob-roberts.net/2013/03/06/cleanup-files-created-with-rspec/</link>
  <pubDate>Wed, 06 Mar 2013 22:00:23 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=945</guid>
  <description/>
  <content:encoded><![CDATA[So I guess I just never took the time to look but our main Ruby on Rails web application creates a lot of files during testing.  Now I am not talking about database anything here.  We create icons, and pdf's and rtf files during our Rspec test suite.

Just add this to you spec_helper.rb file:

[sourcecode language="ruby"]

config.after(:suite) do
  FileUtils.rm_rf(Dir[&quot;#{Rails.root}/public/system&quot;])
end
[/sourcecode]

Obviously change the directory to the correct one.

Hope that helps somebody :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>945</wp:post_id>
  <wp:post_date>2013-03-06 15:00:23</wp:post_date>
  <wp:post_date_gmt>2013-03-06 22:00:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cleanup-files-created-with-rspec</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:241;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Merging Pdf's in Rails application</title>
  <link>http://bob-roberts.net/2013/03/08/merging-pdfs-in-rails-application/</link>
  <pubDate>Sat, 09 Mar 2013 00:36:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=952</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Alright, I had a lot of fun today trying to figure out how to merge pdf's in our Rails application.</p>
<p style="text-align:justify;">We are using pdfkit to create our pdf's.  What I needed to do was to take several pdf's and merge them into one large pdf.  Frankly I did not think it was even possible.  I found several <a class="zem_slink" title="RubyGems" href="http://rubygems.org" target="_blank" rel="homepage">Ruby gems</a> that were supposed to do the job but everyone I tried was just another PITA dead end.</p>
<p style="text-align:justify;">After getting pointed in the right direction by @m3talsmith, I ended up solving my issue the old school way.  So, if you have done this before with Ruby gems stick with it.  If not, here we go...</p>

[sourcecode language="ruby"]
def merge_pdfs
   pdfs = []
   pdfs &amp;lt;&amp;lt; @bulletin.pdf.path
   @bulletin.bulletin_inserts.first.bulletin_insert_items.each do |bii|
     if bii.pdf.present?
      pdfs &amp;lt;&amp;lt; bii.pdf.path
     end
   end
   if pdfs.count &amp;gt; 1
     system &amp;quot;gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=temp.pdf #{pdfs.join(' ')}&amp;quot;
     system &amp;quot;cat '/Users/bob/Projects/bulletin-builder/temp.pdf' &amp;gt; #{@bulletin.pdf.path}&amp;quot;
   end
 end

[/sourcecode]
<p style="text-align:justify;">I first started with an empty array for pdfs.  Then I went thru a couple of processes to add all the pdfs to the pdfs array.</p>
<p style="text-align:justify;">After that, comes the old school.  Using <a class="zem_slink" title="Ghostscript" href="http://www.ghostscript.com" target="_blank" rel="homepage">Ghostscript</a> (gs) we joined all of the pdfs and outputted them to a temp.pdf.  I tried several times unsuccessfully to overwrite the original pdf but I never got it to work correctly.  After creating the temp.pdf we used good old cat command to copy the temp.pdf to the original pdf.</p>
<p style="text-align:justify;">If you know or find a better way, please tell me!!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>952</wp:post_id>
  <wp:post_date>2013-03-08 17:36:59</wp:post_date>
  <wp:post_date_gmt>2013-03-09 00:36:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>merging-pdfs-in-rails-application</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_zemanta_has_recommendations</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:240;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_quote</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_quote_source</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_image</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_gallery</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_audio</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_format_video</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_post_restored_from</wp:meta_key>
    <wp:meta_value><![CDATA[a:3:{s:20:"restored_revision_id";i:972;s:16:"restored_by_user";i:15714693;s:13:"restored_time";i:1365981272;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4617f0672779862685287a039b85c8aa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_72304bcf0048aab02550a026e6fff15b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>822</wp:comment_id>
    <wp:comment_author><![CDATA[Selvakumar]]></wp:comment_author>
    <wp:comment_author_email>selvakumar.mmnagar@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://selvaonrails.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>182.72.203.65</wp:comment_author_IP>
    <wp:comment_date>2013-03-10 21:40:47</wp:comment_date>
    <wp:comment_date_gmt>2013-03-11 04:40:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://selvaonrails.wordpress.com/2013/03/11/merging-pdfs-in-rails-application/" rel="nofollow">Selva&#039;s Blog</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>15466156</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362984018</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362984018.154427051544189453125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362976847.57306003570556640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"selvaonrails";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-03-11 04:40:47</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3735</wp:comment_id>
    <wp:comment_author><![CDATA[boazsegev]]></wp:comment_author>
    <wp:comment_author_email>boaz@2be.co.il</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>174.62.236.48</wp:comment_author_IP>
    <wp:comment_date>2014-12-21 13:55:50</wp:comment_date>
    <wp:comment_date_gmt>2014-12-21 20:55:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Did you look at the combine_pdf gem ( https://github.com/boazsegev/combine_pdf )?

It’s native Ruby and allows you to work with the PDF in the memory – so instead of expansive system calls, you can actually merge the PDF in the memory and send the response without any temporary files.

after requiring the gem, you could add this to your code (instead of the system call):

    final = CombinePDF.new

    pdfs.each {|f| final &lt;&lt; CombinePDF.load(f) }

    final.to_pdf # will return a PDF stream to be sent as a response or saved to a file.


I wrote it after my search for a native Ruby solution left me disappointed.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>75617270</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1419195351.2733490467071533203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"boazsegev";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1419195605</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1419195605</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1419195605.629705905914306640625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3736</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>72.201.170.118</wp:comment_author_IP>
    <wp:comment_date>2014-12-21 14:00:50</wp:comment_date>
    <wp:comment_date_gmt>2014-12-21 21:00:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I will look at this ASAP.  It surely looks better than the mess I had to do!!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>3735</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1419195650</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1419195650.8520500659942626953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1419195651</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2757</wp:comment_id>
    <wp:comment_author><![CDATA[Kuba]]></wp:comment_author>
    <wp:comment_author_email>majak108@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>94.112.245.106</wp:comment_author_IP>
    <wp:comment_date>2014-09-10 01:01:05</wp:comment_date>
    <wp:comment_date_gmt>2014-09-10 08:01:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Very helpful, thanks. Worked for me.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1410492444</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1410492445.2721059322357177734375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-09-10 08:01:05</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1410492444</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1410336065.8414170742034912109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Rails CRM gets an upgrade</title>
  <link>http://bob-roberts.net/2013/03/13/rails-crm-gets-an-upgrade/</link>
  <pubDate>Wed, 13 Mar 2013 17:52:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=973</guid>
  <description/>
  <content:encoded><![CDATA[A while back I created Rails CRM.  It was always meant to be a bare bones <a class="zem_slink" title="Customer relationship management" href="http://en.wikipedia.org/wiki/Customer_relationship_management" target="_blank" rel="wikipedia">Customer Relations Management</a> application as I did not find any that I liked.

I just released a beta version of Rails CRM - Advanced.  It is still pretty bare bones but we have added a few new features and a new look as well.  I am thinking of maybe providing a hosted solution for the new Rails CRM but I am not sure if there is any interest.

In the meantime, feel free to check it out at <a href="http://www.railscrm.com">Rails CRM</a>

As usual, this is open sourced and there are links to the Github repos on the front page.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>973</wp:post_id>
  <wp:post_date>2013-03-13 10:52:25</wp:post_date>
  <wp:post_date_gmt>2013-03-13 17:52:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-crm-gets-an-upgrade</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:240;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_zemanta_has_recommendations</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby Expression snippet for Sublime Text 2</title>
  <link>http://bob-roberts.net/2013/04/14/ruby-expression-snippet-for-sublime-text-2/</link>
  <pubDate>Sun, 14 Apr 2013 23:17:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=979</guid>
  <description/>
  <content:encoded><![CDATA[https://gist.github.com/5384619]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>979</wp:post_id>
  <wp:post_date>2013-04-14 16:17:36</wp:post_date>
  <wp:post_date_gmt>2013-04-14 23:17:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-expression-snippet-for-sublime-text-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Making Unicorn behave....</title>
  <link>http://bob-roberts.net/2013/05/01/make-the-unicorns-behave/</link>
  <pubDate>Wed, 01 May 2013 22:59:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=996</guid>
  <description/>
  <content:encoded><![CDATA[This one had me going for a bit so I figured that I would share my solution.....

I am using <a href="https://github.com/mislav/git-deploy">git-deploy</a> for one of my clients for their two servers.  It is quite similar to <a class="zem_slink" title="Capistrano" href="http://https://github.com/capistrano/capistrano/wiki" target="_blank" rel="homepage">Capistrano</a> but I like it better.

The <a href="https://github.com/mislav/git-deploy">git-deploy</a> uses 3 files for deployment; after_push, before_restart, and restart.  I needed to restart Unicorn after deployments but found that I could not do so without using sudo and the password for the user.  This didn't work in the "restart" file so I found myself manually restarting Unicorn after every deploy.  Pain in the ass......

First run "<a class="zem_slink" title="Sudo" href="http://www.sudo.ws" target="_blank" rel="homepage">visudo</a>" from the server command line.  It may require using sudo first.  Then I added:
<pre>&lt;server_name&gt; ALL=NOPASSWD: /etc/init.d/unicorn restart, /etc/init.d/unicorn stop, /etc/init.d/unicorn start</pre>
This gave the &lt;server_user&gt; the privilege to run sudo  /etc/init.d/unicorn restart without having to enter the password.

So I just needed to add run "sudo /etc/init.d/unicorn restart" to the git-deploy "restart file"
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://multiplethreads.wordpress.com/2013/04/16/setting-up-nginx-with-unicorn-for-rails/" target="_blank">Setting up Nginx with Unicorn for Rails</a> (multiplethreads.wordpress.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>996</wp:post_id>
  <wp:post_date>2013-05-01 15:59:25</wp:post_date>
  <wp:post_date_gmt>2013-05-01 22:59:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>make-the-unicorns-behave</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="sudo"><![CDATA[Sudo]]></category>
  <category domain="post_tag" nicename="unicorn"><![CDATA[Unicorn]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:239;}s:2:"wp";a:1:{i:0;i:28;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_04d7b89d5dd9662c3746d2e1a95701b9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e1942134009a1e34c293fd7d7eec6a94</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6ed0dc1618f128ef9c7db1d459b63761</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_ddc85da46c42664a929806d389736ca9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Running Unicorn as a Service on Debian Linux</title>
  <link>http://bob-roberts.net/2013/05/16/running-unicorn-as-a-service-on-debian-linux/</link>
  <pubDate>Thu, 16 May 2013 19:46:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/05/16/running-unicorn-as-a-service-on-debian-linux/</guid>
  <description/>
  <content:encoded><![CDATA[This article saved my life.  Set up Unicorn to start on server reboot.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1005</wp:post_id>
  <wp:post_date>2013-05-16 12:46:09</wp:post_date>
  <wp:post_date_gmt>2013-05-16 19:46:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>running-unicorn-as-a-service-on-debian-linux</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[945]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[15814134]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>New Beginnings....</title>
  <link>http://bob-roberts.net/2013/06/30/new-beginnings/</link>
  <pubDate>Sun, 30 Jun 2013 23:23:39 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1011</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">Well, lots have changed recently.  As the title says, new beginnings....</p>
<p style="text-align:justify;">I have had no luck in finding new contracts.  My partner Steve and I are looking at expanding more into the JavaScript market as he worries that Rails is slowly fading away to be replaced by the likes of Node.js and others.</p>
<p style="text-align:justify;">When one language gets popular, everybody rushes to it.  Have to be the cool hipsters with the new stuff on the block.  That is fine.  As more devs move to the new Javascript single page apps there will be more need for Rails developers on legacy applications.</p>
<p style="text-align:justify;">So, I have for a while been contemplating getting a real job.  I had hoped to work remotely with somebody but that left me with few options.</p>
<p style="text-align:justify;">I got an email 2 weeks ago from my blog from a recruiter.  I know, great yet another recruiter email.  The position sounded interesting and I replied to the recruiter.  Long story short, the recruiter, David Claeys with Tech Recruitment, got me an interview with the company and I started last Wednesday.</p>
<p style="text-align:justify;">I just started working at Unitedweb/Nextiva.  I am the first Rails dev there.  All of the other developers are either Java or Python/Django people.  I am working on a legacy Rails app and I am to teach RoR to others there to work on the app with me.</p>
<p style="text-align:justify;">One thing that I have to say is that Unitedweb/Nextiva is an awesome place to work.  I was so worried about going back to working in an office for the first time in 5 years.  Needless to say, it does not feel like I am working in an office and for that I am grateful.</p>
<p style="text-align:justify;">What does this mean for Rebel Outpost?  Business as usual.  I will still continue to look for more contract work.  I still want to be able to teach others and be a big part of the local Ruby community.  So as far as I am concerned there is no end in site...</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1011</wp:post_id>
  <wp:post_date>2013-06-30 16:23:39</wp:post_date>
  <wp:post_date_gmt>2013-06-30 23:23:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>new-beginnings</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:239;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2120</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>24.249.170.38</wp:comment_author_IP>
    <wp:comment_date>2014-06-05 10:11:10</wp:comment_date>
    <wp:comment_date_gmt>2014-06-05 17:11:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am just using wordpress.com.  Easy and Free :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>2117</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1401988270</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1401988270.2433888912200927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1401988270</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-05 17:11:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>2117</wp:comment_id>
    <wp:comment_author><![CDATA[Broderick]]></wp:comment_author>
    <wp:comment_author_email>broderickminor@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.twilio.com/doers/ikenna-okpala</wp:comment_author_url>
    <wp:comment_author_IP>167.160.110.93</wp:comment_author_IP>
    <wp:comment_date>2014-06-05 09:50:35</wp:comment_date>
    <wp:comment_date_gmt>2014-06-05 16:50:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Heya are using Wordpress for your blog platform?
I'm new to the blog world but I'm trying to get started and create my own. 
Do you require any coding knowledge to make your own blog?
Any help would be really appreciated!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1401987036.1299068927764892578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1401988246</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1401988246</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1401988246.933248996734619140625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-06-05 16:50:35</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Update from Intern #2 - Transition to Rails</title>
  <link>http://bob-roberts.net/2013/07/25/update-from-intern-2-transition-to-rails/</link>
  <pubDate>Fri, 26 Jul 2013 02:06:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1015</guid>
  <description/>
  <content:encoded><![CDATA[My second intern, Steve, just posted this on his blog.....

"While this post is now a few months late due to life getting in the way, I figured I would document how my first year using <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" target="_blank" rel="homepage">Ruby on Rails</a> went. In case you don’t want to read more I would sum it up as a huge success. I picked up my first Ruby on Rails book the end of April 2012......"

Check out the full article at <a href="http://www.stephentong.com/">http://www.stephentong.com/</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1015</wp:post_id>
  <wp:post_date>2013-07-25 19:06:56</wp:post_date>
  <wp:post_date_gmt>2013-07-26 02:06:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>update-from-intern-2-transition-to-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_zemanta_has_recommendations</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:239;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>To Saas or not to Saas....</title>
  <link>http://bob-roberts.net/2013/09/23/to-saas-or-not-to-saas/</link>
  <pubDate>Tue, 24 Sep 2013 03:23:48 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1018</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">So I am torn with what to do with <a href="http://railscrm.com">RailsCRM</a>.  From the beginning it was always intended to be OSS and minimal.  Then I started to add on to it.  I feel that it should be something easy to use and require minimal setup and not have all of the bells and whistles as those could be added by the user.</p>
<p style="text-align:justify;">I really do not know if anybody has used it for themselves as I have no idea whether anybody has cloned the repo and done anything with it.</p>
<p style="text-align:justify;">So, I thought lately that I will set it up as a <a class="zem_slink" title="Software as a Service" href="http://www.wikinvest.com/concept/Software_as_a_Service" target="_blank" rel="wikinvest">SaaS</a> and still allow people to clone the basic and advanced crm repos.  But now I am thinking that I should do both.  Maybe make the new version that I have been working on the advanced version as well as setting it up to use as a SaaS.</p>
<p style="text-align:justify;">I have no intention of making money off of this but I could see that if it were popular as a SaaS that I would incur the costs of running it.</p>
<p style="text-align:justify;">I know that either way I have a lot of improvements to make and doing that is a little hard with so many other things occupying my time.</p>
<p style="text-align:justify;">Does anybody think there would be a need for an easy to use CRM SaaS?</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1018</wp:post_id>
  <wp:post_date>2013-09-23 20:23:48</wp:post_date>
  <wp:post_date_gmt>2013-09-24 03:23:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>to-saas-or-not-to-saas</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="software-as-a-service"><![CDATA[Software as a service]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_zemanta_has_recommendations</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:482036;i:238;}s:2:"wp";a:1:{i:0;i:27;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1033</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.231.138.42</wp:comment_author_IP>
    <wp:comment_date>2013-10-02 17:19:10</wp:comment_date>
    <wp:comment_date_gmt>2013-10-03 00:19:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good point.  I will leave it open sourced AND offer it as SaaS :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>1032</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380759550</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380759550.8853371143341064453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-03 00:19:10</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1032</wp:comment_id>
    <wp:comment_author><![CDATA[totencough]]></wp:comment_author>
    <wp:comment_author_email>bradhodson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.jobnimbus.com</wp:comment_author_url>
    <wp:comment_author_IP>98.203.144.139</wp:comment_author_IP>
    <wp:comment_date>2013-10-02 10:30:51</wp:comment_date>
    <wp:comment_date_gmt>2013-10-02 17:30:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[SaaS is absolutely easier on the user, especially when considering CRM software. If you want to decrease friction on the end user, an online delivery model is definitely the way to go.

I would suggest you do both, then try to track traffic and other data to find what makes the most sense.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380735052.2945659160614013671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"totencough";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1380759548</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1380759549.16335391998291015625;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-02 17:30:51</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Introducing MongoDB</title>
  <link>http://bob-roberts.net/2013/09/23/introducing-mongodb/</link>
  <pubDate>Tue, 24 Sep 2013 03:25:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/09/23/introducing-mongodb/</guid>
  <description/>
  <content:encoded><![CDATA[MongoDB.....enough said!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1021</wp:post_id>
  <wp:post_date>2013-09-23 20:25:09</wp:post_date>
  <wp:post_date_gmt>2013-09-24 03:25:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>introducing-mongodb</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[127]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40540558]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1060</wp:comment_id>
    <wp:comment_author><![CDATA[Introducing MongoDB – MongoDB Studio]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://mongodbstudio.com/2013/10/09/introducing-mongodb/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.112.51</wp:comment_author_IP>
    <wp:comment_date>2013-10-09 20:11:31</wp:comment_date>
    <wp:comment_date_gmt>2013-10-10 03:11:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] http://bob-roberts.net/2013/09/23/introducing-mongodb/ [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1381374915</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1381374916.0636060237884521484375;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1381374691.9033739566802978515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2013-10-10 03:11:31</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Respect with RSpec in Rails</title>
  <link>http://bob-roberts.net/2013/09/23/respect-with-rspec-in-rails/</link>
  <pubDate>Tue, 24 Sep 2013 03:27:35 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/09/23/respect-with-rspec-in-rails/</guid>
  <description/>
  <content:encoded><![CDATA[Nice writeup Respect with RSpec in Rails]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1022</wp:post_id>
  <wp:post_date>2013-09-23 20:27:35</wp:post_date>
  <wp:post_date_gmt>2013-09-24 03:27:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>respect-with-rspec-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[4]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40540558]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why is ruby on rails Ubuntu server setup so damned hard to do?</title>
  <link>http://bob-roberts.net/2013/10/16/why-is-ruby-on-rails-server-setup-so-damned-hard-to-do/</link>
  <pubDate>Thu, 17 Oct 2013 04:10:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1028</guid>
  <description/>
  <content:encoded><![CDATA[Well, I was messing with <a class="zem_slink" title="Server (computing)" href="http://en.wikipedia.org/wiki/Server_%28computing%29" target="_blank" rel="wikipedia">server</a> setup for <a class="zem_slink" title="Ruby on Rails" href="http://rubyonrails.org" target="_blank" rel="homepage">Ruby on Rails</a> again.  I had created a script to walk thru the steps but it still seems to be a combination of try this, get an error, google the error, apply the fix, and try it again.  If it works go to next step, and if not; repeat over and over.

Now the best option for hosting Rails apps is <a class="zem_slink" title="Heroku" href="http://www.heroku.com/" target="_blank" rel="homepage">Heroku</a> but this is not always an option.  A lot of the other 'paid' Rails hosting options have 'one-click' server setup.  What I am talking about is setting up a brand new <a class="zem_slink" title="Ubuntu (operating system)" href="http://www.ubuntu.com" target="_blank" rel="homepage">Ubuntu</a> 12.* server for Ruby on Rails.

I will be updating my step-by-step server setup and posting that soon...

Today I want to talk about an awesome script that I found.  It is called <a href="https://github.com/joshfng/railsready">Railsready</a> by Josh Frye.  Out of the box it certainly kicks ass to use for setting up Rails ready server on 'Nix or <a class="zem_slink" title="OS X" href="http://www.apple.com/osx" target="_blank" rel="homepage">OSX</a>.

Well, I wanted more, so I added more.  I have taken Josh's fine script and added some options that I wanted.

I now have it setup to ask what version Ruby you want installed.  Right now that is a choice of 1.9.3 or 2.0.0.  I am planning on setting that up to prompt for which version but I worry that users will enter a non-existing patch.

I have also added <a class="zem_slink" title="Nginx" href="http://nginx.org/" target="_blank" rel="homepage">Nginx</a> server install plus your choice of Unicorn, Thin or <a class="zem_slink" title="Phusion Passenger" href="http://modrails.com" target="_blank" rel="homepage">Passenger</a>.

Next up is I am going to add option to choose from <a class="zem_slink" title="MongoDB" href="http://www.mongodb.org/" target="_blank" rel="homepage">Mongodb</a>, MySQL, and PostgreSQL.

Take a look at it and see what you think... <a href="https://github.com/brobertsaz/railsready"> https://github.com/brobertsaz/railsready</a>
<h6 class="zemanta-related-title" style="font-size:1em;">Related articles</h6>
<ul class="zemanta-article-ul">
	<li class="zemanta-article-ul-li"><a href="http://www.prweb.com/releases/best-ruby-on-rails-hosts/2013/prweb11125505.htm" target="_blank">Best Web Hosts for Ruby on Rails in 2013 Introduced by...</a> (prweb.com)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1028</wp:post_id>
  <wp:post_date>2013-10-16 21:10:14</wp:post_date>
  <wp:post_date_gmt>2013-10-17 04:10:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-is-ruby-on-rails-server-setup-so-damned-hard-to-do</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="mongodb"><![CDATA[MongoDB]]></category>
  <category domain="post_tag" nicename="nginx"><![CDATA[Nginx]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_zemanta_has_recommendations</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/KUVenZ7eUu]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_482036</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:199393780;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Learning Devise for Rails is Out Now!</title>
  <link>http://bob-roberts.net/2013/11/21/learning-devise-for-rails-is-out-now/</link>
  <pubDate>Fri, 22 Nov 2013 03:06:43 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/11/21/learning-devise-for-rails-is-out-now/</guid>
  <description/>
  <content:encoded><![CDATA[Awesome!!  A lot of people complain about Devise but it just works.  No need to roll your own authentication.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1034</wp:post_id>
  <wp:post_date>2013-11-21 20:06:43</wp:post_date>
  <wp:post_date_gmt>2013-11-22 03:06:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>learning-devise-for-rails-is-out-now</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[412]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[11524188]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby on Rails Interview Questions and Answers</title>
  <link>http://bob-roberts.net/2013/11/21/ruby-on-rails-interview-questions-and-answers/</link>
  <pubDate>Fri, 22 Nov 2013 03:08:45 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/11/21/ruby-on-rails-interview-questions-and-answers/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1035</wp:post_id>
  <wp:post_date>2013-11-21 20:08:45</wp:post_date>
  <wp:post_date_gmt>2013-11-22 03:08:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-on-rails-interview-questions-and-answers</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_7d5742a0211aba71c2f49425c5521c4c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c5683460805e695839a228429444270e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d76beb2a6164c5d2c2c5debd1a4ffe4f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a6487185e817fe2f0a19015596806adb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_acb863afd4ae3b86d79be1675cb412eb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_837e1dc31869cd9f6ecee65e1f03dea2</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_565386e22d6f07f39f3e93deb2ca1b9b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0bc39d65b58c2a204f21cec62bfb961d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3417a595df2c81e6ba5531d3de62e494</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_af704cf87c142a7da677fb71d8a8c221</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7518905a063b637672aede94062f5baf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d8530c5c17e6703a4d2f7332d45dde53</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1113d0f609c246ab36e31fef9f8ab070</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1113d0f609c246ab36e31fef9f8ab070</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_37eb33c1d709f438385cc8de823d7441</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cc6afef5c8970c2b6b2373671e8f5b2a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cc6afef5c8970c2b6b2373671e8f5b2a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_71d71cdcee33909b3a8886654bfc6ccf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_71d71cdcee33909b3a8886654bfc6ccf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_71d71cdcee33909b3a8886654bfc6ccf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_3230899c1b88072b06ad5ceaa82334aa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a90ad65078674e848b0eaa33b4f97843</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_95e6f8fc30809492329716812b463ddf</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f35072eb2baa385ce5e356fb38b124c8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a55e07d53c3494b158be9a3c0cc19257</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2a0f78e7117671b04c9f35321443cd91</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_300225c32319597067bc9336e58c1f3f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_61da11e3caa223d893b564e1dd5ee6a7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_df160c04b36cddc269246bc29ab9d52b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a56d5c28e9bac0e449b6ddb22b468d1f</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[broberts_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_62661a792219f1e2c5ec3623d38fd1da</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c8c4a53b07270582f699fa74adc2f185</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fcfa44a0228aa3f5f1b12c8c15e6adde</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_7b141c2abc9ca82a48feacf988fbef07</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_34290a6af23d5e8ab6b367fd899a7440</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4b4ccb3c25c3975160d8c35a64f8278e</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8f8d3b6e495745cc6e91de30d53092f6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_762f17cce74612cd57c40a8e11eb10f7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5f0fc452f396a81b716bf9f7abfc9178</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4717dbed5c38fc476deaba21989d01e8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_16c3d9c7e11ee2998de352b659effe7c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_68bb71410be3ff8943a734d07d51d58d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_5a338bff04b4ed234ba8dd6230606222</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a8e5b8d6ac7f7223e9f8a4d6132254b0</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[129]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[48740664]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b2ba7ebc447ccc9421452f5f803606b1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b2ba7ebc447ccc9421452f5f803606b1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b2ba7ebc447ccc9421452f5f803606b1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c452ad9e4113b5034a4cdb37be66b72c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1113d0f609c246ab36e31fef9f8ab070</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b3f80994c7beec2f4ac291519d868afa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b478ee72543e0066dd006aff2e965cc4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b94b8d650deebdb218db9dedb57e664a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8f5e349fb483d9b2bcfa0d1be9e5ff02</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e9c5241555e7364372eafcef098f7a7c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_68fc438abf1f27c44d09c4a766aadbc8</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0d834b713426c4d488b2408ae3f2c6ce</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c33ddc7d89d204b8fcc56de858410dae</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_fea76c72b0b6537e5637f3959f280bf9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_a0f3e95face81114967ed206197a0ff3</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bd7add28da88c34e1e25e102f8ebf85d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Random thoughts...</title>
  <link>http://bob-roberts.net/2013/12/09/random-thoughts/</link>
  <pubDate>Tue, 10 Dec 2013 01:24:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1042</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I have not really blogged anything of value lately and that is frustrating. It seems like I never have any time for anything. Since I started working a full time position and keeping a full time client, there are not any extra hours in the week.</p>
<p style="text-align:justify;">I have been trying to work on my first iPhone app that I created a couple of weekends ago. At work we have an iPhone app that was already created and quite complex to say the least. It has not been too bad getting used to using xCode and Objective C but not easy either. The work app uses dynamic positioning for the labels and inputs so this is a lot harder than setting them in the storyboard. So while I learn how to update the iPhone app at work I thought it smart to write my own app. The layout part was easy but I made a Mortgage Loan calculator and the math behind that is insane. Now, I did not create the app for selling it, it was just a learning experience. As for the calculate loan algorithm, I could not even calculate it with scientific calculator. So fun times.</p>
<p style="text-align:justify;">RailsCRM seems to be a lingering thing that I will never get around to finishing.  I would maybe be better off trying to figure out how to clone myself.  I have had quite a few visitors to the live site but nobody seems interested in collaborating on it.  One day I will have more time to do something with it.</p>
<p style="text-align:justify;">I have recently been really focusing on moving to Germany next year.  So I have started to look into companies that are hiring Rails developers there.  Most of the Rails gigs look to be in Berlin where there are so many startups.  There are however, a few other companies in other German cities that are hiring Rails developers.  I have been talking to one such company and it is interesting to hear their work philosophy and how different it is to most of the places that I have talked to or read about here in the states.  Their hiring process is done as a team effort.  The lead developer does the initial interview.  The interview is more about work habits and general coding practices.  If the lead developer feels that you MIGHT be a good fit for the team, the next interview is with the entire team and ultimately the entire team decides yeah or nay on the candidate.  Top priority for them is that the team is made up of those that work well together and that they enjoy working together.  This is more important to them than super ninja coder vs. normal coder.  They do NOT want any hot shot coders that don't fit in with the team.  To me, this is a fantastic philosophy for developers.  It really is more important to be able to mesh and get along great with the other members of your team.  This is not always the case and working in an environment where there is someone that does not get along with others is horrible.  Coding can be improved but changing another's personality is impossible.</p>
<p style="text-align:justify;">  In other news, I recently dropped off of the Social Media circus.  As far as I am concerned, LinkedIn serves no purpose to anybody but recruiters.  People just try to link to as many others as possible, but for what?  Same goes with Twitter.  The more followers the greater you are?  I personally got sick of all of the childish shit that goes on in the RoR community.  Now do not get me wrong, not everybody in the community is bad but most of the chatter on Twitter is nothing more than whining crying and gossip.  It is all about who i going to what conference like a bunch of conference junkies and what goes on there.  I really do not care so I have opted out.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1042</wp:post_id>
  <wp:post_date>2013-12-09 18:24:36</wp:post_date>
  <wp:post_date_gmt>2013-12-10 01:24:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>random-thoughts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Setting up a Ruby on Rails development environment on Mavericks - dean.io</title>
  <link>http://bob-roberts.net/2013/12/10/setting-up-a-ruby-on-rails-development-environment-on-mavericks-dean-io/</link>
  <pubDate>Tue, 10 Dec 2013 21:00:33 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1048</guid>
  <description/>
  <content:encoded><![CDATA[Great link for upgrading to Mavericks:

<a href="http://dean.io/setting-up-a-ruby-on-rails-development-environment-on-mavericks/">http://dean.io/setting-up-a-ruby-on-rails-development-environment-on-mavericks/</a>

I have used this 3 times for installing on Mavericks already!! Can not ever remember the gcc42 part :(

Thanks for this !!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1048</wp:post_id>
  <wp:post_date>2013-12-10 14:00:33</wp:post_date>
  <wp:post_date_gmt>2013-12-10 21:00:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>setting-up-a-ruby-on-rails-development-environment-on-mavericks-dean-io</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_dea23f2e749b5d7159d85b565571c5f6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Dealing with Ruby time</title>
  <link>http://bob-roberts.net/2013/12/12/dealing-with-ruby-time/</link>
  <pubDate>Fri, 13 Dec 2013 02:20:17 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1052</guid>
  <description/>
  <content:encoded><![CDATA[<p>I saw this code the other day:</p><p>- tempDate = "#{my_object_date.to_date}"<br /> - displayDate = tempDate[5,2]<br /> - displayDate += "/"<br /> - displayDate += tempDate[8,2]<br /> - displayDate += "/"<br /> - displayDate += tempDate[0,4]<br /> = displayDate</p><p>The result of this code is MM/DD/YY.</p><p>What the hell?  I am pretty sure that just about every computer language out there has ways to deal with dates.  For Ruby it is strftime.</p><p>Check out this awesome tool for dealing with dates and time in Ruby: <a href="http://www.foragoodstrftime.com/" target="_blank">http://www.foragoodstrftime.com/</a></p><p>And when in doubt, google it!!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1052</wp:post_id>
  <wp:post_date>2013-12-12 19:20:17</wp:post_date>
  <wp:post_date_gmt>2013-12-13 02:20:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dealing-with-ruby-time</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="programming"><![CDATA[Programming]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d58c0b7ab543a574650f5b482ca9d5aa</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Let go of me SSH Session</title>
  <link>http://bob-roberts.net/2013/12/13/let-go-of-me-ssh-session/</link>
  <pubDate>Fri, 13 Dec 2013 20:06:18 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1060</guid>
  <description/>
  <content:encoded><![CDATA[Have you ever been in a SSH session that times out on you?

Next time you go to your terminal and you can't type because your ssh session has timed out, all you have to do is:

Hit ENTER, then ~, and then .

Enter, Tilde, Period]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1060</wp:post_id>
  <wp:post_date>2013-12-13 13:06:18</wp:post_date>
  <wp:post_date_gmt>2013-12-13 20:06:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>let-go-of-me-ssh-session</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Import CSV File Into The Database In Rails Application.</title>
  <link>http://bob-roberts.net/2013/12/23/import-csv-file-into-the-database-in-rails-application/</link>
  <pubDate>Tue, 24 Dec 2013 02:23:44 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2013/12/23/import-csv-file-into-the-database-in-rails-application/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1065</wp:post_id>
  <wp:post_date>2013-12-23 19:23:44</wp:post_date>
  <wp:post_date_gmt>2013-12-24 02:23:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>import-csv-file-into-the-database-in-rails-application</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[157]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[55709321]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2013 in review</title>
  <link>http://bob-roberts.net/2013/12/31/2013-in-review/</link>
  <pubDate>Tue, 31 Dec 2013 15:39:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1068</guid>
  <description/>
  <content:encoded><![CDATA[The WordPress.com stats helper monkeys prepared a 2013 annual report for this blog.

<a href="http://bob-roberts.net/2013/annual-report/"><img alt="" src="http://www.wordpress.com/wp-content/mu-plugins/annual-reports/img/2012-emailteaser.png" width="100%" /></a>

Here's an excerpt:
<blockquote>The concert hall at the Sydney Opera House holds 2,700 people. This blog was viewed about <strong>23,000</strong> times in 2013. If it were a concert at Sydney Opera House, it would take about 9 sold-out performances for that many people to see it.</blockquote>
<a href="http://bob-roberts.net/2013/annual-report/">Click here to see the complete report.</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1068</wp:post_id>
  <wp:post_date>2013-12-31 08:39:12</wp:post_date>
  <wp:post_date_gmt>2013-12-31 15:39:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2013-in-review</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>wpcom_recap</wp:meta_key>
    <wp:meta_value><![CDATA[2013]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ubuntu 12.04 Rails, Nginx, Unicorn and Capistrano ('2.15.5') Server Setup</title>
  <link>http://bob-roberts.net/2014/01/27/ubuntu-precise-rails-nginx-unicorn-and-capistrano-2-15-5-server-setup/</link>
  <pubDate>Tue, 28 Jan 2014 00:57:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1074</guid>
  <description/>
  <content:encoded><![CDATA[<pre>Check out the <a href="https://gist.github.com/brobertsaz/8660415">gist</a>


Ubuntu Precise Rails, Nginx, Unicorn and Capistrano ('2.15.5') Server Setup
=============================

I originally tried to use the ~&gt; 3.0 version of Capistrano, but fell back to the 2.15.5 version.  There were a lot of changes in the new version that I did not feel like learning right at the moment...

### 1. Setup deploy user

First we will create a new user for deployment:

    $  ssh into your server
    $  sudo adduser deploy

Accept the defaults.

Add new user to staff and sudo groups:

    $  sudo usermod -a -G staff deploy
    $  sudo usermod -a -G sudo deploy

Switch user:

    $  su deploy
    $  cd ~

Update and Install Ubuntu dependencies:

    $  sudo apt-get -y update
    $  sudo apt-get -y install build-essential zlib1g-dev libssl-dev libreadline-dev libyaml-dev libcurl4-openssl-dev curl git-core python-software-properties libxslt1-dev libxml2-dev libmysqlclient-dev libsqlite3-dev nodejs imagemagick graphicsmagick-libmagick-dev-compat git-core mongodb

To make life easier, lets go ahead and add our ssh keys to the new server so that we do not have to sign in every time.

Add ssh keys:

    $  mkdir ~/.ssh (on the server)
    $  cat ~/.ssh/id_rsa.pub | ssh deploy@IPaddress "cat &gt;&gt; ~/.ssh/authorized_keys" (from your machine)

### From here you should be ssh'ing into the server as the deploy user......

### 2. Install Ruby and gems's

Now let's install Ruby, and we use a specific version for the may_app_name app.
We need the url to get the source and a directory to build in:

    $  wget http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p374.tar.gz
    $  tar -zxvf ruby-1.9.3-p374.tar.gz
    $  cd ruby-1.9.3-p374
    $  echo "gem: --no-ri --no-rdoc" &gt;&gt; ~/.gemrc
    $  ./configure --prefix=/usr/local
    $  make
    $  sudo make install
    $  sudo gem install bundler

### 3. Unicorn &amp; Nginx

    $  sudo apt-get install nginx

The Nginx configuration is the trickiest part of the set up.  This file needs to go in the config file that was created with the Nginx install:

    $  cd /etc/nginx
    $  sudo vim nginx.conf (delete the contents and paste in the code from the Nginx.conf file.  (Attachment A)

You will need to edit the IP address on line 22:

    server @IPaddress:8080

The Unicorn configuration consists of the unicorn.rb file in the config directory.

### 4. Deployment Setup

On the server we need to create a directory for the project:

    $  sudo mkdir /var/www
    $  sudo chown deploy:deploy /var/www

We are going to use Capistrano for deployment.  Capistrano is able to deploy to different environments such a Production, Staging, and Development.  Make sure that you have the folloeing in your Gemfile:

    gem 'capistrano',  '2.15.5'
    and under group :development
      gem 'capistrano-unicorn', :require =&gt; false

Make sure you bundle install after adding these gems.

To install Capistrano:

    $ capify .

This creates a config/deploy.rb file

The main Capistrano settings are in the config/deploy.rb file.  Additionally there is also a config/deploy/ directory and within that directory there may should be files for the different environments e.g. production.rb, staging.rb, etc.

It should be noted that there are different environments for Capistrano but these as not the same as the Rails environments that are available on a server.  We currently have both beta and live servers running in 'Production' Rails environment.  Think of the Capistrano envirement as simply the remote name for deployment purposes.

Capistrano will use the file in config/deploy that matches the cap deploy.  For example "cap development deploy", will use the config/deploy/development.rb file.

The way that Capistrano works is that the main settings are in the config/deply.rb file:

    my_app_name deploy.rb file:
    set :default_stage, 'development'
    set :stages, %w(production staging development)
    require 'capistrano/ext/multistage'
    require 'bundler/capistrano'

    set :application, "may_app_name"
    set :repository,  "git@github.com:my_github/my_app_name.git"
    set :deploy_to, '/var/www/may_app_name'
    set :scm, :git
    set :branch, 'master'
    set :user, 'deploy'
    set :deploy_via, :copy
    set :keep_releases, 5
    set :use_sudo, false
    set :ssh_options, {:forward_agent =&gt; true}

    after "deploy:restart", "deploy:cleanup"

    namespace :deploy do

      desc "symlink shared files"
      task :symlink_shared, :roles =&gt; :app do
        run "ln -nfs #{shared_path}/system/mongoid.yml #{release_path}/config/mongoid.yml"
        run "ln -nfs #{shared_path}/system/application.yml #{release_path}/config/application.yml"
      end

      task :restart, :roles =&gt; :app, :except =&gt; { :no_release =&gt; true } do
        run "#{try_sudo} touch #{File.join(current_path,'tmp','restart.txt')}"
      end

    end
    before "deploy:assets:precompile", "deploy:symlink_shared"

    # Unicorn
    require 'capistrano-unicorn'
    after 'deploy:restart', 'unicorn:reload'    # app IS NOT preloaded
    after 'deploy:restart', 'unicorn:restart'   # app preloaded

The default_stage is the environment that will be run if not other options are passed to the 'cap deploy' call.  The stages list the 3 possible stages that we can use.  These will then coincide with the files in the config/deploy/ directory.

You will have to create each of these files to update with the new IP address or DNS name.  Here is an example of staging.rb:

    server "staging.example.com", :app, :web, :db, primary: true
    set :rails_env, 'staging'

First we need to setup the Capistrano:

    $  cap staging deploy:setup (or whatever server you are deploying to)

Next we will copy over a couple of configuration files to the shared directory on the server:

    $  scp config/mongoid.yml deploy@IPAddress://var/www/may_app_name/shared/system
    $  scp config/application.yml deploy@IPAddress://var/www/may_app_name/shared/system

If there were no errors, you can now deploy using:

    $  cap staging deploy:cold (or whatever server you are deploying to)

For more documentation on Capistrano see: http://guides.beanstalkapp.com/deployments/deploy-with-capistrano.html

### 5. Deployment

After all changes are pushed to the master repository and merged, deployment is as follows:

    $  cap staging deploy
    $  cap production deploy

### Attachment A

    worker_processes 1;
    user deploy; # for systems with a "nogroup"

    pid /tmp/nginx.pid;
    error_log /var/www/may_app_name/shared/log/nginx.error.log;

    events {
      worker_connections 1024; # increase if you have lots of clients
      accept_mutex off; # "on" if nginx worker_processes &gt; 1
    }

    http {
      include mime.types;
      default_type application/octet-stream;
      access_log /var/www/may_app_name/shared/log/nginx.access.log combined;
      sendfile on;
      tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
      tcp_nodelay off; # on may be better for some Comet/long-poll stuff
      &lt;!-- types_hash_max_size 2048; --&gt;

      upstream app_server {
        server 192.168.6.38:8080;
      }

      server {
        client_max_body_size 4G;
        server_name *.example.com;
        keepalive_timeout 600s;
        root /var/www/may_app_name/current/public;
        try_files $uri/index.html $uri.html $uri @app;

        location @app {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_redirect off;
          proxy_pass http://app_server;
        }

        # Rails error pages
        error_page 500 502 503 504 /500.html;
        location = /500.html {
          root /var/www/may_app_name/current/public;
        }
      }
    }</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1074</wp:post_id>
  <wp:post_date>2014-01-27 17:57:59</wp:post_date>
  <wp:post_date_gmt>2014-01-28 00:57:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ubuntu-precise-rails-nginx-unicorn-and-capistrano-2-15-5-server-setup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Capistrano deployment for Rails</title>
  <link>http://bob-roberts.net/2014/02/07/capistrano-deployment-for-rails/</link>
  <pubDate>Sat, 08 Feb 2014 00:30:37 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1087</guid>
  <description/>
  <content:encoded><![CDATA[I think I have found my all time favorite gem; <a href="https://github.com/sosedoff/capistrano-unicorn">capistrano-unicorn</a>

Simply put, if you use Capistrano and Unicorn, you have to use this gem.  I have messed around with setting up init.d scripts for starting and stopping Unicorn and they have all been more trouble than help.

All I had to do was add a couple of lines to my deploy.rb file:
<pre># Unicorn tasks
require 'capistrano-unicorn'
after 'deploy:restart', 'unicorn:reload'
after 'deploy:restart', 'unicorn:restart'</pre>

I think that the best thing about this gem is the added cap tasks that can be run from your machine:

<pre>cap unicorn:add_worker               # Add a new worker
cap unicorn:remove_worker            # Remove amount of workers
cap unicorn:reload                   # Reload Unicorn
cap unicorn:restart                  # Restart Unicorn
cap unicorn:show_vars                # Debug Unicorn variables
cap unicorn:shutdown                 # Immediately shutdown Unicorn
cap unicorn:start                    # Start Unicorn master process
cap unicorn:stop                     # Stop Unicorn</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1087</wp:post_id>
  <wp:post_date>2014-02-07 17:30:37</wp:post_date>
  <wp:post_date_gmt>2014-02-08 00:30:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>capistrano-deployment-for-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Simple Rails activity logging</title>
  <link>http://bob-roberts.net/2014/02/24/simple-rails-activity-logging/</link>
  <pubDate>Tue, 25 Feb 2014 00:03:52 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/02/24/simple-rails-activity-logging/</guid>
  <description/>
  <content:encoded><![CDATA[Nice write up.  We did something very similar as well for a project.  Never even heard of Papertrail but I guess it is too late anyhow!! LOL]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1097</wp:post_id>
  <wp:post_date>2014-02-24 17:03:52</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:03:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>simple-rails-activity-logging</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[44]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[58890793]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:29:"Simple Rails activity logging";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-02-17 21:21:42";s:9:"permalink";s:78:"http://julianrawcliffe.wordpress.com/2014/02/17/simple-rails-activity-logging/";s:7:"content";s:5885:"<div class="reblogged-content">One of the requirements of the projects I'm working on is to keep an audit trail of who's doing what with the managed data.

Now, you'd expect there to a be a whole stack of gems to cover this and indeed there are, but none of the quite fitted the bill for me: Papertrail (and others) while very very comprehensive are overkill for my needs (I don't need model versioning) and audited doesn't support Rails 4.

So I thought I'd have a bash at my own approach, but based on the table structure in Papertrail, and do it manually without the Rails helpers for models and controllers.

1. Create the table (okay, so I like the migration command)
<pre>$ rails g migration create_activity_logs item_type:string item_id:integer act_action:string updated_by:string activity:text act_tstamp:datetime</pre>
2. Edit the model to look like,
<pre>class CreateActivityLogs &lt; ActiveRecord::Migration
  def change
    create_table :activity_logs, :options =&gt; 'ENGINE=InnoDB DEFAULT CHARSET=utf8' do |t|
      t.string :item_type, :limit =&gt; 64, :null =&gt; false, :default =&gt; 'Object'
      t.integer :item_id, :null =&gt; false
      t.string :act_action, :default =&gt; 'update'
      t.string :updated_by, :limit =&gt; 32, :default =&gt; 'Anonymous'
      t.text :activity
      t.datetime :act_tstamp, :default =&gt; Time.now
    end
  end
end</pre>
(And I remove the options bit when using SQL Server database in production)

3. $ rake db:migrate

4. Prepare a very simple controller,
<pre>class ActivityLogsController &lt; ApplicationController
  protected
  def new
    @activity_log = ActivityLog.new
  end
  def create
    @activity_log = ActivityLog.new(activity_log_params)
  end
end</pre>
Can't get much simpler than this, The protected statement says that the methods are only available to other classes and are not routeable actions.

5. And an equally simple model,
<pre>class ActivityLog &lt; ActiveRecord::Base
  validates :item_type, :item_id, :updated_by, :activity, :presence =&gt; true
end</pre>
6. Some class methods in our other models to return the names of the items being acted on,
<pre>  def self.obj_name(id)
    o = Object.find(id)
    "#{o.name}"
  end</pre>
7. We add log_update methods to our controllers to submit the log requests.
<pre>def log_update
    oname = Object.obj_name(@thingy.id)
    log_msg = "id: #{@thingy.id}n#{oname}ndescription: #{@thingy.description}"
    ActivityLog.create(:item_type =&gt; controller_name.classify, :item_id =&gt; @thingy.id, :act_action =&gt; action_name, :updated_by =&gt; current_user.username, :activity =&gt; log_msg, :act_tstamp =&gt; Time.now)
  end</pre>
Note here that we have <em>current_user.username,</em> in the updated_by column. I've configured Devise with ldap_authentication (against an Active Directory server - another post, maybe?) to maintain the user sessions.

8. Update our controllers to indicate when we want activities to be logged,
<pre>after_action :log_update, only: [:create, :update, :destroy]</pre>
9. Getting ambitious, we can even log the successful login and logout events (following the advice at <a title="Devise logging login failure - StackOverflow" href="http://stackoverflow.com/questions/12873957/devise-log-after-auth-failure/12877182#12877182" target="_blank">http://stackoverflow.com/questions/12873957/devise-log-after-auth-failure/12877182#12877182</a> and  <a title="Overriding Devise session controller - StackOverflow" href="http://stackoverflow.com/questions/13836139/rails-how-to-override-devise-sessionscontroller-to-perform-specific-tasks-when" target="_blank">http://stackoverflow.com/questions/13836139/rails-how-to-override-devise-sessionscontroller-to-perform-specific-tasks-when</a>, I can't guarantee to fully understand the warden stuff - I only do the easy bits!
<pre>class SessionsController &lt; Devise::SessionsController
  before_filter :log_logout, :only =&gt; :destroy  #add this at the top with the other filters
  after_filter :log_failed_login, :only =&gt; [:new, :create]

  def create
    super
    username = params[:user]["username"]
    log_msg = "Successful login for #{username}"
    ActivityLog.create(:item_type =&gt; controller_name.classify, :item_id =&gt; 0, :act_action =&gt; action_name, :updated_by =&gt; params[:user]["username"], :activity =&gt; log_msg, :act_tstamp =&gt; Time.now)
  end
 private
  def log_failed_login
    Rails.logger.debug "n***nFailed login with username : #{request.parameters["username"]}n***n" if failed_login?
  end

  def failed_login?
    (options = env["warden.options"]) &amp;&amp; options[:action] == "unauthenticated"
  end

  def log_logout
    log_msg = "Logging out : #{current_user.username}"
    ActivityLog.create(:item_type =&gt; controller_name.classify, :item_id =&gt; 0, :act_action =&gt; action_name, :updated_by =&gt; current_user.username, :activity =&gt; log_msg, :act_tstamp =&gt; Time.now)
  end
end</pre>
10. Update the routes to include the sessions controller override,
<pre>devise_for :users, controllers: {sessions: "sessions"}, :path_names =&gt; { :sign_in =&gt; "login", :sign_out =&gt; "logout" }</pre>
So all this, combined with CanCan for authorization, means I have a standard way of providing role-based, directory-authenticated access to a web application with logging of user actions. I had no problems adding this to a second project and will do so with others.

My next project is to turn at least some of this into a gem for easy deployment in a project; I've started with the update_logger. I may blog on progress with this.

If I ever do need model versioning, Papertrail will be the way to go. I so wanted it to work with my project.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Feature specs - RSpec</title>
  <link>http://bob-roberts.net/2014/02/24/feature-specs-rspec/</link>
  <pubDate>Tue, 25 Feb 2014 00:06:42 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/02/24/feature-specs-rspec/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1098</wp:post_id>
  <wp:post_date>2014-02-24 17:06:42</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:06:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>feature-specs-rspec</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[64067922]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:21:"Feature specs - RSpec";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-02-12 12:34:41";s:9:"permalink";s:56:"http://rohitbhore.wordpress.com/2014/02/10/feature-spec/";s:7:"content";s:2883:"<div class="reblogged-content">
<h1 id="toc_0">Integration test with RSpec and Capybara</h1>
<h2 id="toc_1">Feature spec</h2>
Generally we use controller spec, model spec to test our application. What if when you will needs to put everything together? Feature spec is nothing but integration testing.

Feature spec makes sure that models and controllers all workes nicely with other models and controllers in the application.
<h2 id="toc_2">Capybara</h2>
<h4 id="toc_3"><strong>Problem</strong></h4>
The old RSpec <a title="request-spec" href="https://www.relishapp.com/rspec/rspec-rails/docs/request-specs/request-spec">requests spec</a> used Capybara 1.x as framework for both <em>Integration Test</em> and in <a title="capybara" href="https://github.com/jnicklas/capybara">capybara</a>.
<h4 id="toc_4"><strong>Solution</strong></h4>
Capybara 2.x introduced a few changes with some advanced use. So it's becomes the term feature instead of request.

If you are <a title="upgrading to Capybara 2.0" href="https://github.com/rspec/rspec-rails/blob/master/Capybara.md">upgrading to Capybara 2.0</a>, you'll need to do a few things:
<ul>
<li>Upgrade rspec-rails to 2.12.0 or greater</li>
	<li>Move all the tests from spec/request to spec/features</li>
</ul>
<em>Gemfile</em>
<div>
<div>
<pre>group :test do
  gem "rspec-rails", "~&gt; 2.12.2"
  gem "capybara", "~&gt; 2.0"
end</pre>
</div>
</div>
Capybara lets you know about how a user would interact with your application through a web browser, by using simple methods like click_button, click_link, fill_in, and visit.
<h4 id="toc_5">Example</h4>
Also you will need to use <strong>feature</strong> instead of <strong>describe</strong>, <strong>scenario</strong> instead of <strong>it</strong> and <strong>background</strong> instead of <strong>before</strong> this to make it more readable.

Here is one self explanatory example.

<em>spec/features/signup_spec.rb</em>
<div>
<div>
<pre>require 'spec_helper'

feature 'Visitor signs up' do
  scenario 'with valid email and password' do
    sign_up_with 'email@example.com', 'password    
    expect(page).to have_content('Welcome! You have signed up successfully.')
  end

  scenario 'with invalid email' do
    sign_up_with 'invalid_email', 'password'    
    expect(page).to have_content('Sign in')
  end

  scenario 'with blank password' do
    sign_up_with 'email@example.com', ''
    expect(page).to have_content('Sign in')
  end

  def sign_up_with(email, password)
    visit sign_up_path
    fill_in 'Email', with: email
    fill_in 'Password', with: password
    click_button 'Sign up'
  end
end</pre>
</div>
</div>
In the <a href="https://github.com/jnicklas/capybara">official documentation</a> you will find more interesting information about the new features/changes made for Capybara 2.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[13]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Refactoring with Rubocop</title>
  <link>http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/</link>
  <pubDate>Tue, 25 Feb 2014 00:09:27 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/02/24/refactoring-with-rubocop/</guid>
  <description/>
  <content:encoded><![CDATA[Awesome, awesome, awesome.  I thought it was going to be a pun.  Thanks for enlightening me to Rubocop!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1099</wp:post_id>
  <wp:post_date>2014-02-24 17:09:27</wp:post_date>
  <wp:post_date_gmt>2014-02-25 00:09:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>refactoring-with-rubocop</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[1461]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[57073557]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:24:"Refactoring with Rubocop";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-02-03 21:09:04";s:9:"permalink";s:70:"http://projectramon.wordpress.com/2014/02/03/refactoring-with-rubocop/";s:7:"content";s:6461:"<div class="reblogged-content">
<a href="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_header_img_prod.jpg"><img src="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_header_img_prod.jpg" alt="lunch_panoply6_header_img_prod" width="553" height="956" class="aligncenter size-full wp-image-1477" data-originalSrc="http://projectramon.files.wordpress.com/2014/02/lunch_panoply6_header_img_prod.jpg" data-rehosted="1"></a>

Hello and happy Monday!

I first wanted to thank the various people who have showed support for my TDD series last week, I sincerely appreciate the re-tweets and favorites!

Over the weekend, while perusing the web I stumbled upon <a href="https://github.com/bbatsov/rubocop" target="_blank">Rubocop</a>. Running Rubocop looks a lot like running Rspec or Test::Unit in our terminal. Instead of running our specs though, Rubocop will generate 'cops' alerting us to various style-guide offenses, the gem even has an auto correct feature in experimentation at the moment. My thoughts in two words or less about Rubocop, pretty sweet! Lets take a look at how to use Rubocop as I attempt to refactor lunch_panoply and see if we can't clean up some of the rough edges.
<h3>Rubocop Setup</h3>
The setup is extremely easy, all we do is type <code>gem install rubocop</code> from our command-line, or if you're using Bundler you can add <code>gem 'rubocop'</code> to your Gemfile, and install it by typing <code>bundle install</code> in your terminal.

In order to run Rubocop on a specific file, we can just pass the path to file after the <code>rubocop</code> command like so:  <code>rubocop models/model_name.rb</code>.

Thats all there is to it! To run Rubocop, we can think of how we run Zeus or Rspec in our terminal. From our application's root in the terminal we type <code>rubocop</code> to find out what our offenses will be. 

<a href="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img1.jpg"><img src="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img1.jpg" alt="lunch_panoply6_img1" width="535" height="70" class="aligncenter size-full wp-image-1462" data-originalSrc="http://projectramon.files.wordpress.com/2014/02/lunch_panoply6_img1.jpg" data-rehosted="1"></a>

Running the command above generates offenses.

<a href="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img2.jpg"><img src="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img2.jpg" alt="lunch_panoply6_img2" width="601" height="271" class="aligncenter size-full wp-image-1463" data-originalSrc="http://projectramon.files.wordpress.com/2014/02/lunch_panoply6_img2.jpg" data-rehosted="1"></a>

<h3>And The... Law Won</h3>

Looks like Rubocop had a field day with my <code>venue_spec</code> file. Lets get on top of addressing a few of these. Rubocop has 3 different types of 'cops'. I think of cops as specs, but instead of creating them myself as I test-drive, they're already built into the gem and alert us to three things about our code.

<ol>
<li>Style</li>
<li>Lint</li>
<li>Rails</li>
</ol>
<strong>Style</strong>: Style cops check for stylistics problems in our code, nearly all of these are based on the <a href="https://github.com/bbatsov/ruby-style-guide" target="_blank">Ruby Style Guide.</a>
<strong>Lint</strong>: Lint cops check for bad practices and errors in our code. 
<strong>Rails</strong>: Rails cops are specific to the Rails framework. These are the only cops not used by default. 

We can single out Lint cops when desiring to discover offenses by passing in an <code> -l </code> argument when entering the <code>rubocop</code> command like 
so: <code>rubocop -l spec/models/venue_spec.rb</code>

Rails cops aren't used by default when entering the <code>rubocop</code> command, in order to add them to the party, we must specifically request them like so: 
<code>rubocop -R models/model_name.rb</code>

<h3>Rubocop in Action</h3>

Now that we have some of the basics covered lets take this out for a spin. 

<a href="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img3.jpg"><img src="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img3.jpg" alt="lunch_panoply6_img3" width="649" height="213" class="aligncenter size-full wp-image-1471" data-originalSrc="http://projectramon.files.wordpress.com/2014/02/lunch_panoply6_img3.jpg" data-rehosted="1"></a>

230 offenses detected Yuck! As we can see from the image above, all of these offenses are due to the <code>style</code> cops not aren't happy about tabs being used instead of spaces. I have my sublime text 2 formatted to spaces already as far as I know, so I'm not sure as to why we're generating fake offenses. Luckily we can run the same command again with our <code>Lint</code> argument to gain a clear picture of the error-related offenses only. Typing <code>rubocop -l spec/models/menu_item_spec.rb</code> returns the following output:

<a href="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img4.jpg"><img src="http://bobspython.files.wordpress.com/2014/02/lunch_panoply6_img4.jpg" alt="lunch_panoply6_img4" width="676" height="105" class="aligncenter size-full wp-image-1472" data-originalSrc="http://projectramon.files.wordpress.com/2014/02/lunch_panoply6_img4.jpg" data-rehosted="1"></a>

<h3>Consensus</h3>

My first impression of this gem is thumbs up! There are a few things I'd like to look into about reducing or eliminating false offenses being generated on the style front, but overall Rubocop is an extremely easy to setup, and quick to implement way to deoderize your code base. 

Rubocop shouldn't overshadow the <a href="https://github.com/bbatsov/ruby-style-guide" target="_blank">Ruby Style Guide</a> created with community input and put together by <a href="https://twitter.com/bbatsov" target="_blank">Bozhidar Batsov</a>. 

It really makes my day when I run across other developer's creations, especially ones that aid with my goal for me of becoming competent enough for employment with a company that values the ongoing process of learning. Keeping our code neat and tidy, is one of many things that I am hoping will allow me to appear desirable as I look for entry-level work.

If you find yourself desiring to improve the way your code appears to others, take some time and check out <a href="https://github.com/bbatsov/rails-style-guide" target="_blank">Bozhidar's Github page</a>.</div>";s:15:"images_mirrored";i:5;}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Detecting IE browser in Rails app</title>
  <link>http://bob-roberts.net/2014/02/25/detecting-ie-browser-in-rails-app/</link>
  <pubDate>Wed, 26 Feb 2014 02:32:51 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1105</guid>
  <description/>
  <content:encoded><![CDATA[<p>I have been working an app that is used by many users that are still on MS XP and using IE8.  It is a javascript heavy app and I have many issues in dealing with the cross-browser compatibility (IE) but today I found a great gem.</p><p>I was trying everything using CSS to hide a div in IE 8 to no avail.  And then <a href="https://github.com/fnando/browser">Browser Gem</a> to the rescue.</p><p>I added a simple check for IE 8 in my view:</p><p>    = if browser.ie8?</p><p>Thank you browser gem!!!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1105</wp:post_id>
  <wp:post_date>2014-02-25 19:32:51</wp:post_date>
  <wp:post_date_gmt>2014-02-26 02:32:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>detecting-ie-browser-in-rails-app</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="ie-8"><![CDATA[IE 8]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d68912cbc87a957a40ddeeaf870950fd</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_38cb566520d63582b285e19835d0897c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1750</wp:comment_id>
    <wp:comment_author><![CDATA[m3talsmith (@m3talsmith)]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>68.98.113.121</wp:comment_author_IP>
    <wp:comment_date>2014-04-12 09:18:11</wp:comment_date>
    <wp:comment_date_gmt>2014-04-12 16:18:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<!-- [if IE 8]&gt;-->
some ie8 specific code here


http://www.quirksmode.org/css/condcom.html]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1397319492</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397319492.318769931793212890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/3239673616/240c9589c1ec72869185203d58c99090_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>9442942</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1397319492</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-12 16:18:11</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Ruby on Rails testing with Select2</title>
  <link>http://bob-roberts.net/2014/03/09/testing-with-select2/</link>
  <pubDate>Mon, 10 Mar 2014 01:31:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1116</guid>
  <description/>
  <content:encoded><![CDATA[I posted a while back about using the select2-rails gem together with the select2-capistrano gem.  I recently upgraded an app and found that my tests that were using select2 were all failing.  I did some googling and it seems that the select2-capistrano gem is no longer active.

Well, I went about it another way then.

First off, I do not add the class to each drop-down select but rather I do it globally using a collection_select_input.rb file in app/inputs/ like so:

[code language="ruby"]
    class CollectionSelectInput &amp;lt; SimpleForm::Inputs::CollectionSelectInput
      def input_html_classes
        super.push(&#039;chosen-select&#039;)
      end
    end
[/code]

So when I started to have issues with capybara not being able to use the select2 drop-down my fix was to only use the global push if not in test environment:

[code language="ruby"]
    class CollectionSelectInput &amp;lt; SimpleForm::Inputs::CollectionSelectInput
      unless Rails.env.test?
        def input_html_classes
          super.push(&#039;chosen-select&#039;)
        end
      end
    end
[/code]

So now I have good old normal drop downs in test environment and the ever awesome select2 drop downs in production.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1116</wp:post_id>
  <wp:post_date>2014-03-09 18:31:59</wp:post_date>
  <wp:post_date_gmt>2014-03-10 01:31:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>testing-with-select2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Impersonate an user in Rails</title>
  <link>http://bob-roberts.net/2014/03/13/impersonate-an-user-in-rails/</link>
  <pubDate>Fri, 14 Mar 2014 02:21:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/03/13/impersonate-an-user-in-rails/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1122</wp:post_id>
  <wp:post_date>2014-03-13 19:21:21</wp:post_date>
  <wp:post_date_gmt>2014-03-14 02:21:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>impersonate-an-user-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[311]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[2975830]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:28:"Impersonate an user in Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2010-03-31 10:42:36";s:9:"permalink";s:78:"http://adhirajrankhambe.wordpress.com/2009/02/15/impersonate-an-user-in-rails/";s:7:"content";s:7105:"<div class="reblogged-content">I have been using Rick Olson's <a href="http://agilewebdevelopment.com/plugins/restful_authentication" target="_blank">restful_authentication</a> plugin for quite some time now.

Recently I came across a requirement where the Site Admin was required to be able, to impersonate any user on the site.

Here's how I achieved this:

<strong>Approach</strong>:

When âSite Adminâ logs-in on the site, I create two sessions namely:

<code>session[:user_id]</code>
<code>session[:original_user_id]</code>

If the Site Admin impersonates an user on the site,

replace the âsession[:user_id]â with the id of the user we wish to impersonate.

So the Site Admin becomes the intended user.

Whenever Site Admin wants to stop impersonating,

replace âsession[:user_id]â data with âsession[:original_user_id]â

Site Admin regains original admin profile.

<strong>Implementation:</strong>

<em>lib/authenticated_system.rb</em> (Generated by restful_authentication plugin)

<code># Store the given user id in the session.
def current_user=(new_user)
  session[:user_id] = new_user ? new_user.id : nil
  @current_user = new_user || false
end</code>

I overloaded this method in my <em>Application Controller</em>:

<code>def current_user=(new_user)
  super</code>
    
<code>  if new_user &amp;&amp; new_user.isAdmin?
    session[:original_user_id] = new_user.id
  end
end</code>

You could as well modify the file <em>lib/authenticated_system.rb</em> (I won't recommend it though)

<em>isAdmin?</em> is a helper action in the User model

<em>app/models/user.rb</em>

<code>def isAdmin?
  return roles.include?(Role.find_by_name('Administrator'))
end</code>

The above action is very specific to my project's ERM. You could as well use:

<code>def isAdmin?
  return login == âadminâ
end</code>

In your view:

<code>&lt;%= link_to "Impersonate", {:controller =&gt; "admin", :action =&gt; "impersonate", :user_id =&gt; user.id} %&gt;
</code>

Here's the actual code you have been looking for since you started reading this article:

<code>def impersonate
  if current_user &amp;&amp; current_user.isAdmin?
    session[:user_id] = params[:user_id]
    redirect_to :controller =&gt; 'users', :action =&gt; params[:user_id]
  end
end</code>

In order to stop impersonating,

In your view:

<code>&lt;% if @current_user %&gt;
  &lt;% if session[:original_user_id] &amp;&amp; User.find(session[:original_user_id]).isAdmin? &amp;&amp; session[:original_user_id] != session[:user_id] %&gt;
    &lt;%= link_to "Administer", {:controller =&gt; "admin", :action =&gt; "stop_impersonating"} %&gt;
  &lt;% else %&gt;
    &lt;%= link_to "Logout", '/logout' %&gt;
  &lt;% end %&gt;
&lt;% else %&gt;
  &lt;%= link_to "Login", '/login'} %&gt;
&lt;% end %&gt;</code>

Action to stop impersonating:

<code>def stop_impersonating
  if session[:original_user_id] &amp;&amp; User.find(session[:original_user_id]).isAdmin?
    session[:user_id] = session[:original_user_id]
    redirect_to :controller =&gt; "site", :action =&gt; "home"
  end
end</code>

After brainstorming over various approaches, this was the easiest solution I found to achieve impersonation.
Might not be the best solution. Looking forward for your feedback.

<p style="text-align:left;" class="getsocial"><a title="Add to Facebook" href="http://www.facebook.com/sharer.php?u=http://adhirajrankhambe.wordpress.com/2009/02/15/impersonate-an-user-in-rails/" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3012.png" alt="Add to Facebook"></a><a title="Add to Digg" href="http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;title=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3022.png" alt="Add to Digg"></a><a title="Add to Del.icio.us" href="http://del.icio.us/post?url=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;title=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3032.png" alt="Add to Del.icio.us"></a><a title="Add to Stumbleupon" href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;title=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3042.png" alt="Add to Stumbleupon"></a><a title="Add to Reddit" href="http://reddit.com/submit?url=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;title=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3052.png" alt="Add to Reddit"></a><a title="Add to Blinklist" href="http://www.blinklist.com/index.php?Action=Blink/addblink.php&amp;Description=&amp;Url=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;Title=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3062.png" alt="Add to Blinklist"></a><a title="Add to Twitter" href="http://twitter.com/home/?status=Impersonate%20an%20user%20in%20Rails+%40+http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3072.png" alt="Add to Twitter"></a><a title="Add to Technorati" href="http://www.technorati.com/faves?add=http://adhirajrankhambe.wordpress.com/2009/02/15/impersonate-an-user-in-rails/" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3082.png" alt="Add to Technorati"></a><a title="Add to Yahoo Buzz" href="http://buzz.yahoo.com/buzz?targetUrl=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;headline=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3092.png" alt="Add to Yahoo Buzz"></a><a title="Add to Newsvine" href="http://www.newsvine.com/_wine/save?u=http%3A%2F%2Fadhirajrankhambe.wordpress.com%2F2009%2F02%2F15%2Fimpersonate-an-user-in-rails%2F&amp;h=Impersonate%20an%20user%20in%20Rails" rel="nofollow" target="_blank"><img style="border:0;margin:0;padding:0;" src="http://getsocialserver.wordpress.com/files/2009/08/gs3102.png" alt="Add to Newsvine"></a></p>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Formatting Time and Date in Ruby on Rails Using strftime()</title>
  <link>http://bob-roberts.net/2014/03/13/formatting-time-and-date-in-ruby-on-rails-using-strftime/</link>
  <pubDate>Fri, 14 Mar 2014 04:24:44 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/03/13/formatting-time-and-date-in-ruby-on-rails-using-strftime/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1123</wp:post_id>
  <wp:post_date>2014-03-13 21:24:44</wp:post_date>
  <wp:post_date_gmt>2014-03-14 04:24:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>formatting-time-and-date-in-ruby-on-rails-using-strftime</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[721]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40540558]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[1124]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:58:"Formatting Time and Date in Ruby on Rails Using strftime()";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-03-13 06:48:50";s:9:"permalink";s:93:"http://blog.41studio.com/2014/03/13/formatting-time-and-date-in-ruby-on-rails-using-strftime/";s:7:"content";s:1796:"<div class="reblogged-content">By default Rails will display the time and date like this: 2014-03-10 10:25:41 +0700. So how if we want to customize format of time and date? In Ruby on Rails we can use strftime() method to format the time and date in order to make it more readable. Example: March 10, 2014.

It's really simple to use strftime() method, all we need to is give the object the time and date format, i.g.:

<pre>
current_time = Time.now
current_time.strftime("%B %d, %Y")
=&gt; "March 13, 2014"
</pre>

Where "%b %d, %Y" is the format you want. Here's some of the commonly used formats:

<pre>
%a - Short weekday name (“Sun”)

%A - Full weekday name (“Sunday”)

%b - Short month name (“Jan”)

%B - Full month name (“January”)

%m - Month of the year (01..12)

%c - Preferred local date and time ("Thu Mar 13 11:30:15 2014")

%d - Day of the month (01..31)

%H - Hour of the day, 24-hour clock (00..23)

%I - Hour of the day, 12-hour clock (01..12)

%M - Minute of the hour (00..59)

%p - Meridian indicator upcase (“AM” or “PM”)

%P - Meridian indicator downcase (“am” or “pm”)

%S - Second of the minute (00..60)

%x - Simple date ("03/13/14")

%X - Simple time ("13:20:16")

%y - Year without a century (00..99)

%Y - Year with century ("2014")
</pre>

You can also use rails default rails "created_at" field like this:

<pre>
@post.created_at.strftime("Posted on %B %d, %Y at %H:%M")
=&gt; "Posted on March 13, 2014 at 13:45"
</pre>

<hr>
<em>Written by <a href="http://twitter.com/irfan18s" target="_blank">Irfan Fadilah</a> - Author at <a href="http://www.41studio.com/" target="_blank">41studio</a>
Reference <a href="http://apidock.com/" rel="nofollow">http://apidock.com/</a></em>
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1639</wp:comment_id>
    <wp:comment_author><![CDATA[julianrawcliffe]]></wp:comment_author>
    <wp:comment_author_email>julianrawcliffe@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://julianrawcliffe.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>82.30.66.96</wp:comment_author_IP>
    <wp:comment_date>2014-03-28 13:35:36</wp:comment_date>
    <wp:comment_date_gmt>2014-03-28 20:35:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[A really neat way a really pushing decent date formatting into the application is to use an initializer, say, config/initializers/date_format.rb, with something like,

Date::DATE_FORMATS.merge!(
:my_date =&gt; lambda { |time| time.strftime("#{ActiveSupport::Inflector.ordinalize(time.day)} %b %Y") })
and the following code i a view template,

variable_name.date_field.to_s(:my_date)

which can make it easier to get consistent formatting across the application instead of having to remember the strftime format used from one place to another.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>56306325</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1396038936.79982089996337890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:15:"julianrawcliffe";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1396052052</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1396052052</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-03-28 20:35:36</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1790</wp:comment_id>
    <wp:comment_author><![CDATA[Ruby Programming]]></wp:comment_author>
    <wp:comment_author_email>alicesam9211@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.mab360.com</wp:comment_author_url>
    <wp:comment_author_IP>39.55.1.0</wp:comment_author_IP>
    <wp:comment_date>2014-04-17 18:13:58</wp:comment_date>
    <wp:comment_date_gmt>2014-04-18 01:13:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am a beginner in field of development and I love ruby on rails programming and looking for learning resources and your post is very informative and useful in this case.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397783638.927854061126708984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1397786498</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1397786498</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397786499.5363800525665283203125;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-18 01:13:58</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Pre-Caching a page in Rails</title>
  <link>http://bob-roberts.net/2014/03/30/pre-caching-a-page-in-rails/</link>
  <pubDate>Mon, 31 Mar 2014 00:19:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1127</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">I recently had to figure out how to basically freeze a page in a rails app so that any changes to the dynamic data would not change the front facing view.</p>
<p style="text-align:justify;">The app has a “web page” that is created dynamically and is then “published” to the web on a weekly basis. As this is always the same view, I needed to figure out how to save the view from each week. StackOverflow led me to the best option being to cache the page.</p>
<p style="text-align:justify;">Easy enough, but what happens if nobody visits the page for one week? It is never cached. So after some googling I found that I could curl the page from the app and that cur (<a href="http://linux.about.com/od/commands/l/blcmdl1_curl.htm"><b>curl</b></a> is a client to get documents/files from or send documents to a server, using any of the supported protocols (HTTP, HTTPS, FTP, GOPHER, DICT, TELNET, LDAP or FILE). The command is designed to work without user interaction or any kind of interactivity.) l would be sufficient enough to make the page cache.</p>
<p style="text-align:justify;">I set the controller to caches_page on the show action. Then in the controller that performs the “publishing” I set it to clear the cached page. Nothing happened. I manually cleared the cache both in the project as well as in the browser and the page still displayed!</p>
<p style="text-align:justify;">I finally found that the cached page was in my public folder and not the tmp folder. At first I thought that it was something that I set up incorrectly but then realized that it was how the page was setup in the first place. As this is a front facing page requiring no authentication it was named spaced in the controllers/public directory with the views in the /public directory. So that is why the cached pages were going to the public directory and not to the tmp directory as is the norm.</p>
<p style="text-align:justify;">Now I had to manually find the cached copy and remove it.</p>
<p style="text-align:justify;">As there really is not a need for the page to be instantly cached and no need to the user to wait for it, I moved it into a background job using Sidekiq.</p>
<p style="text-align:justify;">So first I created a helper method to do some of the initial processing.  To the controller that does the publishing I need to add a couple of things:</p>


[code language="ruby"]

include CacheHelper  ## this tells it to use the helper
update_web_cache     ## this is called in the action to publish

[/code]

So when the user publishes it will call the CacheHelper:

[code language="ruby"]
## file cache_helper.rb
module CacheHelper

 def update_web_cache
   FileUtils.rm_rf(Dir[&quot;#{Rails.root}/public/path_to_cached_view.html&quot;])
   url = &quot;#{ENV['HOSTNAME']}&quot; + path_to_the_view_needed_to_be_cached
   CacheWorker.perform_async(url)
 end
end
[/code]

First I had to manually remove the cached view and I did so using FileUtils. Then as this is in the helper I have access to my model and therefor I can get the path to the view based on the model. Last, I tell Sidekiq to do it's thing.

OK, so to this point we have removed the old cache but now we need to create the new cache. After a lot more googling the only way I could figure out how to curl the page was with a rake task. Further down the rabbit hole...

In the Sidekiq worker, I added the code to run the rake task. There were a few options to do this but I found the execute command to be the easiest and it worked.

[code language="ruby"]
## file cache_worker.rb
class CacheWorker
  include Sidekiq::Worker

  def perform(url)
   %x(bundle exec rake curl[&quot;#{url}&quot;])
 end
end
[/code]

This then takes the url that it is passed and runs the rake task:

[code language="ruby"]
## file lib/tasks/curl.rake
desc &quot;curl&quot;
task :curl, [:url] =&gt; :environment do |task, args|
 system &quot;curl #{args.url}&quot;
end
[/code]


Bottom line, created a background job that calls a rake task to curl a page.</pre>
Now, if there is any easier way to do this I sure would love to know.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1127</wp:post_id>
  <wp:post_date>2014-03-30 17:19:56</wp:post_date>
  <wp:post_date_gmt>2014-03-31 00:19:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pre-caching-a-page-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby .try method</title>
  <link>http://bob-roberts.net/2014/04/01/try/</link>
  <pubDate>Wed, 02 Apr 2014 05:04:28 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/04/01/try/</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1132</wp:post_id>
  <wp:post_date>2014-04-01 22:04:28</wp:post_date>
  <wp:post_date_gmt>2014-04-02 05:04:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>try</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[115]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[62598923]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:4:".try";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-03-29 08:10:09";s:9:"permalink";s:44:"http://gemfile.wordpress.com/2014/03/26/try/";s:7:"content";s:1688:"<div class="reblogged-content">This Ruby method returns nil rather than raising an exception when called on a non-existent object.

[code language="bash"]
$ rails console

2.1.0 :001 &gt; nil.admin?
NoMethodError: undefined method 'admin?' for nil:NilClass
... stack trace ...

2.1.0 :002 &gt; nil.try(:admin)
 =&gt; nil
[/code]

<!--more-->

Here's a practical example: Is the currently signed in user an admin? If so, he should see site admin links, otherwise they should be hidden:

<strong>any_view_file.html.erb:</strong>

[code gutter="false" language="ruby"]
&lt;% if current_user.admin? %&gt;
  Show links
&lt;% end %&gt;
[/code]

The above code breaks when the page is viewed by a non-signed-in visitor and <strong>current_user</strong> is not set (i.e. is nil).

The <strong>if</strong> statement can be augmented to include two tests:

[code gutter="false" language="ruby"]
&lt;% if current_user &amp;&amp; current_user.admin? %&gt;
  Show links
&lt;% end %&gt;
[/code]

Or the <strong>try</strong> method can be used to clean up the code:

[code gutter="false" language="ruby"]
&lt;% if current_user.try(:admin) %&gt;
  Show links
&lt;% end %&gt;
[/code]

The <strong>if</strong> statement will return <strong>true</strong> if the currently signed in user is an admin, <strong>false</strong> if he is not, and <strong>nil</strong> if there is no signed in user. Since <strong>if nil</strong> evaluates to <strong>false</strong>, the admin links remain nicely hidden.

(This approach merely cleans up the layout for unauthorized users. It should not be relied on to actually prevent unauthorized access to controller actions.)</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Avoid Common mistakes in Ruby on Rails Development</title>
  <link>http://bob-roberts.net/2014/04/01/avoid-common-mistakes-in-ruby-on-rails-development/</link>
  <pubDate>Wed, 02 Apr 2014 05:08:42 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/04/01/avoid-common-mistakes-in-ruby-on-rails-development/</guid>
  <description/>
  <content:encoded><![CDATA[Pretty nice write up.  I never saw the find_each before.  Will have to try that out :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1133</wp:post_id>
  <wp:post_date>2014-04-01 22:08:42</wp:post_date>
  <wp:post_date_gmt>2014-04-02 05:08:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>avoid-common-mistakes-in-ruby-on-rails-development</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[3]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[66319701]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:50:"Avoid Common mistakes in Ruby on Rails Development";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-03-29 10:32:46";s:9:"permalink";s:109:"http://rubyonrailswebdevelopment.wordpress.com/2014/03/29/avoid-common-mistakes-in-ruby-on-rails-development/";s:7:"content";s:8664:"<div class="reblogged-content">Many programmers face similar problems over and over. So, here I am going to list out the common mistakes that can be avoided in <a title="Ruby on Rails Development" href="http://www.allerin.com" target="_blank">Ruby on Rails Development</a>.

<strong>1. Database column Indexing</strong>
At the beginning of programming , mostly during writing migrations, we forget to add indexes , which may or may not have any effect in initial stages of application, but will have drastic delay in fetching records from the database as the table size increases.

<strong>2. ActiveRecord transaction for saving multiple object</strong>
Whenever saving multiple objects in a single request, always use ActiveRecord::Base::transaction method to support atomicity. So, if any record has not saved the entire transaction, will get rolled back and nothing will be saved into the database.
Always add indexes to the column being used for searching records.
<span style="text-decoration:underline;">Example:</span>
<pre>ActiveRecord::Base.transaction do
  @tasks.each do |task|
    task.save!
  end
end</pre>
<strong>3. Using delete_all instead of destroy_all</strong>
ActiveRecord::Base::delete_all or ActiveRecord::Base#delete method deletes the record(s) from the database without firing any callback. So, This method must be used sensibly.
Where as ActiveRecord::Base::destroy_all or ActiveRecord::Base#destroy executes before_destroy and after_destroy callbacks.

<strong>4. Using IN sub-queries</strong>
Relational Database supports different types of sub-queries. Unfortunately, one of them is a performance disaster.

IN and NOT IN sub-queries.
Static array in these queries are fine, but when used sub-query inside, it reduces the performance and also there are limitation on the number of elements in these queries depending on different databases.

Do Not use queries like IN or NOT IN

These queries must be written using EXISTS or NOT EXISTS predicates to avoid serious performance issues.

<span style="text-decoration:underline;">Note:</span> Oracle optimizes IN fairly well same as EXITS, So both can be used. But not the same case with NOT IN vs NOT EXISTS. Better to use NOT EXISTS even on Oracle instead of NOT IN predicate.

<strong>5. Storing Session in database</strong>
It is very easy to store session data in relational databases, but it is the most expensive thing.
Session data are stored and retrieved more frequently and can create scenario when the database can go unresponsive for the more important work to be done.
If there is a need of database for string session data, then use 'Memcache' or 'Redis'.

<strong>6. Set the primary key explicitly for database views</strong>
Sometimes we need to make use of database views for complex data joined from different tables, to reduce the overheads of fetching data in a single query and also to support the searching and sorting based on the columns of joined tables.

Always set the primary key explicitly in the respective model, this will provide the flexibility to define association with other models.

<span style="text-decoration:underline;">Example:</span>
<pre>Class UserDetailsView &lt; ActiveRecord::Base
  self.table_name = :user_details # user_details is a view in database
  self.primary_key = :id # view_contains id from the joind user table and can be used as primary key for this model
end</pre>
<strong>7. Use find_each</strong>
Do not use each method for iterating large set of records(ActiveRecord::Relation). It will fetch all the record in a single query from the database and will dump into the memory, causing
performance degradation if the there is not enough memory. So, better make use of find_each method, this method not only etches record in batches from the database but yields those once at a time too. Once the current batch is processed another batch will be fetched from the database. So no need to have all the records at once in the memory.
<span style="text-decoration:underline;">Example:</span>
<pre>Book.where(:published =&gt; true).find_each do |book|
  puts "Do something here!"
end</pre>
<strong>8. Make use of Ranges instead of comparisons for numbers</strong>
No more if x &gt; 1000 &amp;&amp; x &lt; 2000 nonsense. Instead:
<pre> year = 1972
 case year
   when 1970..1979: "Seventies"
   when 1980..1989: "Eighties"
   when 1990..1999: "Nineties"
 end</pre>
<strong>9. Use pluck instead of map&lt;/strong&gt;</strong>
We often need to find a single column from the database, So many of us make use of map method on ActiveRecord::Relation.
Like:
<pre>User.active.select(:name).map(&amp;amp;:name)</pre>
Or, even worse:
<pre>User.active.map(&amp;amp;:name)</pre>
Instead use pluck method:
<span style="text-decoration:underline;">Example:</span>
<pre>User.active.pluck(:name)</pre>
<strong>10. Allow both single item and and array to make use of the same loop without condition</strong>
I have observed that few folks write something like this
<pre>(items.is_a?(Array) ? Items : [items]).each do |item|
  #------------------
end</pre>
Instead use following:
<pre>*items].each do |item|
  #------------------
end</pre>
Above code will take care of items containing either a single object or array.

<strong>11. Rescue to the rescue</strong>
Use rescue for one liner statements which may throw error instead of condition:
<pre>hsh = {:age =&gt; 50}
hsh[:name].downcase #=&gt; Error
hsh[:name].try(:downcase) #=&gt; nil</pre>
Or, even worse:
<pre>hsh[:name] ? hsh[:name].downcase : nil #=&gt; nil</pre>
Instead use as below:
<pre>hsh[:name].downcase rescue nil #=&gt; nil</pre>
OR
<pre>hsh[:name].to_s.downcase #=&gt; ''</pre>
<strong>12. Try to reduce redundancy using Ruby's logic</strong>
method for checking odd number:
<pre>def odd?(x)
  x % 2 == 0 ? false : true
end</pre>
Instead make use of Ruby logics and simply it somewhat more.
<pre>def odd?(x)
  x % 2 != 0
end</pre>
<strong>13. ActiveRecord::Base::exists</strong>
Sometime we just need to check for existence of any record in the database. And I have seen coders are writing something like:
To check whether published books are present in the database or not:
<pre>books = Book.where(:published =&gt; true)
books.count &gt; 0 # will return true if published books exists in database.</pre>
Instead use ActiveRecord::Base::exists method as:
<pre>Book.exists?(:published =&gt; true)</pre>
<strong>14. SQL Injection</strong>

Never interpolate the input from the outside world into ActiveRecord query directly.
<pre>query = "SELECT * FROM users WHERE name = '#{name}' AND password = '#{password'} LIMIT 1"
results = User.connection.execute(query)</pre>
Above query will behave unexpected whenever a sql injection string is passed and name nad password:
<span style="text-decoration:underline;">Example:</span>
<pre>name: ' OR 'a' = 'a
password: ' OR 'a' = 'a</pre>
above input will generate query something like
<pre>SELECT * FROM users WHERE name = '' OR 'a' = 'a' AND password = '' OR 'a' = 'a' LIMIT 1</pre>
And above query will always return a user. Instead make use of 'where' or 'find_by' methods these will automatically escape the commas('/”) in the input value and will not allow query to return true and will check the record in database exactly what it had been passed as name and password.

<strong>15. N+1 queries</strong>
So, Basically it happens when we load a bunch of objects from the database, and then for each one of those objects we make 1 or more database query.
<span style="text-decoration:underline;">Example:</span>
<pre>class Customer { where(active: true) }
end</pre>
<pre>class Address &lt; ActiveRecor...
belongs_to :customer
end</pre>
<pre>@customers = Customer.active</pre>
<pre># this is fine the customer object is already in memory
# this one fires one query to the database for finding Address record for each custome</pre>
Suppose we have 100 active customers then total database queries will be 101.
1 query for finding all the active customers and other 100 queries for finding an address for each.
Instead try eager_loading and just fire 2 queries for all.
<pre>@customers = Customer.active.includes(:address)</pre>
The above query will fire 1 query for finding all the customers and other query for finding all the address associated to the clients fetched in the first query.

Reference Post : http://www.allerin.com/blog/common-mistakes-in-ror
For more similar blog posts, visit <a href="http://www.allerin.com/blog" title="Ruby on Rails Blog" target="_blank">Ruby on Rails Blog</a>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>acts_as_taggable_on + select2 = Super Easy Tags in Rails</title>
  <link>http://bob-roberts.net/2014/04/04/acts_as_taggable_on-select2-super-easy-tags-in-rails/</link>
  <pubDate>Fri, 04 Apr 2014 23:24:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/04/04/acts_as_taggable_on-select2-super-easy-tags-in-rails/</guid>
  <description/>
  <content:encoded><![CDATA[Just what I wanted.  Big fan of Chosen/Select2.  Many thanks!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1135</wp:post_id>
  <wp:post_date>2014-04-04 16:24:59</wp:post_date>
  <wp:post_date_gmt>2014-04-04 23:24:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>acts_as_taggable_on-select2-super-easy-tags-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:56:"acts_as_taggable_on + select2 = Super Easy Tags in Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2013-07-09 21:08:25";s:9:"permalink";s:92:"http://rcode5.wordpress.com/2013/03/07/acts_as_taggable_on-select2-super-easy-tags-in-rails/";s:7:"content";s:2465:"<div class="reblogged-content">I've had two projects in the past little bit where I wanted user input tags for objects.  I also wanted to have typed tags - tags of different categories applied to the same object.  I found that <a href="https://github.com/mbleigh/acts-as-taggable-on/" target="_blank">acts_as_taggable_on</a> (Rails gem) and <a href="http://ivaynberg.github.com/select2/" target="_blank">select2</a> (jQuery plugin) work really nicely together and make this an easy task.

Let's assume that we have an ActiveRecord model for a Post.  Follow <a href="https://github.com/mbleigh/acts-as-taggable-on/#readme" target="_blank">directions to install acts_as_taggable_on</a> (add to Gemfile, initialize and run migration).  Then add two different tag types to <code>Post</code> like this:

[sourcecode language="ruby"]
class Post &lt; ActiveRecord::Base
  acts_as_taggable # basic usage - gives us 'tags'
  acts_as_taggable_on :topics
end
[/sourcecode]

With this, the Post model is ready to store tags and topics.

[sourcecode]
irb&gt; Post.first.tags &lt;&lt; 'super fun'
[/sourcecode]

To push this to the users, we want a nice UI for users to enter tags/topics.  This is where Select2 comes in.  In your form for adding/editing posts, add two input boxes, one for topics and one for tags

[sourcecode]
# using haml templating
.input-row
  = f.label :tags
  = f.text_field :tag_list
.input-row
  = f.label :topics
  = f.text_field :topics_list
[/sourcecode]

Then attach the <code>select2</code> plugin to the form elements.  Make sure you've got <code>jQuery</code> and <code>select.js</code> included on the page.

[sourcecode language="javascript"]
// in your javascript
$(function() {
  $('.input-row #post_topics_list, .input-row #post_tags_list').select2({tags:[]})
});
[/sourcecode]

And you get a beautiful input box with handy tag handling.
<a href="http://bobspython.files.wordpress.com/2014/04/screen-shot-2013-03-06-at-6-59-51-pm.png"><img src="http://bobspython.files.wordpress.com/2014/04/screen-shot-2013-03-06-at-6-59-51-pm.png" alt="Tags and Topics form" width="240" height="160" class="aligncenter size-full wp-image-678" data-originalSrc="http://rcode5.files.wordpress.com/2013/03/screen-shot-2013-03-06-at-6-59-51-pm.png" data-rehosted="1"></a>

Update:
If you haven't found it, there's a nice package that puts select2 in the asset pipeline - https://github.com/argerim/select2-rails.</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[674]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[35829712]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Benefits of Using Ruby on Rails Applications for your Business</title>
  <link>http://bob-roberts.net/2014/04/11/benefits-of-using-ruby-on-rails-applications-for-your-business/</link>
  <pubDate>Sat, 12 Apr 2014 00:12:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/04/11/benefits-of-using-ruby-on-rails-applications-for-your-business/</guid>
  <description/>
  <content:encoded><![CDATA[Nice write up even if it is self serving advertisement.  I was not aware that Hulu is on Rails.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1137</wp:post_id>
  <wp:post_date>2014-04-11 17:12:46</wp:post_date>
  <wp:post_date_gmt>2014-04-12 00:12:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>benefits-of-using-ruby-on-rails-applications-for-your-business</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[411]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[63569703]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:62:"Benefits of Using Ruby on Rails Applications for your Business";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-04-09 10:50:47";s:9:"permalink";s:115:"http://offshorerubyonrails.wordpress.com/2014/04/09/benefits-of-using-ruby-on-rails-applications-for-your-business/";s:7:"content";s:5508:"<div class="reblogged-content">
<p style="text-align:justify;"><strong><a href="http://railscarma.com"><img class="alignright" src="http://bobspython.files.wordpress.com/2014/04/ruby-on-rails.jpeg" alt="Image" width="277" height="204" data-originalSrc="http://offshorerubyonrails.files.wordpress.com/2014/04/ruby-on-rails.jpeg?w=640" data-rehosted="1"></a></strong><strong>Ruby on Rails</strong>, also known as Rails is an Open source Web application framework that uses Ruby programming language which allows creating and developing pages with higher efficiency, more flexibility, moreover less time consuming.</p>
<p style="text-align:justify;">Ruby on Rails has become one of the most popular and emerging programming language used for <strong>Web Application Development</strong>.</p>
<p style="text-align:justify;">There are plethora of other programming languages available that can be used for creating web applications and CMS (Content Management System) like PHP, JAVA, ASP, Python, Perl, etc.</p>
<p style="text-align:justify;">But Ruby on Rails stands out when it comes to <strong>Flexibility, Time, Cost, Security and Agility</strong></p>
<p style="text-align:justify;">Well, here are some of the considerable reasons why to choose Ruby on Rails over other <strong>Web Application Frameworks</strong></p>
<p style="text-align:justify;"><strong>Development Speed</strong></p>
<p style="text-align:justify;">Ruby on Rails allows features to be developed quickly by freeing programmers from repetitive coding. It emphasizes convention over configuration since it adopts agile development concepts. This allows <strong><a href="http://railscarma.com/">Ruby on Rails Development Company</a></strong> to move quickly from concept to estimating to actual development. This has significant benefits for larger projects that can be split up into smaller sized parts as well as entrepreneurs developing new products or web based ventures.</p>
<p style="text-align:justify;"><strong>Flexibility</strong></p>
<p style="text-align:justify;">Ruby on Rails offer developers the ability to easily modify a web application in response to customer’s requirements with less time spent when compared to other programming languages. This allows improvements to be made and new features added to result in greater ability in keeping with changing business needs.<strong> </strong></p>
<p style="text-align:justify;"><strong>Reduced Development Cost</strong></p>
<p style="text-align:justify;">Over and above the flexibility as well as development speed, <strong>Ruby on Rails</strong> is an open source technology. Through the use of a freely available platform, you can easily <strong>reduce costs</strong> without sacrificing performance, speed or security. Developing with RoR means development cost can be drastically cheaper than if the same project was created in heavier, less flexible, proprietary software (Non open source technologies), like Java or Dot Net.</p>
<p style="text-align:justify;"><strong>Thriving Community </strong></p>
<p style="text-align:justify;">An additional benefit of open source software is that the Ruby development community is highly active and responsive. This attribute is usually overlooked but translates into the strength of the technology and constantly drives it forward through enhancements, extensions as well as new documentation.</p>
<p style="text-align:justify;"><strong>Agile</strong></p>
<p style="text-align:justify;">RoR is the technology which goes hand in hand with agile methodology. <strong><a href="http://railscarma.com/">Rails development</a></strong> cycles remain short, helping to facilitate the application of agile methodologies. Programmers use Test Driven Development to obtain desired results hence RoR is a good choice for your Agile and Scrum projects.</p>
<p style="text-align:justify;"><strong>Creating a Complex Website</strong></p>
<p style="text-align:justify;">Building a website may well be the most common instance in which you would probably utilize RoR. However, you could also use PHP. Why use one over the other? The argument goes like this: if you are just adding simple functionality to a simple, uncomplicated website, then use PHP. However, if you are creating a complex website or app that requires a database then you’ll want to use Rails.</p>
<p style="text-align:justify;"><strong>Future Demand</strong></p>
<p style="text-align:justify;">It should come as no real surprise why entrepreneurs as well as businesses have chosen <strong>Ruby on Rails</strong> to create their web application.</p>
Some of the most popular and well known web services that run on <strong>Ruby on Rails</strong>:
<p style="text-align:justify;">1. Twitter</p>
<p style="text-align:justify;">2. Groupon</p>
<p style="text-align:justify;">3. LivingSocial</p>
<p style="text-align:justify;">4. Hulu</p>
<p style="text-align:justify;">5. SoundCloud</p>
<p style="text-align:justify;">6. ZenDesk</p>
<p style="text-align:justify;">7. GitHub</p>
<p style="text-align:justify;">8. Shopify</p>
<p style="text-align:justify;">9. SlideShare</p>
<p style="text-align:justify;">10. Scribd</p>
<p style="text-align:justify;">Finding or Hiring a <strong><a href="http://railscarma.com/hire-ruby-on-rails-developer.html">Rails Developer</a></strong> or a Ruby on Rails Development Company for that matter, is of utmost importance when it comes to quality, efficiency of the work done and timely delivery of the project.</p>
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Add an 'about' method to your Rails app</title>
  <link>http://bob-roberts.net/2014/04/11/add-an-about-method-to-your-rails-app/</link>
  <pubDate>Sat, 12 Apr 2014 00:22:55 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/04/11/add-an-about-method-to-your-rails-app/</guid>
  <description/>
  <content:encoded><![CDATA[Man, after dealing with legacy code so many times, this is a great idea.  Many times developers forget (or don't care?) about the next developer that will work on the code someday.  This would be good to throw into a rake task to create the full list of descriptions.  Thanks for this!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1139</wp:post_id>
  <wp:post_date>2014-04-11 17:22:55</wp:post_date>
  <wp:post_date_gmt>2014-04-12 00:22:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>add-an-about-method-to-your-rails-app</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[11]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[39895151]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:39:"Add an 'about' method to your Rails app";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-04-04 17:17:04";s:9:"permalink";s:70:"http://livingjim.com/2014/04/04/add-an-about-method-to-your-rails-app/";s:7:"content";s:2317:"<div class="reblogged-content">I end up using Ruby on Rails apps as tools within larger projects, not as an end to a web application need.  As such, my involvement with my Rails app may go months between those intensive times where my head is in the Rails app, and I forget many of the nuances and whys of the architecture.  So I recently built up a little extra goodness in my current project to help me when I return to it next time.

In short, I have added to each model a "description" method that just (now anyway) prints out my thinking about what the model is there for and how it is to be used, what caveats exist in the model, and so on.  So if my app has a Product model, I can work in the Rails console with it and issue a Product.description call to print out all that stored human knowledge.

That begs for an app-wide refresher, so I added a method via an initializer file: about.

Let's have a look!

<em>app/models/product.rb</em>
<pre>class Product &lt; ActiveRecord::Base
  def self.description
    puts "Instances of the Product class......"
  end
end</pre>
config/initializers/my_stuff.rb
<pre>def about
  Dir.glob("#{Rails::root}/app/models/*.rb").each do |rb|
    thisModelName = rb.split("/").last.split(".").first.camelcase
    thisModel = thisModelName.constantize
    puts ""
    puts "++++ #{thisModelName}"
    if thisModel.respond_to?(:description) then
      thisModel.description
    end
<b>    </b>puts thisModel.inspect
<b>    </b>puts "----"
<b>    </b>end
<b>  </b>return true
end</pre>

<hr>

Programming is a discipline, right? And so it takes discipline to always add a description method to your models, but it's really beneficial either when you come back to work on the Rails side of your project or you are bringing additional help in to work on it with you.

To build this feature I had to learn how to take a string and turn it into a class name.  This discussion deserves the credit for showing me how to accomplish this: <a title="Getting a class object in Ruby from a string containing that class’ name" href="http://infovore.org/archives/2006/08/02/getting-a-class-object-in-ruby-from-a-string-containing-that-classes-name/" target="_blank">Getting a class object in Ruby from a string containing that class' name</a>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>1749</wp:comment_id>
    <wp:comment_author><![CDATA[m3talsmith (@m3talsmith)]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/m3talsmith</wp:comment_author_url>
    <wp:comment_author_IP>68.98.113.121</wp:comment_author_IP>
    <wp:comment_date>2014-04-12 09:13:53</wp:comment_date>
    <wp:comment_date_gmt>2014-04-12 16:13:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is a bad idea! Every time you spin the app up it's going to churn through the code and try to put out descriptions that then get outputted in your logs! Talk about overkill!

I agree that people need to know about the app, that's what README and ./doc/ are for.

A better version of this would be to leave sdoc [ https://github.com/voloko/sdoc ] comments in your code documenting what it does, then when you ```rake test``` it will automatically build your documentation for you. Anyone that wants to see the documentation can open ./doc/index.html and "viola!" instant searchable documentation.

If you want a tl;dr simply put the summary in the README: with a bonus here, github will render it nicely so that any developer looking at the project get's a pretty summary to start off with.

So yes, make an about section, but put it in documentation and summarize in the README. Doing the process mentioned in this blog post will clutter your logs and slow your app down.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://pbs.twimg.com/profile_images/3239673616/240c9589c1ec72869185203d58c99090_normal.jpeg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>9442942</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1397319233</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1397319233</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397319233.280705928802490234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-12 16:13:53</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1757</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.0.168.217</wp:comment_author_IP>
    <wp:comment_date>2014-04-13 14:05:42</wp:comment_date>
    <wp:comment_date_gmt>2014-04-13 21:05:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Well it wouldn't need to go in an initializer.  I was thinking of more along the lines of running  rake task to compile the documentation.

And using a well written READ is great.  I think what I took away from him post is that he writes noted in his about in his models and controller while he is in them working on them.  These could also then later be copied into the README.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>1749</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1397423142</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1397423143.38082408905029296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1397423144</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-13 21:05:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1849</wp:comment_id>
    <wp:comment_author><![CDATA[livingjim]]></wp:comment_author>
    <wp:comment_author_email>jim@jim-tobin.com</wp:comment_author_email>
    <wp:comment_author_url>http://livingjim.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>67.168.1.148</wp:comment_author_IP>
    <wp:comment_date>2014-04-28 15:20:28</wp:comment_date>
    <wp:comment_date_gmt>2014-04-28 22:20:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Which idea is bad? A rake task or my class description methods? Honestly I don't see how either would impact start up times.  I can verify that my log files aren't full of description messages.  And launch times haven't grown.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>39337276</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1398723629.08864593505859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"livingjim";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1398724353</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1398724353</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1398724353.40725994110107421875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-28 22:20:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1852</wp:comment_id>
    <wp:comment_author><![CDATA[Bob Roberts]]></wp:comment_author>
    <wp:comment_author_email>broberts_az@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bob-roberts.net</wp:comment_author_url>
    <wp:comment_author_IP>68.0.168.217</wp:comment_author_IP>
    <wp:comment_date>2014-04-28 19:52:05</wp:comment_date>
    <wp:comment_date_gmt>2014-04-29 02:52:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I like the idea myself.  Makes sense to me ;)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>1849</wp:comment_parent>
    <wp:comment_user_id>15714693</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1398739925</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1398739925.4740169048309326171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1398739925</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-29 02:52:05</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>1853</wp:comment_id>
    <wp:comment_author><![CDATA[livingjim]]></wp:comment_author>
    <wp:comment_author_email>jim@jim-tobin.com</wp:comment_author_email>
    <wp:comment_author_url>http://livingjim.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>67.168.1.148</wp:comment_author_IP>
    <wp:comment_date>2014-04-28 22:43:49</wp:comment_date>
    <wp:comment_date_gmt>2014-04-29 05:43:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So I just cleared out my log files and spun the app up, first through console and then the server.  No output to log files and no delays.  My inspiration for this idea came, by the way, from all the unix tools that accept arguments, but if you provide none they offer a brief amount of help on how to use them.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>1749</wp:comment_parent>
    <wp:comment_user_id>39337276</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1398750230</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1398750230.4816110134124755859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"livingjim";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1398750231</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2014-04-29 05:43:49</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Upgrading your Vagrant box to Ruby 2.0</title>
  <link>http://bob-roberts.net/2014/04/18/upgrading-your-vagrant-box-to-ruby-2-0/</link>
  <pubDate>Sat, 19 Apr 2014 00:38:49 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/04/18/upgrading-your-vagrant-box-to-ruby-2-0/</guid>
  <description/>
  <content:encoded><![CDATA[Sweet, I did not know about the option to package a Vagrant box.  Thanks for this.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1140</wp:post_id>
  <wp:post_date>2014-04-18 17:38:49</wp:post_date>
  <wp:post_date_gmt>2014-04-19 00:38:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>upgrading-your-vagrant-box-to-ruby-2-0</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[58]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[55784886]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:38:"Upgrading your Vagrant box to Ruby 2.0";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2013-10-10 14:43:06";s:9:"permalink";s:78:"http://jibai31.wordpress.com/2013/09/01/upgrading-your-vagrant-box-to-ruby-20/";s:7:"content";s:2897:"<div class="reblogged-content">If you followed the post on setting up <a href="http://jibai31.wordpress.com/2013/08/07/test-your-production-environment-with-vagrant/" target="_blank">Vagrant</a>, you've got a nice working environment, hopefully quite close to the environment where your app is running live.

And now you need to upgrade that environment, so you'd like to upgrade your box alongside. In my case, I'm upgrading my app from Ruby 1.9.2 to Ruby 2.0 on <a href="http://www.heroku.com" target="_blank">Heroku</a>, so I'd like to upgrade my Ubuntu VM too. This post will cover first the upgrade to Ruby 2.0, and then saving the upgraded box.

First we use apt-get to ensure that all of our installed software is up to date.
<pre><code>$ sudo apt-get update</code></pre>

Then we install some prerequisites: the build essentials, ZLib, Git.
<pre><code>$ sudo apt-get install build-essential zlib1g-dev git-core</code></pre>

I don't want to simply upgrade Ruby, I'd like to go back and forth between the 2 versions while testing the upgrade. There are 2 recommended tools for managing several Ruby versions: <a href="https://rvm.io/" target="_blank">RVM </a>and <a href="https://github.com/sstephenson/rbenv" target="_blank">rbenv</a>. Being more familiar with RVM, that's the way I'm going. But do check the two options if you're interested.

This will actually install RVM and the latest stable Ruby version as well:
<pre><code>$ curl -L https://get.rvm.io | bash -s stable --ruby
$ source /home/vagrant/.rvm/scripts/rvm</code></pre>

And reload your profile:
<pre><code>$ source ~/.profile</code></pre>

And that's it! At the time of this writing, this installed ruby-2.0.0-p247. If you want to switch between versions, simply run:
<pre><code>$ rvm use 2.0.0</code></pre>

Now the upgrade is done, you want to test your app. Nothing simpler. Upgrade your Ruby version in your Gemfile:
[code language="ruby"]ruby '2.0.0'[/code]

And reinstall all the gems for Ruby 2.0.0:
<pre><code>$ bundle</code></pre>

Finally, run the tests:
<pre><code>$ bundle exec rspec spec</code></pre>

As far as I'm concerned, nothing breaks! I'm done with the upgrade!

But now I did this work to upgrade my Ubuntu VM, I'd like to back it up. So that if I happen to run a vagrant destroy, I can simply restore it. It turns out it's quite easy to do. While your VM is running, simply execute a Vagrant <a href="http://docs.vagrantup.com/v2/cli/package.html" target="_blank">package</a> command:
<pre><code>$ vagrant package
[default] Attempting graceful shutdown of VM...
[default] Clearing any previously set forwarded ports...
[default] Creating temporary directory for export...
[default] Exporting VM...
[default] Compressing package to: C:/Users/JB/myapp/package.box</code></pre>

You can now share this box with coworkers, or back it up for future restore.</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ah, Eigenclass</title>
  <link>http://bob-roberts.net/2014/05/08/ah-eigenclass/</link>
  <pubDate>Thu, 08 May 2014 18:13:23 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/05/08/ah-eigenclass/</guid>
  <description/>
  <content:encoded><![CDATA[I never knew how this worked nor heard of Eigenclass but have used find_by....  Nice clear explanation :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1141</wp:post_id>
  <wp:post_date>2014-05-08 11:13:23</wp:post_date>
  <wp:post_date_gmt>2014-05-08 18:13:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ah-eigenclass</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:14:"Ah, Eigenclass";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-05-08 16:24:31";s:9:"permalink";s:59:"http://fifthsurprise.wordpress.com/2014/05/08/ah-eigenclass";s:7:"content";s:4085:"<div class="reblogged-content">There is a point in a Ruby-ist's life where you dig a little too deep into the depths of metaprogramming.

Sometimes the result is incredibly cool, like Rails. Rails uses a lot of metaprogramming in order to save you a lot of effort.

For example, there's some nifty work being done in order to create the find_by methods through combining method_missing and the Eigenclass. This particular post is about the Eigenclass but you can find a pretty good explanation of method_missing <a href="http://eugmill.com/blog/2014/05/05/ghost-methods-in-ruby-and-rails/">here</a>.  But for more about Eigenclass, read on. <!--more-->

Active Record will provide dynamic finders for every known attribute on your table.

So if your <em>Client </em>model has a filed <em>first_name</em>, you can have find_by_first_name for free.

Calling find_by_first_name works dynamically through the use of method_missing in Object. Rails overrides method_missing for Active Record so that the method can be dynamically defined.

Specifically:

[code language="ruby"]
def method_missing(name, *arguments, &amp;amp;block)
  match = Method.match(self, name)

  if match &amp;amp;&amp;amp; match.valid?
    match.define #define the method
    send(name, *arguments, &amp;amp;block)
  else
    super
  end
end
[/code]

And this is where the method actually gets defined:

[code language="ruby"]
def define
  model.class_eval &amp;lt;&amp;lt;-CODE, __FILE__, __LINE__ + 1
  def self.#{name}(#{signature})
    #{body}
  end
  CODE
end
[/code]

So we're defining a method on to a class dynamically based on the attributes, which is pretty neat. But where is this method? Is it somehow within the model's class?

Actually it's hiding out in the Eigenclass (or the ghost class). What the heck is this?

Let's start with the name, which will help frame this post. Eigen means "own" in German/Dutch. Class refers to the Ruby Class. So Eigenclass would be "own class". Hold on to that, because we'll need to remember this down the line.

So first, some ruby code:

[code language="ruby"]
class Animal
end

class Dog &amp;lt; Animal
end

hippo = Animal.new

pug = Dog.new
poodle = Dog.new

#define an instance method/ singleton method
class &amp;lt;&amp;lt; pug
  def snore
    "ZzzzZZZzzz*snort*ZZZZzzz"
  end
end

pug.snore #=&amp;gt; "ZzzzZZZzzz*snort*ZZZZzzz"
poodle.snore #=&amp;gt; NoMethodError
hippo.snore #=&amp;gt; NoMethodError

#define a class's instance variable
class Dog
  def bark
    "Woof woof"
  end
end

pug.bark
poodle.bark
hippo.bark

#define a class variable
class Dog
  class &amp;lt;&amp;lt; self
    def types
      "Pug and Poodle"
    end
  end
end

Dog.singleton_methods #=&amp;gt; [[0] types() Dog]]
poodle.singleton_methods #=&amp;gt;
pug.singleton_methods #=&amp;gt; [[0] types() Dog]]
[/code]

In this example, I've defined a class Animal and a subclass of Dog with various instances of each. As you can see, you can define various methods and classes on the Class level or instance level. These methods don't exist in the ether though. They're actually stored in an anonymous class associated with either the instance or the class itself. This anonymous class is the Eigenclass (the specific object's "own" class).

The Eigenclass is anonymous but is inherited from a superclass's eigenclass. So every class has its own hidden Eigenclass that the point to and ineherit from. The singleton methods are actually instance methods of the associated Eigenclass.

How is this getting used?

Well let's say a Rails User model has an email attribute. It would be useful to find a User based on the email (Ex. User.find_by_email("foo@foo.com")). Rails overrides method_missing so you can generate the right code to dynamically find the object based on a given class attribute. But even more importantly, a singleton method is defined on User's Eigenclass. This is applied on the class level but could also be applied on the instance level.

Powerful stuff!</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[118]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[63964475]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Implementing Rails APIs like a professional</title>
  <link>http://bob-roberts.net/2014/05/08/implementing-rails-apis-like-a-professional/</link>
  <pubDate>Thu, 08 May 2014 18:26:24 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/05/08/implementing-rails-apis-like-a-professional/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1142</wp:post_id>
  <wp:post_date>2014-05-08 11:26:24</wp:post_date>
  <wp:post_date_gmt>2014-05-08 18:26:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>implementing-rails-apis-like-a-professional</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[3462]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[9042983]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:43:"Implementing Rails APIs like a professional";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-05-08 09:45:47";s:9:"permalink";s:83:"http://blog.joshsoftware.com/2014/05/08/implementing-rails-apis-like-a-professional";s:7:"content";s:9536:"<div class="reblogged-content">Today, a web-portal that does not support APIs is not even considered a web portal! This post explains how we can implement Rails APIs in our application. Rails APIs require the following minimum implementation:

<ul>
<li>API keys.</li>
<li>API Versioning.</li>
<li>API Request Authentication.</li>
<li>Request throttling (optional).</li>
</ul>

Let's see how this can be done.

<h2>API key generation</h2>

Lets generate the model.

[code lang=bash]
$ rails g model User api_key:string
[/code]

or if the model already exists,

[code lang=bash]
$ rails g migration AddApiKeyToUsers api_key:string
[/code]

Now lets edit this model and add the logic to generate the API key when a record is created using the method <code>generate_api_key</code>.

[code lang=ruby]
def generate_api_key
  loop do
    token = SecureRandom.base64.tr('+/=', 'Qrt')
    break token unless User.exists?(api_key: token).any?
  end
end
[/code]

In this code we use <code>SecureRandom.base64.tr('+/=', 'Qat')</code> to generate a token. Since, it may contain the special characters like <code>+/=</code>, we shall replace them with some random alphabets using <code>tr</code>, so that the API key looks good. Now lets add the <code>before_create</code> callback.

[code lang=ruby]
before_create do |doc|
  doc.api_key = doc.generate_api_key
end
[/code]

<h2>API controller and routes versioning</h2>

Now, lets generate the controller called <code>Api</code> in the <code>api</code> namespace. This helps us avoid the <code>ApplicationController</code> as APIs do not need the basic controller functionalities like protection from request forgery (the CSRF token), session authentication and the view helpers. Our <code>Api::ApiController</code> is in fact the <code>ApplicationController</code> for all our API controllers.

[code lang=bash]
$ rails g controller api/api
[/code]

To ensure we get basic controller functionality we need our <code>Api::ApiController</code> to inherit directly from <code>ActionController::Base</code>. So, be sure to replace the code as follows:

[code lang=ruby]
class Api::ApiController &lt; ActionController::Base
# Authentication and other filters implementation.
end
[/code]

Lets take an example to help understand all this better. Lets create an API for events that has two fields <code>name</code> and <code>occurred_at</code> that tell us which event occurred at which time. We shall write APIs to get events.

[code lang=text]
$ rails g model event name:string occurred_at:time
$ rails g controller api/v1/events
[/code]

APIs need to be versioned to ensure backward compatibility and future extensibility. The above approach provides us an easy way to do this and keep our code maintainable. Remember to version only when required - v2 would be added when either there is entirely new functionality that would not work with v1 clients, i.e. potentially broken compatibility. (This may be a good time to mention <a href="http://jsonapi.org">jsonapi.org</a>. This is what the next generation of Web APIs will do, so it's definitely worth a read).

[code lang=ruby]
# app/controllers/api/v1/events_controller.rb
class Api::V1::EventsController &lt; Api::ApiController
end
[/code]

<h3>Routes versioning</h3>

This is an art and you should ensure that your routes are well designed. Here is an example.

[code lang=ruby]
namespace :api do
  namespace :v1 do
    resources :events
  end
end
[/code]

This will generate the routes with 'api/v1' namespace prefix.

[code lang=ruby]
Prefix            Verb   URI Pattern                       Controller#Action
api_v1_events     GET    /api/v1/events(.:format)          api/v1/events#index {:format=&gt; :json}
                  POST   /api/v1/events(.:format)          api/v1/events#create {:format=&gt; :json}
new_api_v1_event  GET    /api/v1/events/new(.:format)      api/v1/events#new {:format=&gt; :json}
edit_api_v1_event GET    /api/v1/events/:id/edit(.:format) api/v1/events#edit {:format=&gt; :json}
api_v1_event      GET    /api/v1/events/:id(.:format)      api/v1/events#show {:format=&gt; :json}
                  PATCH  /api/v1/events/:id(.:format)      api/v1/events#update {:format=&gt; :json}
                  PUT    /api/v1/events/:id(.:format)      api/v1/events#update {:format=&gt; :json}
                  DELETE /api/v1/events/:id(.:format)      api/v1/events#destroy {:format=&gt; :json}
[/code]

If want to remove the API prefix (/api) and use a subdomain like <code>api.example.com</code>, then we can use options like <code>path</code> and <code>constraints</code>

[code lang=ruby]
namespace :api, path: '', constraints: {subdomain: 'api'} do
  namespace :v1 do
    resources :events
  end
end

[/code]

Using <code>path</code> option we can change the namespace name. Now routes look like this

[code lang=ruby]
Prefix            Verb   URI Pattern                   Controller#Action
api_v1_events     GET    /v1/events(.:format)          api/v1/events#index {:format=&gt; :json, :subdomain=&gt; "api"}
                  POST   /v1/events(.:format)          api/v1/events#create {:format=&gt; :json, :subdomain=&gt; "api"}
new_api_v1_event  GET    /v1/events/new(.:format)      api/v1/events#new {:format=&gt; :json, :subdomain=&gt; "api"}
edit_api_v1_event GET    /v1/events/:id/edit(.:format) api/v1/events#edit {:format=&gt; :json, :subdomain=&gt; "api"}
api_v1_event      GET    /v1/events/:id(.:format)      api/v1/events#show {:format=&gt; :json, :subdomain=&gt;"api"}
                  PATCH  /v1/events/:id(.:format)      api/v1/events#update {:format=&gt;:json, :subdomain=&gt;"api"}
                  PUT    /v1/events/:id(.:format)      api/v1/events#update {:format=&gt; :json, :subdomain=&gt; "api"}
                  DELETE /v1/events/:id(.:format)     api/v1/events#destroy {:format=&gt;:json, :subdomain=&gt; "api"}
[/code]

If we want to process every request as a JSON request by default, then add <code>format: :json</code> to the <code>defaults</code> in the namespace options. So any request will now be considered as a JSON request and will give JSON response.

[code lang=ruby]
namespace :api, path: '', constraints: {subdomain: 'api'}, defaults: {format: 'json'}
[/code]

Here is an example of our API controller action.

[code lang=ruby]
class Api::V1::EventsController &lt; Api::ApiController
  respond_to :json

  def index
    @events = Event.all
    respond_with @events
  end
end
[/code]

<h2>API Authentication</h2>

This is important and we can implement the authentication in the <code>Api::ApiController</code> itself so that it is applicable for all the API controllers. There are different ways to authenticate:

<ul>
<li>Use the inbuilt rails method <code>authenticate_or_request_with_http_token</code>
</li>
<li>Do it manually.</li>
</ul>

If we use <code>authenticate_or_request_with_http_token</code>(ref: <a href="http://api.rubyonrails.org/classes/ActionController/HttpAuthentication/Token.html">token auth api</a>), our code looks like this.

[code lang=ruby]
class Api::ApiController &lt; ActionController::Base
  private

  def authenticate
    authenticate_or_request_with_http_token do |token, options|
      @user = User.where(api_key: token).first
    end
  end
end

[/code]

Now, in our <code>EventsController</code> we need to ensure we add the filter. (Note: Rails3 would require this to be <code>before_filter</code>).

[code lang=ruby]
class Api::V1::EventsController &lt; Api::ApiController
  respond_to :json

  before_action :authenticate

  def index
    @events = Event.all
    respond_with @events
  end
end
[/code]

Now, to test this API out we can use curl.

[code lang=text]
$ curl -H "Authorization: Token token=WwEsPpOCYMsyPsmmvKBqQDOaEJ4t" http://localhost:3000/events
[/code]

If we pass the <code>api_key</code> in the request header (i.e the <code>X-API-KEY</code> header field), then we need to do the authentication manually.

[code lang=ruby]
def authenticate
  api_key = request.headers['X-Api-Key']
  @user = User.where(api_key: api_key).first if api_key

  unless @user
    head status: :unauthorized
    return false
  end
end
[/code]

Again, we can test this with curl.

[code lang=text]
$ curl -H "X-Api-Key: WwEsPpOCYMsyPsmmvKBqQDOaEJ4t" http://localhost:3000/v1/events.json
[/code]

<strong>NOTE 1</strong> Never pass the API key in the params(for example: <code>http://test.com?api_key= WwEsPpOCYMsyPsmmvKBqQDOaEJ4t</code> or in the POST or PUT parameters). The params will get logged and the API keys would be seen in the logs. If someone has access to your logs or purges the logs or even by mistake pastes a log snippet on stackoverflow, then God help you! We can of course use filtering configuration in our application but the best way is to avoid this situation and pass the API key in the request header <strong>always</strong>.

<strong>NOTE 2</strong> Always use the <a href="http://guides.rubyonrails.org/layouts_and_rendering.html#the-status-option">HTTP status codes</a> for different response status to make the HTTP status code more readable.

[code lang=ruby]
render status: :unauthorized # 401
render status: :too_many_requests # 424
render status: :unprocessable_entity # 422
# and many more!
[/code]

In my next post, I shall talk about Request throttling. The information here is enough for you to get started on writing good Rails APIs that are versioned, clean and authenticated. If you want to see a sample working code, see <a href="https://github.com/jiren/api_template">Github</a>.

Feedback is welcome.</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Lets Kill TDD</title>
  <link>http://bob-roberts.net/2014/05/09/lets-kill-tdd/</link>
  <pubDate>Fri, 09 May 2014 19:46:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/05/09/lets-kill-tdd/</guid>
  <description/>
  <content:encoded><![CDATA[DHH stirring up shit as he so well does.  People need to keep in mind that some of the "things" we use are more of a mind set than actual tools.  ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1143</wp:post_id>
  <wp:post_date>2014-05-09 12:46:36</wp:post_date>
  <wp:post_date_gmt>2014-05-09 19:46:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>lets-kill-tdd</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:13:"Lets Kill TDD";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-05-09 07:01:14";s:9:"permalink";s:52:"http://rails7.wordpress.com/2014/05/09/lets-kill-tdd";s:7:"content";s:80:"<div class="reblogged-content">https://www.youtube.com/watch?v=9LfmrkyP81M</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[47]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[62661464]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Tech recruiters; do we really need them?</title>
  <link>http://bob-roberts.net/2014/05/21/tech-recruiters-do-we-really-need-them/</link>
  <pubDate>Thu, 22 May 2014 04:04:50 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1144</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">OK, this post is for me to vent my anger at tech recruiters.  Last year, I removed my LinkedIn account as I was sick of getting bombarded by recruiters.  It is part of the business that we are lucky enough to be in; higher demand than supply.  I do not have an issue with the polite recruiters that at least take the time to send an email that does not look cut and pasted and the job is at least related to abilities.</p>
<p style="text-align:justify;">Now, when I get the Dear (candidate) ... that pisses me off.  Or if I get a job offer for something completely not related to my abilities as listed on LinkedIn, that annoys me.  I have received the same job listing as many as three times from the same recruiter.  At that point I know that you are a lazy ass human and I will not deal with you and your blanket tech marketing.  I have gotten the same email from the same recruiter every day for almost 2 weeks straight.  No means no but that doesn't remove me from your hit list.</p>
<p style="text-align:justify;">Recruiters get paid to place us.  That is their job.  Some will embellish or make shit up to get you to go to work somewhere.  That has happened to me and I am sure many others.</p>
<p style="text-align:justify;">Today, I got in a disagreement with a recruiter because I "was asking too much money!"  What?  You are just a recruiter.  You don't determine my value.  I gave up trying to justify my asking and that I was by no means going to take any less than my asking and hung up on her.  I got a couple of calls from the company that I was applying to a few hours later and ignored them.  I basically screwed myself out of a good position because I don't want to deal with that recruiter anymore and I thought that I was clear on that.  She missed out on a pretty good commission.</p>
<p style="text-align:justify;">So, how many of you have had good luck with recruiters?  I do not think I will deal with them anymore.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1144</wp:post_id>
  <wp:post_date>2014-05-21 21:04:50</wp:post_date>
  <wp:post_date_gmt>2014-05-22 04:04:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tech-recruiters-do-we-really-need-them</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Building a Rails shop from the ground up</title>
  <link>http://bob-roberts.net/2014/05/25/building-a-rails-shop-from-the-ground-up/</link>
  <pubDate>Sun, 25 May 2014 23:52:50 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1147</guid>
  <description/>
  <content:encoded><![CDATA[This past week, I was given the opportunity of a life time.  On Tuesday, I start my new position at <a title="SocialWhirled" href="http://socialwhirled.com">SocialWhirled</a> as Senior Developer and Team Lead.  My first mission is to build an in-house team.  I get to hire Rails developers and build A Rails shop here in Phoenix.  And this will not be just any Rails shop, we will be the biggest and best Rails shop in the Southwest.
<p class="p1"><span class="s1">When I first got into Rails I heard names like Thoughtbot, Pivotal Labs and Intridea and hoped to one day work for one of them.  I have followed their blogs and now, I have the ability to emulate these companies and make new Rails developers wish to someday work for Socialwhirled.  I want others to look up to how we operate and wish that they too could work for us.</span></p>
<p class="p1">I cannot express my excitement.  We literally have an opportunity to set up shop how we want it.  Each and every new developer that joins our team will be a part of the building process.   We will all decide on what tools we will use and what equipment we will want. I have had my frustrations in the corporate world be we are not even close to corporate and with the CEO's attitude, I don't think we will ever even be close to corporate.  Granted that we are somewhat of a startup, we are solid enough to do things right.</p>
<p class="p1">If you have any ideas or suggestions for this, I would love to hear them.</p>
<p class="p1">It is going to  be a fun ride ...</p>
<p class="p1">UPDATE June 25th</p>
<p class="p1">I am so happy to day that I have hired two guys to start building our Rails shop.  Not only that but for the 3 of you that read my blog, you already know that I had a couple of interns a couple of years ago that were working jobs in the valley.  Well it took some bribing but those guys now work with me.  We also have our sights on two interns to add to the team as well.</p>
<p class="p1">It really makes me happy that I got to hire these guys.  I watched both of them go from learning Rails to earning with Rails.</p>
<p class="p1">We are not done yet.  Time to take over the world !!</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1147</wp:post_id>
  <wp:post_date>2014-05-25 16:52:50</wp:post_date>
  <wp:post_date_gmt>2014-05-25 23:52:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>building-a-rails-shop-from-the-ground-up</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>11 Steps To Make Your RSpec Specs Awesome</title>
  <link>http://bob-roberts.net/2014/05/26/11-steps-to-make-your-rspec-specs-awesome/</link>
  <pubDate>Tue, 27 May 2014 01:03:53 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/05/26/11-steps-to-make-your-rspec-specs-awesome/</guid>
  <description/>
  <content:encoded><![CDATA[Fantastic and very detailed post on writing and/or refactoring Rspec tests.  This is a must read!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1152</wp:post_id>
  <wp:post_date>2014-05-26 18:03:53</wp:post_date>
  <wp:post_date_gmt>2014-05-27 01:03:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>11-steps-to-make-your-rspec-specs-awesome</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[381]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[38570877]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:41:"11 Steps To Make Your RSpec Specs Awesome";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2013-11-26 12:03:56";s:9:"permalink";s:89:"http://railsadventures.wordpress.com/2013/09/25/11-steps-to-make-your-rspec-specs-awesome";s:7:"content";s:8632:"<div class="reblogged-content">

<h3>Preface</h3>
Everyone agrees that writing clean ruby code is essential. There are many blog posts about refactoring your ruby code to make it more readable and maintainable. As tests become a major part of our programming routine, I feel there is a large place for improvement in the way we write and maintain our test-suites. Many ruby projects consist of more rspec lines than actual ruby code, and that requires us to treat our test code with as much care as we treat our actual ruby code, if not even more. Writing specs may be considered by programmers as a burden or a chore if not done the right way. That may cause some programmers to write less specs for their code or to even totally give up on it. Luckily, RSpec provides us with all the tools necessary to create efficient, great looking and fun-to-write specs for our code. I'd like to go over a process of refactoring a test-suite written in RSpec for a small library I've recently written in FTBpro.com.
<h3>The Domain</h3>
In <a href="http://www.ftbpro.com">FTBPro</a> we have posts written by users, and a dynamic set of reaction templates that allows the user to react to that post. A post has a locale and a type, reaction templates has a locale and an array of types which they fit to. When a new post is created, we want to attach the most suitable reaction template to it:
<ol>
<li>It must have the same locale as the post.</li>
	<li>Its types array must include the post's type.</li>
	<li>From the set of matching reaction templates by rules 1 and 2, choose the one which was created the latest.</li>
</ol>
I came out with the following interface to do this job:
<code>FindReaction.for(post).attach</code>
While
<code>FindReaction.for(post).reaction
</code>holds the reaction which was found - I mainly exposed this for tests purposes.

Now the funny part about this blog post is that I'm not going to post here the code which implemented this logic, we shouldn't even care about it. What I'm going to do is to present you with a messed up test suite for this logic, and lead you through the process of making it a blast.

This test suit contains 4 simple specs which describe the behavior we expect from FindReaction:

https://gist.github.com/erez-rabih/6697511

Although these specs pass they're not optimal. Let's follow these rules of thumb to make this spec a blast!
<h4>Rule #1: Keep your specs DRY - use before blocks</h4>
The first line of each spec is identical - we create a post. It should be extracted to a before block so we don't have to mention it over and over again.
<h4>Rule #2: Use before :all instead of before :each when possible</h4>
Why should we create the post before each spec runs? If you're not changing your model's attributes between specs, you should definitely use before :all.
A note on this: unlike before :each blocks which are wrapped in a DB transaction and thus getting rollbacked after the spec is executed, before :all blocks have to be cleaned explicitly so that you don't fill your test DB with garbage.
<h4>Rule #3: Use build instead of create when possible</h4>
We're using FactoryGirl to create a post. Creating is an expensive operation: The post has to go through validations, we save it to the DB and in many cases it requires other models to be created as well. For example, if part of a post validation says it has to have a user than we'll create a user as well. By building a post instead of creating we save all this time and get the same outcome.
<h4>Rule #4: Use describe to create nested specs groups. describe should relate to an operation or an object.</h4>
We're actually testing here 2 different methods of FindReaction. Specs 1-3 describe the reaction method while spec #4 describes the attach method. Each of these methods should have its own describe block.
<h4>Rule #5: Use variables instead of constants to keep your specs from becoming too fragile.</h4>
In lines 19-21 we create reaction templates and we want their locale to match the created post's locale. Instead of using the string "en" again and again we should use post.locale
This makes your spec less fragile so that if someday someone changes the post's locale, he won't have to change the reaction templates creation as well.
<h4>Rule #6: Use RSpec's magnificent be_ syntactic sugar</h4>
RSpec has many syntactic sugars that makes your specs more readable. Let's look at line 6 for example:
<code>reaction.blank?.should == true</code>
When an object reacts to some_method_name? RSpec allows you to write the test in the following way:
<code>object.should be_some_method_name</code>
Or in our case:
<code>reaction.should be_blank</code>
<div></div>
<h4>Rule #7: Use create! and save! instead of create and save</h4>
When creating or saving models to your DB, use create! and save! instead of create and save.
The difference is that the bang version of the methods throws an exception if the operation fails, while the non-banged versions just return false. I wasted a lot of time debugging failed specs only to find out the model was not saved or created due to validation or another problem. By using create! and save! you'll be sure that the model was created successfully and it exists for you to test it, otherwise an exception will be thrown and you'll know about it immediately.
<h3>Midway</h3>
After applying these  7 simple rules our spec following already looks much better:
https://gist.github.com/erez-rabih/6698414
You might think to yourself "OK, this looks great", but I've got a surprise for you: The interesting part is only ahead of us. Let's take the extra leap to improve our specs even more.
<h4>Rule #8: If/When rule of thumb</h4>
When there is a "if" or "when" in your it "should ..." clause, there's a hidden context in it.
Looking at spec #2 our it clause looks like this:
<code>it "should return no reaction template if reaction templates exist, but non fitting"</code>
There's an <strong>if</strong> in it, and that's exactly what we're looking for. If or when mean you're describing a state. These states should be extracted to a context block with a before block describing the state. After applying this rule spec #2 should look like this:
https://gist.github.com/erez-rabih/6698523

We should apply the same to specs 1,3 and 4
<h4>Rule #9: Use subject/it clauses to keep your specs DRY'er and cleaner</h4>
We can easily identify that specs 1,2 and 3 all test the same result: <code>FindReaction.for(@post).reaction</code>
This can be easily extracted into <code>subject {FindReaction.for(@post).reaction} </code>phrase which does miracles to our test code.
<h4>Rule #10: One assertion per test case</h4>
I like to have only one assertion in each spec. This way if the spec fails, you immediately know what went wrong and don't even have to look at the detailed output of the failure. It also keeps your specs clean and focused on what they're supposed to test. Spec #3 has two assertions in it, in the first we check that a reaction is found and in the second we check what specific reaction was found. These are two completely different assertions and deserve different specs. The one assertion per spec rule is easily achieved with combination of Rule #9, we'll see why right away.
<h4>Rule #11: Use RSpec's expect {} block to describe a change in the state of an object</h4>
In spec #4 we test that the post's reaction_template has changed from nil to the attached reaction. RSpec has a nice and clean way to describe these kind of state changes:
<code>expect { some_operation }.to change{something}.from(initial_value).to(final_value)</code>
It is much cleaner and more readable this way.

This is the result after applying rules #8-#11 to our spec:
https://gist.github.com/erez-rabih/6698783
<h3>Conclusion</h3>
So what have we earned in this refactoring process? I'll point the main advantages of the new code:
<ol>
<li>Our test-suite runs faster</li>
	<li>Our test file is more readable</li>
	<li>The failure output provided by RSpec is better</li>
	<li>We're not repeating ourselves between specs</li>
	<li>It is extremely easy to extend the specs to describe new features</li>
	<li>I find it much more enjoyable writing specs that looks cool (And you must admit, it does look cool).</li>
</ol>
I know that even this code can be optimized and refactored, but I had to stop somewhere :)
I'll be glad to hear your insights and thoughts.

* This post was also featured on <a title="FTBpro's Tech Blog" href="http://tech.ftbpro.com" target="_blank">FTBpro's Tech Blog</a>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Another great post for Ruby on Rails testing with Rspec</title>
  <link>http://bob-roberts.net/2014/05/26/another-great-post-for-ruby-on-rails-testing-with-rspec/</link>
  <pubDate>Tue, 27 May 2014 01:21:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1154</guid>
  <description/>
  <content:encoded><![CDATA[http://blog.teamtreehouse.com/an-introduction-to-rspec]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1154</wp:post_id>
  <wp:post_date>2014-05-26 18:21:36</wp:post_date>
  <wp:post_date_gmt>2014-05-27 01:21:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>another-great-post-for-ruby-on-rails-testing-with-rspec</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f381e9a61916a5624e0ce0beab9733b5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1cd62e8b7b257b8d5f1b9c8dea123578</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4a98a0921321124b20dd805257e50653</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c499704c404b426798c32c4677a54543</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4104178578a648bdcb5e10f12db58fcb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e2141b7375f35b72a61e624d6eddc068</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1a3a859f98b2e33b623389160cac9355</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_499ad400b8d9c2a24b4c765e1bc65a62</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d637ac022eab03b1a2777e4bcfe806a9</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_14621d4f4ae09d55e95dfeb7c64a8e3b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Implementing Data Table In Rails</title>
  <link>http://bob-roberts.net/2014/06/08/implementing-data-table-in-rails/</link>
  <pubDate>Sun, 08 Jun 2014 19:30:02 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/06/08/implementing-data-table-in-rails/</guid>
  <description/>
  <content:encoded><![CDATA[Nice writeup of using Datatables in Rails app.  I use this gem myself in a CRM.  Easy to use and looks great out of the box.  I just wish it would work with mongodb :(]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1156</wp:post_id>
  <wp:post_date>2014-06-08 12:30:02</wp:post_date>
  <wp:post_date_gmt>2014-06-08 19:30:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>implementing-data-table-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[87]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[55709321]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:32:"Implementing Data Table In Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2013-10-04 17:48:11";s:9:"permalink";s:77:"http://deepakrip007.wordpress.com/2013/10/04/implementing-data-table-in-rails";s:7:"content";s:2699:"<div class="reblogged-content">

<strong>Data Table</strong> help us to turn a plain HTML table into one with pagination, sorting and searching and all through JavaScript. It has better user interface and provides many options to the user.

You  can learn more about data tables from its official website <em><strong>http://datatables.net .</strong></em><strong> </strong>Here is a simple example of integrating data table in your rails app.

<strong><span style="text-decoration:underline;">Step 1</span></strong>

Add the gem in your gem file
<pre><strong><em><code style="font-size:18px;">gem 'jquery-datatables-rails', git: 'git://github.com/rweng/jquery-datatables-rails.git'</code></em></strong></pre>
Run the bundle install.

<strong><span style="text-decoration:underline;">Step 2</span></strong>

We can now set DataTables up with the asset pipeline.

In your <strong>application.js</strong><em> add the following line</em>
<pre><strong><em><code style="font-size:18px;">//= require dataTables/jquery.dataTables</code></em></strong></pre>
In your <strong>application.css</strong><em> add the following line</em>
<pre><strong><em><code style="font-size:18px;">*= require dataTables/jquery.dataTables</code></em></strong></pre>
<strong><span style="text-decoration:underline;">Step 3</span></strong>

Now we have installed the data table in the application.In order to display the data table effect in your listing page ,modify it like below
<div>
<div>
<pre><strong>&lt;table id="product_lists"&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;Product Name&lt;/th&gt;
    &lt;th&gt;Category&lt;/th&gt;
    &lt;th&gt;Price&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;% @products.each do |product| %&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;%= link_to(product.name, product) %&gt;&lt;/td&gt;
      &lt;td&gt;&lt;%= product.category %&gt;&lt;/td&gt;
      &lt;td&gt;&lt;%= product.price %&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;% end %&gt;
&lt;/tbody&gt;
&lt;/table&gt;</strong></pre>
</div>
</div>
<strong><span style="text-decoration:underline;">Step 4</span></strong>

Now go to the coffee script file <strong>product.js.coffee</strong><em> and add the following block.</em>
<pre><strong><em><code style="font-size:18px;">
jQuery -&gt;
  $("#product_lists").dataTable()</code></em></strong></pre>
You can set more config options from data tables offical site <strong>http://datatables.net</strong> like sorting specific columns,disable sorting from columns and may more.
When you reload the page,you can see your listing page in better UI with sorting,searching and pagination functionality.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1b671010f7f27b95ecc38f370dcd211d</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Agile Rails Development Methodology</title>
  <link>http://bob-roberts.net/2014/06/09/agile-rails-development-methodology/</link>
  <pubDate>Tue, 10 Jun 2014 06:56:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/06/09/agile-rails-development-methodology/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1157</wp:post_id>
  <wp:post_date>2014-06-09 23:56:25</wp:post_date>
  <wp:post_date_gmt>2014-06-10 06:56:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>agile-rails-development-methodology</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[468]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[63569703]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:35:"Agile Rails Development Methodology";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-05-13 09:17:37";s:9:"permalink";s:97:"http://offshorerubyonrails.wordpress.com/2014/05/13/development-methodology-from-developers-angle";s:7:"content";s:4683:"<div class="reblogged-content">

<h3 class="western" style="text-align:left;">Agile Rails Development Methodology according to a developer is to use the following path for <a href="http://railscarma.com/" target="_blank">Ruby on Rails Application Development.</a>
</h3>
<p style="text-align:left;"><b>1. </b><strong>Write down a list of goals, roles, and features</strong></p>

<ul style="text-align:left;">
<li>
<p style="margin-bottom:0;">Goals – what the goals of the whole project are – business and otherwise. This will help you decide what features are important</p>
</li>
	<li>
<p style="margin-bottom:0;">Roles – who is going to use the site – visitors, logged in members, <strong>admins?</strong> Do different people have different views of the same information on the site?</p>
</li>
	<li>
<p style="text-align:left;">Features – what are the basic categories of interaction on the site? For example: Users: registration, using the forums, and blogging; Admins: moderating the user content</p>
</li>
</ul>
<p style="text-align:left;">2. <strong>Write a list of stories</strong></p>

<ul style="text-align:left;">
<li>
<p style="margin-bottom:0;">A story is different than a feature because it represents a single thread of interaction from a particular user’s perspective.</p>
</li>
	<li>
<p style="margin-bottom:0;">It’s common to express stories in form “As a ____ I want to ____ so that I can _____.” This forces you answer three important questions – Who is this for? What do they want to do? Why do they want to do it?</p>
</li>
	<li>
<p style="margin-bottom:0;">If you can’t complete a story in this form, it’s likely that you don’t have an answer to one of these three questions yet, so you’ll need to do some thinking to get the answers before the story is actionable.</p>
</li>
	<li>
<p style="margin-bottom:0;">Ex: “As an admin, I want to ban users from the forum, So that I can improve the quality of user-submitted content on the site.</p>
</li>
	<li>
<p style="text-align:left;">Write these stories down on note cards. This will help you in estimation and prioritization.</p>
</li>
</ul>
<p style="text-align:left;"><strong>3. Estimate the stories</strong></p>

<ul style="text-align:left;">
<li>
<p style="margin-bottom:0;">Estimation is a huge topic in itself, but the basic idea is to associate a particular level of effort with each story.</p>
</li>
	<li>
<p style="margin-bottom:0;">The most common scales are 0/1/2/3/4, 0/1/2/4/8. I don’t think this is incredibly important, but pick something and stick with it.</p>
</li>
	<li>
<p style="margin-bottom:0;">Don’t get too hung up on the exactness of the estimates. Lots of things affect how long it takes you to finish a story, so small differences in story complexity tend to get lost in the noise.</p>
</li>
	<li>
<p style="margin-bottom:0;">Your goal here is to differentiate things that are low in effort, like stories that will result in you creating a simple model with a REST controller, from stories that are high in effort, like interfacing your application with a challenging third-party API, or a story that will require you to use a technology you aren’t very familiar with.</p>
</li>
	<li>
<p style="text-align:left;">Write the estimate on each card.</p>
</li>
</ul>
<p style="text-align:left;"><strong>4. Prioritize the stories</strong></p>

<ul style="text-align:left;">
<li>
<p style="margin-bottom:0;">Rearrange the cards in the order that you’d like to tackle the stories.</p>
</li>
	<li>
<p style="margin-bottom:0;">Only the product owner can really make this decision. There are a lot of things that go into prioritization – deadlines, user testing, business value, etc. Estimation may have a lot to do with prioritization, because it illuminates opportunity cost. Maybe the product owner really wants that detailed Admin Dashboard, but if all the stories to make that work total 40 points, is it worth it to spend a month on just this feature. Maybe the product owner still wants the story</p>
</li>
	<li>
<p style="margin-bottom:0;">Are there any stories that don’t fit into the very minimum viable product to launch? If so, you should move them down. Try to complete a functioning app as quickly as possible so you can put it in front of users.</p>
</li>
	<li>
<p style="text-align:left;">At this point, I usually move my cards into Pivotal Tracker, but I know lots of people who prefer pen and paper.</p>
</li>
</ul>
<p style="text-align:left;"><strong>Read More : <a href="http://railscarma.com/agile-rails-methodology.html" target="_blank">Railscarma.com</a></strong></p>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby time and Google Calendar API</title>
  <link>http://bob-roberts.net/2014/06/11/ruby-time-and-google-calendar-api/</link>
  <pubDate>Thu, 12 Jun 2014 04:45:42 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1159</guid>
  <description/>
  <content:encoded><![CDATA[So Google Calendar is pretty picky when it comes to working with its API.  We have an application that will fetch the calendar events for a 2 month timeframe.  It will soon be changed to allow for a different start and end time.  So first of all lets look at what the URL must be formatted as:
<p style="padding-left:30px;">https://www.googleapis.com/calendar/v3/calendars/test%40gmail.com/events?key=&lt;your-api-key-goes-here&gt;&amp;timeMin=2014-06-11T12:00:00Z&amp;timeMax=2014-08-12T12:00:00Z&amp;orderBy=starttime&amp;singleEvents=true</p>
So notice that the timMin is the calendars start time and is formatted as such:
<p style="padding-left:30px;">2014-06-11T12:00:00Z</p>
This was a pain in the ass to convert correctly.  I never was able to completely get the format correctly using Ruby strftime but I got really close:
<p style="padding-left:30px;">Date.today.strftime("%Y-%m-%dT%l:%M:%S") == 2014-06-11T12:00:00</p>
So I cheated and did:
<p style="padding-left:30px;">Date.today.strftime("%Y-%m-%dT%l:%M:%S") + "Z"</p>
Now for the fun part.  I just refactored older code.  I just want to show the before and after for the fun of it!!!

<strong>BEFORE:</strong>

[sourcecode language="ruby"]

 def current_calendar
   @cal = nil
   @api_key = 'zzzzzzzz'

   @cc_today = Time.now
   @cc_yr = @cc_today.year
   @cc_mth = @cc_today.month

   # We want to get two mths of events
   # so create a Time for next month
   if @cc_mth == 12
     @cc_mth = 1
     @cc_yr += 1
   else
     @cc_mth += 1
   end

   @cc_next_mth = Time.new(@cc_yr, @cc_mth, 1)
   @days_in_month = Time.days_in_month(@cc_mth)

   @min_date = '%Y-%m-01'
   @max_date = '%Y-%m-'
   @max_date = @max_date + @days_in_month.to_s
   @timeMin = @cc_today.strftime(@min_date)
   @timeMax = @cc_next_mth.strftime(@max_date)

   @timeMin = @timeMin + 'T00:00:01Z'
   @timeMax = @timeMax + 'T23:59:59Z'

   @myString = '?'
   @myString = @myString + 'key='
   @myString = @myString + @api_key
   @myString = @myString + '&amp;'
   @myString = @myString + 'timeMin='
   @myString = @myString + @timeMin
   @myString = @myString + '&amp;'
   @myString = @myString + 'timeMax='
   @myString = @myString + @timeMax
   @myString = @myString + '&amp;'
   @myString = @myString + 'orderBy=starttime'
   @myString = @myString + '&amp;'
   @myString = @myString + 'singleEvents=true'

   @email = self.url.gsub(/@/ , '%40')

   @url_params = 'https://www.googleapis.com/calendar/v3/calendars/'
   @url_params = @url_params + @email
   @url_params = @url_params + '/events'
   @url_params = @url_params + @myString
   @response = HTTParty.get(@url_params)
   @cal = @response.parsed_response['items']
 end
[/sourcecode]

&nbsp;

<strong>AND AFTER:</strong>

[sourcecode language="ruby"]

def current_calendar
  api_key = 'zzzzzzzzz'

  time_min = Date.today.strftime(&quot;%Y-%m-%dT%l:%M:%S&quot;) + &quot;Z&quot;
  time_max = (Date.today + 2.months + 1.day).strftime(&quot;%Y-%m-%dT%l:%M:%S&quot;) + &quot;Z&quot;

  url = &quot;https://www.googleapis.com/calendar/v3/calendars/#{self.url.gsub(/@/ , '%40')}/events?key=&quot; +
  api_key + &quot;&amp;timeMin=&quot; + time_min + &quot;&amp;timeMax=&quot; + time_max + &quot;&amp;orderBy=starttime&amp;singleEvents=true&quot;

  response = HTTParty.get(url)
  @cal = response.parsed_response['items']
 end

[/sourcecode]

Moral of the story ....

Ruby is a fantastic language with methods for just about everything.  Why do things the hard way???]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1159</wp:post_id>
  <wp:post_date>2014-06-11 21:45:42</wp:post_date>
  <wp:post_date_gmt>2014-06-12 04:45:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-time-and-google-calendar-api</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0d58b095c30301c28be9f5467a488754</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby on Rails Developers Phoenix AZ WANTED</title>
  <link>http://bob-roberts.net/2014/06/12/ruby-on-rails-developers-phoenix-az-wanted/</link>
  <pubDate>Fri, 13 Jun 2014 02:52:14 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1165</guid>
  <description/>
  <content:encoded><![CDATA[<p class="p1">I am looking to bring on a few Ruby on Rails developers to work in-house in Downtown Phoenix AZ.  This is a once in a life time opportunity to get on with a well funded and solid startup.</p>
<p class="p1">Here is the ad part:</p>
<p class="p1"><span class="s1"><a href="http://socialwhirled.com">SocialWhirled</a> is hiring multiple Ruby on Rails developers.</span></p>
<p class="p2">Our developers work onsite in a beautifully remodeled facility in downtown Phoenix.  We will building our in-house team from the ground up, so this is a chance to get in on the ground floor.  Every developer with SocialWhirled will be an intricate part in taking SocialWhirled to the next level.</p>
<p class="p2">The successful candidates will be responsible for developing web applications within the Ruby on Rails framework. The individuals must have strong technical skills, be independent and resourceful, be able to communicate and collaborate effectively, and be able to thrive in a fast-paced startup environment.</p>
<p class="p1"><span class="s1">What you will do:</span></p>

<ul>
	<li>Write clean, maintainable and efficient code</li>
	<li>Contribute in all phases of the development lifecycle</li>
	<li>Follow best practices (test-driven development, continuous integration, SCRUM, refactoring, code standards)</li>
	<li>Experience in web development using the Ruby on Rails web application framework</li>
	<li>One to three years general programming experience</li>
	<li>Proactive and resourceful person who achieves with minimal oversight</li>
	<li>Team player with the ability and desire to become an integral part of a fast-paced team</li>
</ul>
<p class="p1"><span class="s1">What you will need:</span></p>

<ul>
	<li>Demonstrable knowledge of front-end technologies such as JavaScript, HTML, CSS &amp; jQuery</li>
	<li>A firm grasp of object oriented analysis and design</li>
	<li>Passion for writing great, simple, clean, efficient code</li>
	<li>Good knowledge of relational databases</li>
	<li>A great attitude and sense of humor</li>
</ul>
<p class="p1"><span class="s1">Mid level skill or better is preferred.</span></p>
<p class="p1">These positions are available immediately.  Salary is DOE.  Please email important data to broberts@socialwhirled.com. Resumes, Github account, portfolios, and samples of work are relevant to our interests.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1165</wp:post_id>
  <wp:post_date>2014-06-12 19:52:14</wp:post_date>
  <wp:post_date_gmt>2014-06-13 02:52:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-on-rails-developers-phoenix-az-wanted</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="phoenix-az"><![CDATA[Phoenix AZ]]></category>
  <category domain="post_tag" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="ruby-on-rails-developers"><![CDATA[Ruby on Rails developers]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/GIgdgWEcbN]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The 20 Highest-Paying Jobs You Can Do From Home</title>
  <link>http://bob-roberts.net/2014/06/15/the-20-highest-paying-jobs-you-can-do-from-home/</link>
  <pubDate>Sun, 15 Jun 2014 21:14:43 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/06/15/the-20-highest-paying-jobs-you-can-do-from-home/</guid>
  <description/>
  <content:encoded><![CDATA[I never liked law and I do not have a great voice.  So Ruby Programmer it is :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1167</wp:post_id>
  <wp:post_date>2014-06-15 14:14:43</wp:post_date>
  <wp:post_date_gmt>2014-06-15 21:14:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-20-highest-paying-jobs-you-can-do-from-home</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[1208]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[57802711]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:47:"The 20 Highest-Paying Jobs You Can Do From Home";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-06-08 09:11:03";s:9:"permalink";s:88:"http://rajesh38.wordpress.com/2014/06/08/the-20-highest-paying-jobs-you-can-do-from-home";s:7:"content";s:1622:"<div class="reblogged-content">

<div style="font-size:16px;">
<img class="aligncenter" src="https://static-ssl.businessinsider.com/image/5391f2ba6bb3f7522303e629-1200-1695/bi_graphics_skillslist-v02.jpg" alt="" width="659" height="524">U.S. businesses will spend half a billion dollars hiring remote freelance workers in2014."The growth is a clear indicator of a transition of work online," says Fabio Rosati, CEO of Elance-oDesk.The company's platform - which serves as a broker between companies that need skills and freelancers eager to supply them - sees 2.7 million freelance jobs posted a year. According to the company, the total earnings of freelancers have grown 50% compounded annually over the past five years.From Rosati's perspective, so many businesses are hiring these workers because they need work done on demand, often for a short stint. In those cases, a marketplace like Elance-oDesk becomes like the Amazon Prime for jobs. It's a win for the employer, who can hire on an as-needed basis, and for the worker, who has flexibility of schedule and location.
<p class="p1">What's more, freelancers with the right skills can earn a great living from the comfort of their homes - if the highest-paying freelance jobs are any indicator.</p>
<p class="p1">The wage numbers below come from the combined databases of <a href="https://www.elance.com/" target="_blank">Elance.com</a> and<a href="https://www.odesk.com/" target="_blank">oDesk.com</a>, pulling from January 1 to May 31 of this year.</p>
<p class="p1"><strong>From: [embed]http://www.businessinsider.in/[/embed]</strong></p>

</div>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_e09bc4fcfb1eb53aded0a1f3bb8b9884</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rail Unicorn server start on server boot</title>
  <link>http://bob-roberts.net/2014/06/15/rail-unicorn-server-start-on-server-boot/</link>
  <pubDate>Sun, 15 Jun 2014 22:46:40 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1168</guid>
  <description/>
  <content:encoded><![CDATA[So this weekend we were having some power outages where our onsite servers are located.  When the servers booted back up, Unicorn server was not running.  This was quick and easy to fix using the <a href="https://github.com/sosedoff/capistrano-unicorn" target="_blank">capistrano-unicorn gem</a>:
<blockquote>If you get a generic looking 500 page then it may be the Unicorn server. You can check if Unicorn is running using ps aux as well. There should be one master and 5 workers running. If not you can use:

cap unicorn:reload # Reload Unicorn
cap unicorn:restart # Restart Unicorn
cap unicorn:show_vars # Debug Unicorn variables
cap unicorn:shutdown # Immediately shutdown Unicorn
cap unicorn:start # Start Unicorn master process
cap unicorn:stop # Stop Unicorn

Remember to use the development/staging/production in between the cap and unicorn (e.g. cap development unicorn:stop) In general, I would just use stop and start. It gives pretty good errors when you run it.</blockquote>
But that is a reactive fix and we want to be proactive and not think about these things on the weekend.  So, I tried a few other things like Monit but I could not get it to play nice with Unicorn and even then I realized that there was nothing setting Monit to start on server boot.  I read a couple of things about <a href="https://github.com/bluepill-rb/bluepill" target="_blank">Bluepill gem</a> and I decided to give it a try.

First off I added the Bluepill gem to my Gemfile but that did not seem to work so I installed on the server:
<p style="padding-left:30px;">sudo gem install bluepill</p>
Following the Github README, I created <i>/var/run/bluepill</i> directory for bluepill to store its pid and sock files.

Next I created a Bluepill configuration file in path/to/app/config and named it production.pill.  Bluepill can use different pill files based on the environment.

[sourcecode language="ruby"]

Bluepill.application(&quot;my_app&quot;, log_file: &quot;/var/www/my_app/shared/log/bluepill.log&quot;) do |app|
  app.process(&quot;unicorn&quot;) do |process|
    process.working_dir = &quot;/var/www/my_app/current&quot;

    process.start_grace_time = 20.seconds
    process.stop_grace_time = 20.second
    process.restart_grace_time = 20.seconds

    process.pid_file = &quot;/var/www/my_app/shared/pids/unicorn.pid&quot;

    process.start_command = &quot;bundle exec unicorn -c /var/www/my_app/current/config/unicorn.rb -E production -D&quot;
    process.stop_command = &quot;kill -QUIT {{PID}}&quot;
    process.restart_command = &quot;kill -USR2 {{PID}}&quot;

    process.uid = &quot;deploy&quot;
    process.gid = &quot;deploy&quot;
  end
end

[/sourcecode]

We will want to test to see if Bluepill is working.  First we need to load the Bluepill configuration file and start it:
<p style="padding-left:30px;">$  sudo bluepill load /var/www/my_app/current/config/production.pill</p>
<p style="padding-left:30px;">$  sudo bluepill status</p>
Now we should have Bluepill monitoring our unicorn.  I tested this by stopping the unicorn server and checking the application and sure enough, the Unicorn master was restarted by Bluepill.  You can also watch the Bluepill logfile with sudo bluepill log unicorn.

So now that is all up and running, we need to make sure that Bluepill is started when the server boots.  Create a bluepill.cong in the /var/init/ directory and add this:

[sourcecode language="ruby"]

description &quot;My App Bluepill&quot;

start on runlevel [2]
stop on runlevel [016]

expect daemon
exec bluepill load /var/www/my_app/current/config/production.pill

respawn

[/sourcecode]
]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1168</wp:post_id>
  <wp:post_date>2014-06-15 15:46:40</wp:post_date>
  <wp:post_date_gmt>2014-06-15 22:46:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rail-unicorn-server-start-on-server-boot</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <category domain="post_tag" nicename="unicorn-server"><![CDATA[Unicorn server]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/b4FrSY6nKw]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ericsson Supports Girls</title>
  <link>http://bob-roberts.net/2014/07/08/ericsson-supports-girls/</link>
  <pubDate>Wed, 09 Jul 2014 01:03:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/08/ericsson-supports-girls/</guid>
  <description/>
  <content:encoded><![CDATA[We need a group in Phoenix]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1185</wp:post_id>
  <wp:post_date>2014-07-08 18:03:12</wp:post_date>
  <wp:post_date_gmt>2014-07-09 01:03:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ericsson-supports-girls</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_635607b670216261af9badf098e499b9</wp:meta_key>
    <wp:meta_value><![CDATA[<a href="https://www.flickr.com/photos/125815366@N08/14498110082/in/set-72157644933693558/"><img src="https://farm6.staticflickr.com/5113/14498110082_1ffa4dd713_n.jpg" alt="IMG_1470" width="320" height="240" /></a>]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[8704]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[5209274]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:23:"Ericsson Supports Girls";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-07-02 18:38:28";s:9:"permalink";s:61:"http://6arry.wordpress.com/2014/07/08/ericsson-supports-girls";s:7:"content";s:983:"<div class="reblogged-content">

<a href="http://railsgirls.com/" target="_blank">RailGirls</a> that is. If you have never heard of it before, RailGirls' aim is to give tools and a community for women to understand technology and to build their ideas. TheyÂ do this by providing a great experience on building things and by making technology more approachable.

Rails Girls was born in Finland, but is nowadays a global, non-profit volunteer community, and recently held an event in Galway which Ericsson supported with sponsorship and engineers.

If you missed it, don't worry, I'm sure there will be future events soon, but in the meantime, this might give you a feeling forÂ one ofÂ the events if you think RailGirls might be for you and you think you might like to attend:
<p style="text-align:center;">[embed]https://www.flickr.com/photos/125815366@N08/14498110082/in/set-72157644933693558/[/embed]
Ericsson Master EngineerÂ Gerry Kavanagh at RailGirls Galway</p>
 </div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/kTgAO6InNB]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5892442625218199552&type=U&a=R4gj]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>WebSocket over Nginx</title>
  <link>http://bob-roberts.net/2014/07/08/websocket-over-nginx/</link>
  <pubDate>Wed, 09 Jul 2014 01:05:18 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/08/websocket-over-nginx/</guid>
  <description/>
  <content:encoded><![CDATA[Great write up for Websockets and Nginx (and you should be using Nginx!!)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1186</wp:post_id>
  <wp:post_date>2014-07-08 18:05:18</wp:post_date>
  <wp:post_date_gmt>2014-07-09 01:05:18</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>websocket-over-nginx</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/DOcyYDt66e]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5892443143508348928&type=U&a=Zw06]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[2776]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[9042983]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:20:"WebSocket over Nginx";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2013-05-28 15:59:42";s:9:"permalink";s:60:"http://blog.joshsoftware.com/2013/05/28/websocket-over-nginx";s:7:"content";s:7484:"<div class="reblogged-content">

How often do you find that the awesome movie seats you have painstakingly chosen for yourself, is suddenly not available when you proceed to pay for it. "Damn it! Just missed!" you say. Wouldn't it be  great to be guaranteed the seat you selected everytime!

The problem with the above scenario (as is  with most e-commerce portals) is that, if two users almost simultaneously  select same seat and checkout to book, the seat will be booked with the user who has clicked first. The other user will be redirected to same page with message the S<em>eat has already been booked</em>. We all have used Indian Railway Website and this problem really gets me frustrated.So I wanted to build system in which the seat I select always gets booked.

To avoid this problem, I came up with two solutions
<h3>Auto Refresh every 2 seconds (like cricket scores on cricinfo.com)</h3>
<ul>
<li>This would increase load on server as there will be database query every 2 seconds and  again the load will increase with increase in concurrent users using the page.</li>
	<li>This would not create a real-time user experience.</li>
</ul>
<h3>Websockets</h3>
WebSockets is a web technology providing full-duplex communications channels over a single TCP connection. It is similar to radio broadcasting. It consists of a broadcaster (radio transmitter) and subscribers (radio receivers). A user connects to a particular channel (frequency) and whatever is published over that channel is received by the user. Similarly, in the Websocket space, the broadcaster is a server and the subscriber is the browser.

So, in the earlier scenario, whenever a seats get booked, the server will broadcast message to all subscribers instantaneously. With the help of this message, wecan change the color of a booked seat immediately on all browsers that have the page open. This ensures
<ul>
<li>Low load on server.</li>
	<li>A Real Time user experience</li>
</ul>
I thought of using <span style="color:#000000;"><a title="websocket-rails" href="https://github.com/DanKnox/websocket-rails" target="_blank"><span style="color:#000000;">websocket-rails</span></a></span> gem as it makes it pretty easy to implement WebSocket in rails.  It is built over<span style="color:#000000;"><a title="faye" href="http://faye.jcoglan.com/" target="_blank"><span style="color:#000000;"> faye</span></a></span> (a publish-subscribe messaging system based on the Bayeux Protocol).
<h2>Getting started with websocket-rails</h2>
<h3>The Configuration</h3>
<ol>
<li>Add the websocket-rails gem to your Gemfile and run the bundle command</li>
	<li>Run the installation generator:   The generator will require the WebSocket javascripts  in our <code>application.js                                                     </code>
<pre>bundle exec rails g websocket_rails:install</pre>
</li>
</ol>
A lot more information related to setup is <a href="https://github.com/DanKnox/websocket-rails/wiki/Installation-and-Setup">here</a>
<h3>Connecting to the server</h3>
You connect to the server by creating a new WebSocketRails object and passing it the server address.

[code language="ruby"]
# app/views/bookings/index.html.haml
javascript:
  var dispatcher = new WebSocketRails('localhost:3001/websocket')
[/code]
<h3>Event Router and Trigger events on the server from the browser client</h3>
The installation generator will create the events.rb file in your config/initializers directory. All the routes related to websockets are to be added here. You can edit this file to begin mapping client side events to controller actions.

[code language="ruby"]
# config/initializers/events.rb
subscribe :hold_seat, to: UserController, with_method: :hold_seat
[/code]

This events triggered from the JavaScript client will invoke methods on the controller on the server. For example, from the browser JavaScript console, we can trigger the UsersController#hold_seat method with the following command

[code language="javascript"]
dispatcher.trigger('hold_seat', {seat_number: 12});
[/code]

<strong>Triggering Events on the Client form server</strong>
<ul>
<li>Broadcasting to all connected clients</li>
</ul>
You can trigger an event on the client using the broadcast_message method. The broadcast_message method takes two arguments, the event name to trigger(function to invoke on client side), and an object to send along with the event.

[code language="ruby"]
# app/controller/users_controller.rb:
broadcast_message :update_seat_status, {number: seat.number, state: 'hold'}
[/code]
<ul>
<li> Broadcasting to subscribed clients</li>
</ul>
The channel will be automatically created the first time a client subscribes to the channel or a message is broadcasted to the channel on the server.

To listen to events on channel we can add this JavaScript on our page

[code language="javascript"]
# app/assets/javascripts/websocket.js
channel = dispatcher.subscribe(channel_name);
[/code]

To publish to a specific channel, we can publish a message to that channel from anywhere in a Rails application using the following code syntax:

[code language="ruby"]
WebsocketRails[:channel_name].trigger(:event_name, object_to_send)
[/code]
<ul>
<li>Publishing events from the browser client</li>
</ul>
[code language="javascript"]
channel.trigger('event_name', object_to_send);
[/code]

A full fledged working Rails application for booking seats using Websocket-rails is available on my <span style="color:#000000;"><a title="github account" href="https://github.com/pratik14/booking" target="_blank"><span style="color:#000000;">github account</span></a></span>
<h2>Caveats</h2>
<ul>
<li>I used passenger as application server and  as far passenger 3 is concerned it does not support  WebSockets. Passenger 4 does support websockets but I have not tried it yet. Instead, I used thin as a standalone server. In this situation only  the page which needs WebSocket connection was rendered using the standalone server and rest of the application works on passenger.  We also need to use Redis to enable publishing channel events to the standalone server.</li>
</ul>
<p style="padding-left:30px;">Configuration to enable standalone server mode</p>

[code language="ruby"]
# config/initializers/events.rb
WebsocketRails.setup do |config|
  config.standalone = true
end
[/code]

For more configuration click <a href="https://github.com/DanKnox/websocket-rails/wiki/Standalone-Server-Mode">here</a>
<ul>
<li>Use Thin server as primary app server.</li>
</ul>
<h3>Protocol Upgradation from http to websocket protocol</h3>
It is required to change the protocol form http to websockcet for creating websocket. Nginx did announce its support for protocol upgradation for websocket in its 1.3.13 version (Feb 2103).  We just to need configure nginx to change protocol  from http to websocket protocol for a specific route.  In below configuration protocol upgradation is done using  proxy_set_header option.

[code language="bash"]
server {
  listen   80;
  server_name  app.local;
  root  /home/app/public;
  passenger_enabled on;
  rails_env development;

  location /any_location {
     proxy_pass http://localhost:3001/realtime_page;
     proxy_http_version 1.1;
     proxy_set_header Upgrade $http_upgrade;
     proxy_set_header Connection "upgrade";
  }
}[/code]</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Exploring Rails: Single Table Inheritance </title>
  <link>http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/</link>
  <pubDate>Thu, 10 Jul 2014 06:48:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/09/exploring-rails-single-table-inheritance/</guid>
  <description/>
  <content:encoded><![CDATA[As usual a great article by Ramon!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1187</wp:post_id>
  <wp:post_date>2014-07-09 23:48:36</wp:post_date>
  <wp:post_date_gmt>2014-07-10 06:48:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>exploring-rails-single-table-inheritance</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:42:"Exploring Rails: Single Table Inheritance ";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-06-04 16:34:30";s:9:"permalink";s:85:"http://projectramon.wordpress.com/2014/06/04/exploring-rails-single-table-inheritance";s:7:"content";s:8294:"<div class="reblogged-content">

Hello and happy Wednesday!

In <a href="http://projectramon.wordpress.com/2014/06/02/exploring-rails-polymorphic-mayhem-accepts-nested-attribute-success/" target="_blank">the last post</a>, we covered a solution towards using the Rails' Form Helper <code>accepts_nested_attributes_for</code> to give us a convenient ability to create data fields for multiple models to save and retrieve. This is also known as creating a multi-part form.

At the time I hadn't figured out how to implement Single Table Inheritance properly, and instead created 2 phone number classes to represent a primary and secondary number. After some quick looking around, I found some pretty insightful tutorials that allowed me to use STI in order to DRY out my two redundant classes from the last post.

<h3>What I did Wrong</h3>

Lets take a quick look at the code from my last post, in order to demonstrate the problem and set the stage for implementing STI properly in Rails. 

https://gist.github.com/sirramongabriel/96a7c6415a0311669cdc

I was having an issue with seeing the attribute fields commit or retrieve the data stored in them, so when I created an object, the attributes were all evaluating to <code>nil</code>. This issue went away completely when I realized that the <code>has_many</code> associations for <code>primary_phones</code> and <code>secondary_phones</code> were unnecessary. It's unnecessary because we're using inheritance. 

This has the benefit of allowing use one clear interface to make changes for all of <code>PhoneNumber</code>'s sub-classes. I can also add specific methods and/or attributes to the sub-classes if need be. 

<h3>When to use STI</h3>

Before we cover the steps towards using STI, lets go over when STI can be considered as an option.

<a href="http://eewang.github.io/blog/2013/03/12/how-and-when-to-use-single-table-inheritance-in-rails/" target="_blank">This blog post</a>, covers it nicely:



<blockquote>STI should be considered when dealing with model classes that share much of the same functionality and data fields, but you as the developer may want more granular control over extending or adding to each class individually. Rather than duplicate the code over and over for multiple tables (and not being DRY) or forego the flexibility of adding idiosyncratic functionality or methods, STI permits you to use keep your data in a single table while writing specialized functionality.</blockquote>

This is exactly what we need to DRY out my redundant <code>PrimaryPhoneNumber</code> and <code>SecondaryPhoneNumber</code> classes in the example at the top of this post.

I also stumbled upon this post and wanted to include it as something to personally keep in mind.

<a href="http://rhnh.net/2010/07/02/3-reasons-why-you-should-not-use-single-table-inheritance" target="_blank">3 Reasons Why You Shouldn't use STI</a>

Here's is an excerpt from that post:



<blockquote>The only time STI is the right answer is when you have models with exactly the same data, but different behavior. You don’t compromise your data model, and everything stays neat and tidy. I have yet to see a case in the wild where this rule holds, though.

If you are using STI (or inheritance in general) to share code, you’re doing it wrong. Having many tables does not conflict with the Don’t-Repeat-Yourself principle. Ruby has modules, use them. (I once had a project where a 20 line hash drove the creation of migrations, models, data loaders and test blueprints.)</blockquote>



<h3>Implementing STI in Rails</h3>

So here is an outline of how I was able to correctly implement this pattern for my application.

<ol>
<li>Create the base class</li>
<li>Along with your needed attributes, add a <code>:type</code> attribute as a string to the base class</li>
<li>Create any necessary descendant classes</li>
</ol>
<strong>Step1:</strong> This is where I've added the attributes that will be inherited by both of my child classes. Note that this base class inherits from <code>ActiveRecord::Base</code>. 

https://gist.github.com/sirramongabriel/b63bf4a837f16ac28d03

<strong>Step2:</strong> Here all we need to do is add the attribute <code>:type</code> to our <code>phone_numbers</code> table in the database.

<a href="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img1.jpg"><img src="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img1.jpg" alt="exploring_sti1_img1" width="639" height="35" class="aligncenter size-full wp-image-1949" data-originalSrc="http://projectramon.files.wordpress.com/2014/06/exploring_sti1_img1.jpg" data-rehosted="1"></a>

Now to add the <code>:type</code> to Rails' whitelist of attributes (note: I'm using Rails 3.2.x).

https://gist.github.com/sirramongabriel/dbeb150109a1493d0495

For Rails4.x we would create or add our <code>:type</code> attribute to the end of our <code>permit</code> arguments <a href="http://edgeapi.rubyonrails.org/classes/ActionController/StrongParameters.html" target="_blank">like it says here</a> in the RailsAPI:

<a href="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img5.jpg"><img src="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img5.jpg" alt="exploring_sti1_img5" width="567" height="131" class="aligncenter size-full wp-image-1960" data-originalSrc="http://projectramon.files.wordpress.com/2014/06/exploring_sti1_img5.jpg" data-rehosted="1"></a>

And since the migration has been ran, we can confirm by taking a quick detour to look at our <code>schema.rb</code> file.

<a href="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img2.jpg"><img src="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img2.jpg" alt="exploring_sti1_img2" width="676" height="92" class="aligncenter size-full wp-image-1950" data-originalSrc="http://projectramon.files.wordpress.com/2014/06/exploring_sti1_img2.jpg" data-rehosted="1"></a>

<strong>Step3:</strong> Time to create our descendant class'. No need to add attributes, because they are going to be inherited from the base class <code>PhoneNumber</code>. 

https://gist.github.com/sirramongabriel/3452795a3cf0fa1d725f

Now lets have a bit of fun and see how we can benefit from us implementing this pattern in our Rails application.

<h3>STI in Action!</h3>

<a href="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img3.jpg"><img src="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img3.jpg" alt="exploring_sti1_img3" width="676" height="59" class="aligncenter size-full wp-image-1951" data-originalSrc="http://projectramon.files.wordpress.com/2014/06/exploring_sti1_img3.jpg" data-rehosted="1"></a>

We can already see from the example above, that <code>PrimaryPhone</code> is properly inheriting the <code>:area_code</code> and <code>:number</code> attributes from it's parent, <code>PhoneNumber</code>.

Here's something pretty neat, we can call all phone numbers through our base class and then have our <code>:type</code> attribute tell us which type of number we have stored.

<a href="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img4.jpg"><img src="http://bobspython.files.wordpress.com/2014/07/exploring_sti1_img4.jpg" alt="exploring_sti1_img4" width="676" height="199" class="aligncenter size-full wp-image-1952" data-originalSrc="http://projectramon.files.wordpress.com/2014/06/exploring_sti1_img4.jpg" data-rehosted="1"></a>

So we can call <code>PhoneNumber.all</code> and receive a list of all numbers (including any base class objects) and then allow <code>:type</code> to 'categorize' which type of number object we're looking at.

<h3>Learning Resources</h3>

I hope you've found this post on implementing STI in Rails informative. Here are a few resources that I found both insightful and easy to follow.

<ol>
<li>
<strong><a href="http://vimeo.com/22143576" target="_blank">STI Rails Tutorial</a></strong> by: <a href="https://twitter.com/cmaxw" target="_blank">Charles Max Wood</a>
</li>


	<li>
<strong><a href="http://blog.eizesus.com/2009/10/sti-best-practices-in-rails/" target="_blank">STI Best Practices in Rails</a></strong> by: Emphasized Insantiy</li>
</ol>

Stay tuned...

</div>";s:15:"images_mirrored";i:5;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[1948]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[57073557]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/GPu7ZUfnh2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5892891926251720704&type=U&a=ai2s]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Programming on the Toilet</title>
  <link>http://bob-roberts.net/2014/07/12/programming-on-the-toilet/</link>
  <pubDate>Sun, 13 Jul 2014 04:46:08 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/12/programming-on-the-toilet/</guid>
  <description/>
  <content:encoded><![CDATA[This is so true.  I usually get my epiphanies at the end of the day in the shower.  :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1193</wp:post_id>
  <wp:post_date>2014-07-12 21:46:08</wp:post_date>
  <wp:post_date_gmt>2014-07-13 04:46:08</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>programming-on-the-toilet</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[77]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[50374290]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:25:"Programming on the Toilet";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-03-23 12:11:48";s:9:"permalink";s:67:"http://brianslam.wordpress.com/2014/03/21/programming-on-the-toilet";s:7:"content";s:4364:"<div class="reblogged-content">

It's 5PM. I've been working on the same code for hours, grinding out an implementation one line at a time. It's been a torturous process. Some days, code just naturally flows from my brain to my fingertips. This is not one of those days.

<!--more-->I've been tasked with adding new functionality to a class. "Easy", I thought. "I wrote this class, so it shouldn't be hard to figure out how to extend it." So, after a delicious lunch, I sat down and started coding.

Things started out all right - I had a vague idea of how the new functionality would fit in the class. However, the deeper I got into my implementation, the more I realized my vague idea wasn't good enough. Functions needed access to data that wasn't available to them. I was creating edge cases left and right, making the class much more fragile and bug-prone. On top of that, unit tests were constantly failing when I ran my new code.

I fell deeper and deeper into the rabbit hole over the next few hours, until I could barely recognize the code I had written. I was constantly looking at the diff between my local code and the original to figure out what I had changed. I no longer had a mental model of how the code worked, or how I wanted it to work. Things soon degraded into a battle between me and my computer. "Just compile, damn you, compile!"

So here we are at 5PM - one hour before I go home for the day. I've all but given up on finishing the feature today. "There's no way," I think. "It would take me an hour just to untangle this mess of code."

I stand up from my desk in defeat, my head hanging low, and make my way towards the bathroom. I sit down on the toilet, take a deep breath - and that's when I obtain enlightenment!

<h1>The Throne of Inspiration</h1>
<img src="http://bobspython.files.wordpress.com/2014/07/toilet1.jpg" alt="Toilet" width="268" height="299" class="alignright size-full wp-image-90" data-originalSrc="http://brianslam.files.wordpress.com/2014/03/toilet1.jpg" data-rehosted="1">Suddenly, I see everything clearly. Code is racing through my mind. I can see the class, all of its functionality and its use cases. I can see exactly where to add new code for the feature. I can see it all! 

I finish my business (<em>wash hands before returning to work!</em>) and rush back to my desk to start banging out code. My fingers can't type fast enough to keep up with the code that's rushing out of my brain. The keyboard starts losing structural integrity as my fingers hammer it with the force of a thousand suns. The computer and I are no longer enemies - we are the closest of allies, working together with a common goal.

Thirty minutes later, the code successfully compiles. All of the unit tests pass. I run down the list of requirements for the new feature, and each one works as expected. "I've done the impossible, I finished it!"

As I come down from my coding high, I reach a single, infallible realization: <strong>The most efficient programming I've done has not been in front of a keyboard, but on a toilet</strong>.

<h1>Step Back (From Your Code)</h1>

Now, I'm not saying that toilets have magic code-architecting properties (<em>although I do think they're a great invention</em>). However, I am saying that all but the most trivial coding tasks will be 10x easier if you step away from your computer and think things through at a high level. Whether it's going to the bathroom, taking a walk to the park, or just sitting in your office kitchen, getting away from your screen will clear your head and allow you to see the forest for the trees.

Many programmers are hesitant to step away from their desks. They consider time spent away from an IDE to be wasted, or worry that they'll be looked down upon. "Why isn't he at his desk coding!? Time for that demotion," their managers will say.

I would argue that this logic is completely backwards and counterproductive. Programmers are not paid to sit at a desk, or to stare at a screen, or even to write code. These are all just steps on the way to a programmer's real goal: to create functionality for the end-user. If you're able to create that functionality more quickly and efficiently by stepping away from your desk, then that's what you should be doing.

In conclusion: don't forget to use the bathroom while coding.
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/RvjiedTV2J]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5893948274842292224&type=U&a=vQMg]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why You Should Test</title>
  <link>http://bob-roberts.net/2014/07/23/why-you-should-test/</link>
  <pubDate>Thu, 24 Jul 2014 00:48:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/23/why-you-should-test/</guid>
  <description/>
  <content:encoded><![CDATA[Amen!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1195</wp:post_id>
  <wp:post_date>2014-07-23 17:48:12</wp:post_date>
  <wp:post_date_gmt>2014-07-24 00:48:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-you-should-test</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[13]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[63902221]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:19:"Why You Should Test";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-07-15 04:50:44";s:9:"permalink";s:57:"http://sixmonthsofruby.com/2014/07/14/why-you-should-test";s:7:"content";s:1928:"<div class="reblogged-content">

Test driven development is both loved and loathed by software engineers everywhere. It's a complicated relationship. While the benefits of TDD are well established, programmers are human, and the human mind is reluctant to associate non visible progress with perceived progress.
 
However, saying "I'll get this done faster if I don't write tests" is like saying "I'll get to china faster by going in a straight line." It's a great sentiment if you're willing to dig through a lot of rock. The fact is that writing tests might seem like taking a detour, but they also show you an easier path to where you want to go.

<h2>The Benefits</h2>

The first benefit of TDD is something almost intangible. Writing tests forces you to think about what you want to do. It forces you to plan, to design, and to define in your own mind what needs to be done. This is an enormous advantage by itself, but then it goes on and actively keeps you on track.

Most programmers, when faced with a project and left to their own devices, will morph the project over time into something almost unrecognizable from it's original conception. This isn't necessarily bad, some great ideas have been developed by people getting excited and going off on tangents, but it's no longer what you set out to accomplish. When you define a test that describes a behavior you're committing to following through on that behavior. This keeps simple projects simple instead of letting them mutate into something else.

TDD also provides you with a guide. If your tests are designed well enough you should always know the next step in a process simply by looking for the next failing test to solve.

Finally, and perhaps least importantly, tests tell you that your code is working. Although, to quote <em>Edsger W. Dijkstra</em>, 

<blockquote>"Testing shows the presence, not the absence of bugs."</blockquote>

</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/buCXbvhXDS]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5897874681314168832&type=U&a=W0eO]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Naming conventions on Ruby &amp; Ruby on Rails</title>
  <link>http://bob-roberts.net/2014/07/23/naming-conventions-on-ruby-ruby-on-rails/</link>
  <pubDate>Thu, 24 Jul 2014 00:50:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/23/naming-conventions-on-ruby-ruby-on-rails/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1196</wp:post_id>
  <wp:post_date>2014-07-23 17:50:21</wp:post_date>
  <wp:post_date_gmt>2014-07-24 00:50:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>naming-conventions-on-ruby-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[563]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[14963381]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:46:"Naming conventions on Ruby &amp; Ruby on Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-07-18 06:59:21";s:9:"permalink";s:85:"http://selvaonrails.wordpress.com/2014/07/18/naming-conventions-on-ruby-ruby-on-rails";s:7:"content";s:7466:"<div class="reblogged-content">

<p style="text-align:center;"><span style="text-decoration:underline;"><strong>Ruby Naming Conventions</strong></span></p>
<p><span style="font-family:Verdana;font-size:small;"><strong><em>Local Variables</em></strong><br>Lowercase letter followed by other characters, naming convention states that it is better to use underscores rather than camelBack for multiple word names, e.g. mileage, variable_xyz</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Instance Variables</strong><br></em>Instance variables are defined using the single "at" sign (@) followed by a name. It is suggested that a lowercase letter should be used after the @, e.g. @colour </span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Instance Methods</strong><br></em>Method names should start with a lowercase letter, and may be followed by digits, underscores, and letters, e.g. paint, close_the_door</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Class Variables</strong><br></em>Class variable names start with a double "at" sign (@@) and may be followed by digits, underscores, and letters, e.g. @@colour</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Constant </strong><br></em>Constant names start with an uppercase letter followed by other characters. Constant objects are by convention named using all uppercase letters and underscores between words, e.g. THIS_IS_A_CONSTANT</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Class and Module </strong><br></em>Class and module names starts with an uppercase letter, by convention they are named using MixedCase, e.g. module Encryption, class MixedCase</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Global Variables</strong><br></em>Starts with a dollar ($) sign followed by other characters, e.g. $global</span></p>
<p style="text-align:center;"><span style="text-decoration:underline;"><strong>Rails Naming Conventions</strong></span></p>
<p><span style="font-size:small;"><span style="font-family:Verdana;"><em><strong>Variable </strong><br></em>Variables are named where all letters are lowercase and words are separated by underscores, e.g. order_amount, total</span></span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Class and Module</strong> <br></em>Classes and modules use MixedCase and have no underscores, each word starts with a uppercase letter, e.g. InvoiceItem</span></p>
<p><span style="font-family:Verdana;font-size:small;"><strong><em>Database Table</em></strong><br>Table names have all lowercase letters and underscores between words, also all table names need to be plural, e.g. invoice_items, orders</span></p>
<p><span style="font-family:Verdana;font-size:small;"><strong><em>Model</em> </strong><br>The model is named using the class naming convention of unbroken MixedCase and is always the singular of the table name, e.g. table name might be orders, the model name would be Order. Rails will then look for the class definition in a file called order.rb in the /app/models directory. If the model class name has multiple capitalised words, the table name is assumed to have underscores between these words.</span></p>
<p><span style="font-family:Verdana;font-size:small;"><strong><em>Controller</em></strong><br>Controller class names are pluralized, such that OrdersController would be the controller class for the orders table.  Rails will then look for the class definition in a file called orders_controller.rb in the /app/controllers directory.</span></p>
<p><span style="font-family:Verdana;font-size:small;"><strong><em>Files, Directories and other pluralization</em></strong><br></span><span style="font-family:Verdana;font-size:small;">Files are named using lowercase and underscores. Assuming we have an Orders controller then the following other conventions will apply:</span></p>
<ul>
<li><span style="font-family:Verdana;font-size:small;">That there is a helper module named OrdersHelper in the orders_helper.rb found in the app/helpers directory</span></li>
<li><span style="font-family:Verdana;font-size:small;">Rails will look for view template files for the controller in the app/views/orders directory</span></li>
<li><span style="font-family:Verdana;font-size:small;">Output from this view will then be used in the layout defined in the orders.html.erb in the app/views/layouts directory</span></li>
<li><span style="font-family:Verdana;font-size:small;">Test files including <span style="font-family:Verdana;font-size:small;">order_test.rb</span> will be created in the /test/unit directory, a file will be created in the /test/fixtures directory called orders.yml and finally a file called orders_controller_test.rb will be created in the /test/functional directory</span></li>
</ul>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Primary Key</strong><br></em>The primary key of a table is assumed to be named id.</span></p>
<p><span style="font-family:Verdana;font-size:small;"><strong><em>Foreign Key</em></strong><br>The foreign key is named with the singular version of the target table name with _id appended to it, e.g. order_id in the items table where we have items linked to the orders table.</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Many to Many Link Tables</strong><br></em>Tables used to join two tables in a many to many relationship is named using the table names they link, with the table names in alphabetical order, for example items_orders.</span></p>
<p><span style="font-family:Verdana;font-size:small;"><em><strong>Automated Record Timestamps</strong><br></em>You can get ActiveRecord to automatically update the create and update times of records in a database table. To do this create two specially named columns created_at and updated_at to your table, i.e. t.datetime :created_at and t.datetime :updated_at. If you only want to store the date rather than a date and time, use :created_on and :updated_on.</span></p>
<p style="text-align:center;"><span style="text-decoration:underline;"><b>Naming Convention Summary</b></span></p>
<p><strong><span style="font-family:Verdana;font-size:small;"><em>Model Naming Convention</em></span></strong></p>
<p><span style="font-family:Verdana;font-size:small;">Table: orders<br>Class: Order<br>File: /app/models/order.rb<br>Primary Key: id<br>Foreign Key: customer_id<br>Link Tables: items_orders</span></p>
<p><strong><span style="font-family:Verdana;font-size:small;"><em>Controller Naming Convention</em></span></strong></p>
<p><span style="font-family:Verdana;font-size:small;">Class: OrdersController<br>File: /app/controllers/orders_controller.rb<br>Layout: /app/layouts/orders.html.erb</span></p>
<p><strong><span style="font-family:Verdana;font-size:small;"><em>View Naming Convention</em></span></strong></p>
<p><span style="font-family:Verdana;font-size:small;">Helper: /app/helpers/orders_helper.rb<br>Helper Module: OrdersHelper<br>Views: /app/views/orders/… (list.html.erb for example)</span></p>
<p><strong><span style="font-family:Verdana;font-size:small;"><em>Tests Naming Convention</em></span></strong></p>
<p><span style="font-family:Verdana;font-size:small;">Unit: /test/unit/order_test.rb<br>Functional: /test/functional/orders_controller_test.rb<br>Fixtures: /test/fixtures/orders.yml</span></p>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>If You Want a Job, Wake Up and Smell the Coffee</title>
  <link>http://bob-roberts.net/2014/07/28/if-you-want-a-job-wake-up-and-smell-the-coffee/</link>
  <pubDate>Tue, 29 Jul 2014 02:41:29 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/28/if-you-want-a-job-wake-up-and-smell-the-coffee/</guid>
  <description/>
  <content:encoded><![CDATA[As a Rails Developer and one that hires developers, I can attest to "the unemployment rates range from less than 1% to just over 3%"]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1197</wp:post_id>
  <wp:post_date>2014-07-28 19:41:29</wp:post_date>
  <wp:post_date_gmt>2014-07-29 02:41:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>if-you-want-a-job-wake-up-and-smell-the-coffee</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[621]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[34610005]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:47:"If You Want a Job, Wake Up and Smell the Coffee";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-07-25 13:43:10";s:9:"permalink";s:96:"http://joblinkofmaryland.wordpress.com/2014/07/24/if-you-want-a-job-wake-up-and-smell-the-coffee";s:7:"content";s:12542:"<div class="reblogged-content">

<a href="http://bobspython.files.wordpress.com/2014/07/java.jpg"><img class="size-full wp-image-622 aligncenter" src="http://bobspython.files.wordpress.com/2014/07/java.jpg" alt="java" width="191" height="264" data-originalSrc="http://joblinkofmaryland.files.wordpress.com/2014/07/java.jpg" data-rehosted="1"></a>

I must confess.Â  Although I like gadgets, I am not a techie per se.Â  Many of us enjoy technology and believe that we are well versed in it.Â  But, I would call that the End-User Syndrome.Â  That is, we enjoy the benefits of our smart phones and mobile devices.Â  We love to be able to do all sorts of things online, including looking up answers quickly, making purchases, and paying bills (OK, thatâs not so much fun).Â  However, few of us would ever be interested in assembling hardware or even writing the code which drives the Internet or the apps we use.

Today, I had an opportunity to meet with recruiters Alexa and Lee at a technology recruiting company in my area.Â  Following an explanation of what I do, I asked them about their staffing needs.Â  I also asked them what areas were hard-to-find and therefore represent <strong>opportunities</strong> for current and future job seekers in our community.Â  They replied, practically in stereo, â<strong>Javaâ!</strong>Â  And they did not mean the kind from Starbucks or Dunkin Donuts.Â  I then asked them to list other areas of IT and we came up with the list which appears below.

Caveat:Â  I mentioned that I am not a techie, right?Â  So, I cannot say that I am conversant with these languages or platforms.Â  I canât say that I fully understand the descriptions which I gathered from my research.Â  But, what I can say is that based on this recent meeting and the information I have gleaned from other IT professionals, these represent current, imminent, and future skill areas which are in demand.Â  The Baltimore-Washington corridor is full of government employers, contractors, and commercial technology companies who are starving for these skill sets.Â  There are many quality jobs out there which are ripe for the taking, if people would have these skills.Â  Within Information Technology (âITâ) the unemployment rates range from less than 1% to just over 3%, which is<strong> half</strong> of the national rates.Â  See <a href="http://media.dice.com/wp-content/uploads/2014/04/2014-Q1-Tech-Trends-Link.pdf">this graphic</a>.

It would therefore be important for parents of young people to pay attention to what is out there by way of available jobs and those skills which will be needed for kids to achieve gainful employment.Â  Peruse job descriptions and titles.Â  Look at the experiential and education requirements.Â  Young people should be encouraged to learn these areas early and often, in school and at home.

So in that spirit, I am presenting some areas which came up during my meeting, starting with the coffee (which they did offer me, by the way), or more importantly Java.

<strong>Java</strong> (not to be confused with Java Script) is a programming language that is concurrent, class-based, object-oriented, and specifically designed to have as few implementation dependencies as possible. It is intended to let application developers "write once, run anywhere" (WORA), meaning that code that runs on one platform does not need to be recompiled to run on another. Java applications are typically compiled to bytecode (class file) that can run on any Java virtual machine (JVM) regardless of computer architecture. Java is, as of 2014, one of the most popular programming languages in use, particularly for client-server web applications, with a reported 9 million developers. The language derives much of its origins from C and C++, but it has fewer low-level facilities than either of them.

<strong>Ruby on Rails</strong> (or â<strong>Rails</strong>â) is an open source full-stack web application framework written in the Ruby Programming Language. Rails is capable of gathering information using pages and applications from the web server and can interact with a database and can retrieve information from the database. Rails works as routing system that works independently from the underlying web server. Rails is designed to make building web applications simpler by utilizing convention over configuration. In doing so Rails greatly simplifies the creation of certain applications while complicating the creation of others.

<strong>Python </strong>is a widely used general-purpose, high-level programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C. The language provides constructs intended to enable clear programs on both a small and large scale.

<strong>Extensible Markup Language</strong> (or â<strong>XML</strong>â) is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. It is defined in the XML 1.0 Specification produced by the W3C, and several other related specifications, all free open standards.

<strong>Cloud</strong> computing is the delivery of computing as a service rather than a product, whereby shared resources, software, and information are provided to computers and other devices as a utility (like the electricity grid) over a network (typically the Internet). Clouds can be classified as public, private or hybrid.Â  The term "moving to cloud" also refers to an organization moving away from a traditional CAPEX model (buy the dedicated hardware and depreciate it over a period of time) to the OPEX model (use a shared cloud infrastructure and pay as one uses it).

<strong>MapReduce</strong> is a programming model and an associated implementation for processing and generating large data sets with a parallel, distributed algorithm on a cluster.Â  A MapReduce program is composed of a Map procedure that performs filtering and sorting (such as sorting students by first name into queues, one queue for each name) and a Reduce procedure that performs a summary operation (such as counting the number of students in each queue, yielding name frequencies). The "MapReduce System" (also called "infrastructure" or "framework") orchestrates the processing by marshalling the distributed servers, running the various tasks in parallel, managing all communications and data transfers between the various parts of the system, and providing for redundancy and fault tolerance.

<strong>Apache HTTP Server</strong> (or â<strong>Apache</strong>â) is a web server application notable for playing a key role in the initial growth of the World Wide Web.[3] Originally based on the NCSA HTTPd server, development of Apache began in early 1995 after work on the NCSA code stalled. Apache quickly overtook NCSA HTTPd as the dominant HTTP server, and has remained the most popular HTTP server in use since April 1996. In 2009, it became the first web server software to serve more than 100 million websites.

<strong>Apache Hadoop</strong> is an open-source software framework for storage and large-scale processing of data-sets on clusters of commodity hardware. Hadoop is an Apache top-level project being built and used by a global community of contributors and users.Â  It is licensed under the Apache License 2.0.

<strong>Pig Script</strong> (or â<strong>Pig</strong>â) is a high-level platform for creating MapReduce programs used with Hadoop. The language for this platform is called Pig Latin. Pig Latin abstracts the programming from the Java MapReduce idiom into a notation which makes MapReduce programming high level, similar to that of SQL for RDBMS systems. Pig Latin can be extended using UDF (User Defined Functions) which the user can write in Java, Python, JavaScript, Ruby or Groovy and then call directly from the language.

 

The $64,000 question is from where and how skills in these areas are to be obtained?Â  Well, a first step is to get our youth interested in IT fields such as <strong>programming</strong> (or â<strong>coding</strong>â).Â  Here are some helpful resources for parents.Â  For parents of younger children, see <a href="http://lifehacker.com/how-and-why-to-teach-your-kids-to-code-510588878">here</a>.Â  For older children, there are a bunch of often <strong>free </strong>online tutorials which can be accessed <a href="http://www.codecademy.com/">here</a>, <a href="http://www.codeschool.com/">here</a>, and <a href="http://www.khanacademy.org/">here</a>.Â  For information on the up-and-coming specialization of <strong>robotics</strong>, please see <a href="http://mindstorms.lego.com/">here</a>.

Another step is to encourage local educational entities to get on board in terms of added focus and classes.Â  Our middle and high schools, colleges, and experiential training environments need to be encouraged to offer classes these areas.Â  These classes will serve to expose students to as well as hopefully cultivate interest in IT (I have previously expressed the same for all of STEM fields.)Â  Given the current and emerging opportunities in the Baltimore-Washington area, this would serve to align our youth with a path towards gainful employment.

Another step is to seek out training opportunities.Â  These might come in the form of experiential scenarios like internships and entry-level jobs in IT.Â  Since much of what goes on in IT is gained on the job, exposure to current and emerging technologies might be more important than what could be taught in a classroom.Â  This does not obviate the need to consider degree programs or industry recognized certifications in various technologies.Â  For some jobs, an IT degree is required and will often be critical to career growth to management or higher-level positions.

One comment which I frequently get from parents and young people is âif the technology is constantly changing, what I learn or train on today will be obsolete by the time I will be looking for a jobâ.Â  While that might sound logically true, it is in fact erroneous.Â  What a person learns today will provide the foundation of the fundamentals for how things work within IT.Â  Therefore, exposure and experience today will lay the groundwork for the future.

In closing, I will add a few points:
<ul>
<li>Qualified IT professionals are in very high demand, and will be, for the foreseeable future. There are many vacancies and recruiters struggle to find suitable people to fill them.Â  However, not all credentials are the same.Â  Degrees from accredited, recognized, and respected institutions will always garner significantly more interest from employers than certifications from dubious ones.</li>
	<li>IT degrees are a great investment. To earn such a credential requires much less investment of time than the training required in obtaining comparable levels of employment and compensation.Â  A solid Bachelorâs degree in IT will usually result in positive job prospects upon graduation.</li>
	<li>The Baltimore-DC area has many government bureaus, security agencies, and contractors. Because many such employers require U.S. Citizenship as a requirement, people born in the U.S. are often at an advantage, if they are qualified technically.Â  Furthermore, those born in this country may have an easier time being issued a Security Clearance, which is also required for many well-paying IT positions.Â  So, the combination of technical training, skills and being from this area will make for a very compelling resume.</li>
	<li>The incredible popularity of portable computing made possible by smart phones and mobile devices will only increase as new devices and technologies are introduced. Consequently the skills listed above will be even more marketable.</li>
</ul>
The world is rapidly changing and so is IT, perhaps even more so.Â  In a very different context during my years in summer camp, we were told that âlearning never endsâ¦clean-up begins right nowâ.Â  For IT as well, this is so true.Â  The proper perspective is to not only gain skills at the entry-level but maintain currency.Â  This requires a mindset of continuous learning and adaptability to whatever comes down the pike.

 

[Blogger's note: I wish to thank Alexa, Lee, and Sam for their helpful technical inputÂ in preparing this, as well as Wikipedia for translating many of the technical terms into plainer English.]</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/Owa1RCdl7l]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5899715128001060864&type=U&a=LFKo]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>A framework is also  a collection of Best Practices</title>
  <link>http://bob-roberts.net/2014/07/30/a-framework-is-also-a-collection-of-best-practices/</link>
  <pubDate>Thu, 31 Jul 2014 04:01:23 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/07/30/a-framework-is-also-a-collection-of-best-practices/</guid>
  <description/>
  <content:encoded><![CDATA[Nice view from the "other side"]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1199</wp:post_id>
  <wp:post_date>2014-07-30 21:01:23</wp:post_date>
  <wp:post_date_gmt>2014-07-31 04:01:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>a-framework-is-also-a-collection-of-best-practices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[92]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[62661464]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:51:"A framework is also  a collection of Best Practices";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-07-29 18:32:06";s:9:"permalink";s:89:"http://rails7.wordpress.com/2014/07/29/a-framework-is-also-a-collection-of-best-practices";s:7:"content";s:1239:"<div class="reblogged-content">

<img class="aligncenter" src="http://www.giddiperry.com/images/oiling_can.2.jpg" alt="" width="511" height="480">

Yestarday there was issue in office. Though I had checked in my code, I had forgotten to back up database and push it to the main branch. Well...

Now you know the value of migrations. I am in PHP project. I don't really remember why we choose PHP instead of Rails. I think we thought we won't find enough Rails people in Chennai.The result, some best practices used by frameworks are lost and mistakes like this occur.

The more and more I am using PHP, the more and more I appreciate Ruby on Rails. The Rails people have thought it well over, possibly they have faced too many difficulties while doing a project.

Of course there are many things I love about Rails like migrations and blah blah. Hmmmm lets see, now I am missing it very much.

Rails has now become Rolls Royce of web development. There is solution, fast and easy way for every thing. If there isn't one, you write a gem, release it and get fame for you and your organization.

A framework is not just a collection of code, but its a collection of best practices too. And Rails is doing really good at it.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/uAl0w8pJK3]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5900459985829117952&type=U&a=sXGF]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>security in rails</title>
  <link>http://bob-roberts.net/2014/08/04/security-in-rails/</link>
  <pubDate>Tue, 05 Aug 2014 03:35:34 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/08/04/security-in-rails/</guid>
  <description/>
  <content:encoded><![CDATA[Great info here for securing Rails site.  Did not know of sanitize but I am going to use it.  Thanks :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1200</wp:post_id>
  <wp:post_date>2014-08-04 20:35:34</wp:post_date>
  <wp:post_date_gmt>2014-08-05 03:35:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>security-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[2157]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[40528223]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:17:"security in rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-08-04 12:43:06";s:9:"permalink";s:66:"http://codedecoder.wordpress.com/2014/08/04/security-in-ruby-rails";s:7:"content";s:20666:"<div class="reblogged-content">

Any thing on the net is vulnerable to attack. The threat can be at any layer: <strong>database</strong>,Â  <strong>web server</strong> or <strong>web application</strong>. Some of the common security threat are : <span style="color:#ff0000;"><strong>Cross Site Scripting (XSS)</strong></span>, <span style="color:#ff0000;"><strong>Cross Site Request Forgery (CSRF, XSRF)</strong></span>, <strong><span style="color:#ff0000;">Man in the Middle (MITM)</span></strong>,Â  <strong>SQL Injection (SQLI)</strong>,Â  <strong><span style="color:#ff0000;">Mass Assignment &amp; Parameter Injection</span></strong> etc . There is nothing like complete protection. There is a proverb in hindi "<strong><span style="color:#ff0000;">taala sarifon k liae hota hai...choron k liae nahi</span></strong>" , means "<span style="color:#ff0000;"><strong>Lock on the door can prevent good peoples from entering the house not the thieves</strong></span>". But at least the lock can make the thieve to struggle for entry and provide <span style="color:#003300;"><strong>60% security</strong></span> to our house.

Rails framework, provide <strong><span style="color:#003300;">70% inbuilt security</span></strong> if you use all its feature properly and adhere to its <a title="security in rails" href="http://guides.rubyonrails.org/security.html" target="_blank">security guideline</a> . Web Security is a wide field in itself. I will keep updating this blog as I keep exploring, new <strong><span style="color:#003300;">security measure</span></strong> . Meanwhile If you want to explore it yourself, you can read the below resource :

<span style="color:#003300;"><strong>=&gt;</strong></span> <a title="rails guide on security" href="http://guides.rubyonrails.org/security.html" target="_blank">Ruby on Rails Security Guide</a>
<strong><span style="color:#003300;">=&gt;</span></strong> <a title="ruby official security page" href="https://www.ruby-lang.org/en/security/" target="_blank">Ruby official Security page</a>
<strong><span style="color:#003300;">=&gt;</span></strong> <a title="rails security google group" href="https://groups.google.com/forum/#!forum/rubyonrails-security" target="_blank">Rubyon Rails Security mailer list</a>

<strong><span style="color:#003300;">Defence 1 : Protection against Mass Assignment attack.</span></strong>

Many a time, you have used <span style="color:#003366;">@user = params[:user]</span> in your code . This is a case of <strong>mass assignment</strong> i,e any thing coming in<span style="color:#003366;"> params[:user]</span> will be assigned to object <span style="color:#003366;">@user</span> and when you save the object all of them get saved into database. Now here a attacker come, will modify the form in firefox console and add another input field for user with <span style="color:#003366;">:admin =&gt; true</span> , now when you do <span style="color:#003366;">@user = params[:user]</span> and save the object , he will get admin privilege and can do any thing now onward.

<span style="color:#ff0000;"><strong>So simple to break in ..right ??</strong></span>

Not so easy with rails 3 and upper version. Now attributes are prevented from mass assignment by default. So you have to explicitly define the list of attributes which are eligible for mass assignment with <span style="color:#003366;"><strong><code>attr_protected</code></strong></span>, or <strong><span style="color:#003366;"><code>attr_accessible</code></span></strong> .

<strong><span style="color:#003366;"><code>attr_accessible</code> :name, :age</span></strong> # it is white listing of attributes for mass assignment

It means only name and age can be mass assigned, if <span style="color:#003366;">params[:user]</span> cantain any attributes say <span style="color:#003366;">:admin =&gt; true</span> , it will throw error.

<strong><span style="color:#003366;"><code>attr_protected</code> :admin</span></strong> # it is blacklisting of attributes for mass assignment

It means any attribute other then :admin can be mass assigned.

I suggest you to use <span style="color:#003366;"><strong><code>attr_accessible</code></strong></span> approach. I feel it is more safe. say you add a new attribute<span style="color:#003366;"> salary</span> in the user table but forgot to modify your model, it will automatically become eligible for mass assignment with <span style="color:#003366;"><strong><code>attr_protected</code></strong></span> approach, but with <strong><span style="color:#003366;"><code>attr_accessible</code></span></strong> approach it will throw error. Now if you feel salary safe to be mass assigned, you can add it to <span style="color:#003366;"><strong><code>attr_accessible</code></strong></span> list.

 

<span style="color:#003300;"><strong>Defence 2 : protection against cross site scripting (XSS) .</strong></span>

Oh..! You havenât heard about <span style="color:#ff0000;"><strong>cross site scripting (XSS)</strong></span> ...Read it <a title="cross site scripting" href="http://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank">here</a> . In short, It is execution of script by attacker on your page which may stole cookies session or any other information or break your application.

Let us see a simple example :

let you have a application in which <strong>person1</strong> , input a message for <strong>person2</strong>, which get stored in db,when <strong>person2</strong> open his account the message displayed on his page with the code <span style="color:#003366;">&lt;%= @message %&gt;</span> . But <strong>person1</strong> is a bad Guy(remember, mom use to remind us - world is full of bad people) . He entered the message <span style="color:#003366;">"&lt;script&gt;alert('Iam virus, Iam in..I will break your code')&lt;/script&gt;"</span> .

When <strong>person2</strong> open his page, what he will see. He will see the message<span style="color:#003366;"> "&lt;script&gt;alert('Iam virus, Iam in..I will break your code')&lt;/script&gt;"</span> . <strong>No harm occur. Person1 must be cursing Rails</strong>.<span style="color:#333300;"><strong> With Rails3 any HTML character in input will automatically escaped</strong></span>, in older version you have to use h() explicitly i,e the input code is <span style="color:#003366;">&lt;%=h text_field_tag "message" %&gt;</span> . More detail on escaping HTML is available <a title="escaping html in rails" href="http://stackoverflow.com/questions/698700/escaping-html-in-rails" target="_blank">here</a> . So the ill conceived message of <strong>person1</strong> get passed to db in harmless form as <span style="color:#003366;">"&amp;lt;script&amp;gt;alert('Iam virus, Iam in..I will break your code')&amp;lt;/script&amp;gt;"</span> .

Now say, <strong>person1</strong> is big crook and able to insert the message<span style="color:#003366;"> "&lt;script&gt;alert('Iam virus, Iam in..I will break your code')&lt;/script&gt;"</span> in db. But <strong>person2</strong> is again not harmed, as not only input but <span style="color:#333300;"><strong>Rails escape any HTML in the ruby code</strong></span>. But what if you do not want to escape the html tag in the message. You want the message to be displayed as such, because <strong>Person3</strong> is a nice person and he send a well decorated message <span style="color:#003366;">"Arun &lt;strong&gt;I Love You&lt;/strong&gt;"</span> , in which <strong>I love you</strong> is highlighted . You want it to display as <span style="color:#003366;">"Arun<strong> I Love You</strong>"</span>, rather than <span style="color:#003366;">"Arun &lt;strong&gt;I Love You&lt;/strong&gt;"</span> . So you need to override the Rails default escaping behaviour. below will do that

<strong><span style="color:#003366;">&lt;%=rawÂ  @message %&gt;</span></strong>

great, person3 message look great, but what is this <strong>person1</strong> ill conceived message also get executed, you see the alert box below

[caption id="attachment_2209" align="aligncenter" width="611"]<a href="http://bobspython.files.wordpress.com/2014/08/virus.png"><img class="size-full wp-image-2209" src="http://bobspython.files.wordpress.com/2014/08/virus.png" alt="xss example" width="611" height="166" data-originalSrc="http://codedecoder.files.wordpress.com/2014/08/virus.png" data-rehosted="1"></a> xss example[/caption]

So, person2 has succeeded in attacking your application .<span style="color:#ff0000;"><strong> using raw for rendering is risky...will you use that???</strong></span>...I don't think so . If you still want bolded <strong>I Love You</strong>, try other alternative than raw : <a title="sanitize" href="http://apidock.com/rails/ActionView/Helpers/SanitizeHelper/sanitize" target="_blank">sanitize</a> .

 

<strong><span style="color:#003300;">Â Defence 3 : Protection against CROSS SITE REQUEST FORGERY(CSRF) .</span></strong>

A good example of <span style="color:#ff0000;"><strong>CSRF</strong></span> is available <a title="CSRF" href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29" target="_blank">here</a> . The detail documentation of preventing CSRF attack is available <a title="CSRF protection guide" href="https://www.owasp.org/index.php/Cross-Site_Request_Forgery_%28CSRF%29_Prevention_Cheat_Sheet" target="_blank">here</a> . So it is more like attack through chat messages, email, images etc. This attack is mostly executed on Authenticated i,e logedIn users. Basically, the cross site scripting attack happen due to your trust on the website, which is not fulfilled while the Cross Site request forgery attack occur due to website trust on you. Website trust you with using it properly, identifying its purpose, content, flow etc. It do not expect you to click on the link like "HOT babes", "Free tour package", "your own FB profile link with friend request from a sweet girl" etc. If they are not part of the website on your earlier website, there is great chance that some one attempting CSRF attack.But we are INNOCENT people, we are oblivion of any such attack. Rails come to your rescue.

If you are using rails version 3 or above, you can see below within head tag of layout generated by default.

<strong><span style="color:#003366;">&lt;%= csrf_meta_tags %&gt;</span></strong>

This line will create a secret token for each user session. If you see the page source, you can see the below line generated by the above code.

<span style="color:#003366;">&lt;meta content="sptmtpH+EZYnhrfwPplCQkATltqeHwaBAOJAgyj8CII=" name="csrf-token" /&gt;</span>

The above token value is stored in a hidden filed within each form. It look as below in one of my form for the current session.

<span style="color:#003366;">&lt;input type="hidden" value="sptmtpH+EZYnhrfwPplCQkATltqeHwaBAOJAgyj8CII=" name="authenticity_token"&gt;</span>

When, my session expire and I log in again, this token will change. attacker can never know this secret as it is generated on fly.<strong>So attacker can disguise you to submit a form which look like a form of your web application, but he can't bypass the authenticity token and rail will throw an error</strong>, saving us from the attack.

You can bypass the above default security measure of rails with below line of code, if you find any reason to do so.
<pre class="highlight ruby"><strong><span class="s2" style="color:#003366;">Â skip_before_filter :verify_authenticity_token</span></strong></pre>
But it is like "<span style="color:#ff0000;">Going to war without a shield</span>" .will you do that...??.. NO...I know you are mature enough.

Also, <span style="color:#003300;"><strong>always submit form with post method</strong></span>. Get method is too easy to attack. Post is also not fool proof, but is harder to attack.

<span style="color:#003366;">match "/launch_all_the_missiles" =&gt; "missiles#launch_all", :method =&gt; :get</span>

look crazy...look like any one can destroy the world. post provide better protection against attack. If you want such route in your application write it as post method

<span style="color:#003366;">match "/launch_all_the_missiles" =&gt; "missiles#launch_all", :method =&gt; :post</span>

 

<span style="color:#003300;"><strong>Defence 4 : protection against Packet Sniffing (MITM).</strong></span>

<strong><span style="color:#ff0000;">Packet Sniffing</span></strong> is also known as <span style="color:#ff0000;"><strong>Man IN The Middle</strong></span> attack. It is same as, you written all your secret in a letter , posted it to your lover, but postman read it before delivering. There are many software like <a title="fireship" href="http://en.wikipedia.org/wiki/Firesheep" target="_blank">FireShip</a> , whichÂ  can track the bits crossing the wire, and if the data is in plain text..your game is over. Isn't good to write the letter in encrypted word before posting, the postman would not have know the secret even if he manage to open the letter. Rails do that encryption for you if you set below configuration in your environment file.
<div class="line number1 index0 alt2"><span style="color:#003366;"><strong><code class="ruby plain">config.force_ssl = </code><code class="ruby keyword">true</code></strong></span></div>
<div class="line number1 index0 alt2"></div>
<div class="line number1 index0 alt2">
<strong>It will Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies. Now data will be send in encrypted form</strong>.</div>
 

 

<span style="color:#003300;"><strong>Defence 5: protection against SQL injection</strong></span>
This is one of the most common and abused attack on any web application, and involve hijacking sql command. let us take a example of a banking application, which allow a loged in user to see all the loan he has applied for. When a user click on any of the listed loan, your application show the details of that loan. Let the user is genuine one, who do not alter the params. let <span style="color:#003366;">params[loan_id] = "23239"</span>

Being a Rails developer, you may use where clause of Active::Record to retrieve the detail. But, you can construct a where clause in three ways as below.

<strong><span style="color:#800000;">1.9.3-p194 :021 &gt; @loan = Loan.where("loan_id = ? " ,params[:loan_id])</span></strong>
<span style="color:#ff6600;"><strong>Loan Load (0.1ms)Â  SELECT `loans`.* FROM `loans` WHERE (loan_id = '23239' )</strong></span>
<span style="color:#ff6600;"> =&gt; [#&lt;Loan id: 376, user_id: 41, loan_number: "100150", status: "Declined", app_name: "Pisa Productions", app_date: "2014-11-24 08:00:00", relationship_manager: "", primary_borrower: nil, owner: nil, guarantor_1: nil, guarantor_2: nil, product: nil, loan_amt: 100000, business_type: nil, finance_rate: nil, payment_amt: nil, years_in_business: nil, terms: nil, created_at: "2014-01-02 11:06:08", updated_at: "2014-01-02 11:06:08", sales_force_application_id: "006d000000Gj5n5AAB", loan_id: "23239", dealership_name: "Pisa Productions"&gt;]</span>

<span style="color:#800000;"><strong>1.9.3-p194 :020 &gt; @loan = Loan.where("loan_id = ? " ,params[:loan_id])</strong></span>
<span style="color:#ff6600;"><strong>Loan Load (0.4ms)Â  SELECT `loans`.* FROM `loans` WHERE (loan_id = '23239' )</strong></span>
<span style="color:#ff6600;"> =&gt; [#&lt;Loan id: 376, user_id: 41, loan_number: "100150", status: "Declined", app_name: "Pisa Productions", app_date: "2014-11-24 08:00:00", relationship_manager: "", primary_borrower: nil, owner: nil, guarantor_1: nil, guarantor_2: nil, product: nil, loan_amt: 100000, business_type: nil, finance_rate: nil, payment_amt: nil, years_in_business: nil, terms: nil, created_at: "2014-01-02 11:06:08", updated_at: "2014-01-02 11:06:08", sales_force_application_id: "006d000000Gj5n5AAB", loan_id: "23239", dealership_name: "Pisa Productions"&gt;]</span>

<span style="color:#800000;"><strong>1.9.3-p194 :022 &gt; @loan = Loan.where("loan_id = '#{params[:loan_id]}' ")</strong></span>
<span style="color:#ff6600;"><strong>Loan Load (0.2ms)Â  SELECT `loans`.* FROM `loans` WHERE (loan_id = '23239' )</strong></span>
<span style="color:#ff6600;"> =&gt; [#&lt;Loan id: 376, user_id: 41, loan_number: "100150", status: "Declined", app_name: "Pisa Productions", app_date: "2014-11-24 08:00:00", relationship_manager: "", primary_borrower: nil, owner: nil, guarantor_1: nil, guarantor_2: nil, product: nil, loan_amt: 100000, business_type: nil, finance_rate: nil, payment_amt: nil, years_in_business: nil, terms: nil, created_at: "2014-01-02 11:06:08", updated_at: "2014-01-02 11:06:08", sales_force_application_id: "006d000000Gj5n5AAB", loan_id: "23239", dealership_name: "Pisa Productions"&gt;]</span>

So, the sql query generated by Active::Record for the different syntax of where clause is same. <strong>But under the hood, the third form of where clause is vulnerable to sql attack but not the first two</strong>. Now say the bad guy enter, and he want to know the loan detail of any other person. He will just change the params[:loan id] to make a sql attack. This will do the trick for him.

<span style="color:#003366;"><strong>params[:loan_id] = "' OR 1=1--'"</strong></span>

<strong>The above is a sql injection code, you can easily see that, it will always return true as even if all other condition return false 1=1 will definitely going to return true true making the OR to return true at the end.</strong>

Again run the above in console. You will get below result.

<span style="color:#800000;"><strong>1.9.3-p194 :024 &gt; @loan = Loan.where(:loan_id =&gt; params[:loan_id])</strong></span>
<span style="color:#ff6600;"><strong>Loan Load (0.3ms)Â  SELECT `loans`.* FROM `loans` WHERE `loans`.`loan_id` = '' OR 1=1--''</strong></span>
<span style="color:#ff6600;"> =&gt; []</span>
<span style="color:#800000;"><strong>1.9.3-p194 :025 &gt; @loan = Loan.where("loan_id = ? " ,params[:loan_id])</strong></span>
<span style="color:#ff6600;"><strong>Loan Load (0.4ms)Â  SELECT `loans`.* FROM `loans` WHERE (loan_id = '' OR 1=1--'' )</strong></span>
<span style="color:#ff6600;"> =&gt; []</span>
<span style="color:#800000;"><strong>1.9.3-p194 :026 &gt; @loan = Loan.where("loan_id = '#{params[:loan_id]}' ")</strong></span>
<span style="color:#ff6600;"><strong>Loan Load (0.3ms)Â  SELECT `loans`.* FROM `loans` WHERE (loan_id = '' OR 1=1--'' )</strong></span>
<span style="color:#ff6600;"> =&gt;Â  =&gt; [#&lt;Loan id: 376, user_id: 41, loan_number: "100150", status: "Declined", app_name: "Pisa Productions", app_date: "2014-11-24 08:00:00", relationship_manager: "", primary_borrower: nil, owner: nil, guarantor_1: nil, guarantor_2: nil, product: nil, loan_amt: 100000, business_type: nil, finance_rate: nil, payment_amt: nil, years_in_business: nil, terms: nil, created_at: "2014-01-02 11:06:08", updated_at: "2014-01-02 11:06:08", sales_force_application_id: "006d000000Gj5n5AAB", loan_id: "23239", dealership_name: "Pisa Productions"&gt;,</span>
<span style="color:#ff6600;"> ..all othe records]</span>

So you can see that, the first two syntax escape the special character while generating the sql query, thus preventing from sql injection but the last one do not.

Always, be careful while writing your where clause.

Take another example, this is serious one, with your negligence any one can bypass your authentication system. You are stubborn to my advice and goes with your old way of writing the where clause.

<span style="color:#003366;"><strong>User.where("email = '#{params[:email]}' AND encrypted_password = '#{params[:password]}'")</strong></span>

On your login page the user just need to enter<span style="color:#ff0000;"><strong> ' OR 1=1--'</strong></span> in both email and password field, and he will be loged in.

But Rails also not provide full protection against SQL injection, may be they get corrected in upcoming version, but currently, like where, if you not use properly all the following methods are vulnerable to sql injection( <a title="rails sql injection" href="http://rails-sqli.org/" target="_blank">READ THE DETAIL HERE</a>) : <strong>average ,calculate ,count , maximum ,minimum , sum, delete_all, exists?, find, find_by,join, pluck</strong> etc

 

 

REFERENCE :

<a title="rails sql injection" href="http://rails-sqli.org/" target="_blank">http://rails-sqli.org/</a>

<a title="security in rails" href="http://guides.rubyonrails.org/security.html" target="_blank">http://guides.rubyonrails.org/security.html</a>

 

 
<div class="container"></div>
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Amazon SES + Ruby on Rails</title>
  <link>http://bob-roberts.net/2014/08/09/amazon-ses-ruby-on-rails/</link>
  <pubDate>Sat, 09 Aug 2014 22:48:44 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/08/09/amazon-ses-ruby-on-rails/</guid>
  <description/>
  <content:encoded><![CDATA[I really could have used this info a couple of months back when I starting working with the Amazon SES for the first time.  Thanks for the post ;)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1203</wp:post_id>
  <wp:post_date>2014-08-09 15:48:44</wp:post_date>
  <wp:post_date_gmt>2014-08-09 22:48:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>amazon-ses-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[34]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[64110896]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:26:"Amazon SES + Ruby on Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-08-05 08:56:08";s:9:"permalink";s:64:"http://akhilkr.wordpress.com/2014/08/05/amazon-ses-ruby-on-rails";s:7:"content";s:3240:"<div class="reblogged-content">

If you are then one who sends thousands of emails in a day like newsletters, ads etc Amazon provides Simple Email Service. Its not free still cost is cheap and manageable.

Here is how to setup SES and integrate with your Rails application. Here I am assuming that you have some email address from gmail or any other providers.
<ol>
<li>Sign up for Amazon (Â <a href="http://aws.amazon.com/">http://aws.amazon.com</a>.)</li>
	<li>Configure Amazon SES.</li>
	<li>Initialize TLS for SMTP in your Rails app.</li>
	<li>Configure your mailer.</li>
	<li>Send email.</li>
</ol>
<strong>Step 1 Sign Up Now:</strong>

<strong>Step 2: Configure Amazon SES.</strong>
<ul>
<li>Open Amazon Web Services Management Console and select <strong>SES</strong>
</li>
	<li>From left panel click on <strong>Create SMTP Credential.Â </strong>It will take you to another page. Follow instructions given there and create a credential and save it for future.</li>
	<li>After creating credentials go toÂ <strong>Email Addresses &gt; Verify NewÂ EmailÂ Address &gt; Enter your email &gt; Verify Email Address.Â </strong>Â If you are using amazon all sender email addresses should be verified this could be in order to avoid SPAM.</li>
	<li>Check your mailbox and click on verify link.</li>
</ul>
<strong>Step 3: Initialize TLS for SMTP in your Rails app.</strong>

To enable TLS for your mailer, simply drop this into config/initializers/tls.rb.
<pre>require 'net/smtp'

module Net
  class SMTP
    def tls?
      true
    end
  end
end

</pre>
<strong>Step 4: Configure your mailer.</strong>

To configure your mailer, add this to each development and production environment which you want to provision SMTP access to Amazon SES.
<pre>config.action_mailer.delivery_method = :smtp
  config.action_mailer.smtp_settings = {
    :address =&gt; 'email-smtp.us-east-1.amazonaws.com',
    :authentication =&gt; :login,
    :user_name =&gt; '&lt;previously configured smtp username&gt;',
    :password =&gt; '&lt;previously configured smtp password&gt;',
    :enable_starttls_auto =&gt; true,
    :port =&gt; 465
  }

Note that your address may differ according to your region.

</pre>
Now create Â an action mailer. make sure that you will use same verified email address as from address.

ActionMailer: mailers/awesome_ses_mailer.rb
<pre>class SesMailer &lt; ActionMailer::Base
  default from: 'my@email.com'
  def hello_world
    mail(to: 'somebody@email.com', subject: 'I emailed from AmazonSES!')
  end
end

Create a email view 
View: views/ses_mailer/hello_world.text.erb and put following content in it.</pre>
<pre>This sample email was sent from Amazon SES.

</pre>
<strong>Step 5: Send email.</strong>

Make the mailer call:
<pre>SesMailer.hello_world.deliver</pre>

Thats it you sent a mail using Amazon SES

In development access amazon provides only 25 emails per 24hr. This limit can be extendable.  If you want production access you should leave a request to amazon. Which can be done from <strong>Dashboard &gt; Request Production Access. </strong>This gives you 10000 emails per 24hr. 

Later you can request for limit increase and get more emails.
 </div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/QPP5jENOfp]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5904005189928497152&type=U&a=yh_D]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The Well-Grounded Rubyist, 2nd Edition - A solid, well-written, updated guide to the Ruby programming language - #bookreview</title>
  <link>http://bob-roberts.net/2014/08/14/the-well-grounded-rubyist-2nd-edition-a-solid-well-written-updated-guide-to-the-ruby-programming-language-bookreview/</link>
  <pubDate>Thu, 14 Aug 2014 23:46:36 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/08/14/the-well-grounded-rubyist-2nd-edition-a-solid-well-written-updated-guide-to-the-ruby-programming-language-bookreview/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1205</wp:post_id>
  <wp:post_date>2014-08-14 16:46:36</wp:post_date>
  <wp:post_date_gmt>2014-08-14 23:46:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-well-grounded-rubyist-2nd-edition-a-solid-well-written-updated-guide-to-the-ruby-programming-language-bookreview</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:124:"The Well-Grounded Rubyist, 2nd Edition - A solid, well-written, updated guide to the Ruby programming language - #bookreview";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-08-11 13:06:42";s:9:"permalink";s:158:"http://sagecreek.wordpress.com/2014/08/11/the-well-grounded-rubyist-2nd-edition-a-solid-well-written-updated-guide-to-the-ruby-programming-language-bookreview";s:7:"content";s:4118:"<div class="reblogged-content">

 

<a href="http://amzn.to/1oCshVV"><img class="alignnone size-full wp-image-3709 aligncenter" src="http://bobspython.files.wordpress.com/2014/08/black3_cover150.jpg" alt="black3_cover150" width="150" height="188" data-originalSrc="http://sagecreek.files.wordpress.com/2014/08/black3_cover150.jpg" data-rehosted="1"></a>
<h1 style="text-align:center;"><span style="color:#800000;"><a href="http://amzn.to/1oCshVV"><span style="color:#800000;">The Well-Grounded Rubyist</span></a></span></h1>
<h2 style="text-align:center;">David A. Black</h2>
<h3 style="text-align:center;"><em><span style="color:#000000;"><strong>(Manning -</strong> </span><span style="text-decoration:underline;"><span style="color:#800000;"><a href="http://amzn.to/1oCshVV"><span style="color:#800000;text-decoration:underline;">paperback</span></a></span></span><span style="color:#000000;">)</span></em></h3>
<strong>Ruby, predominately</strong>Â known as an object-oriented programming language, shows up frequently on lists of the top ten (or whatever) languages to know. And Ruby has long been paired with Rails to create the popular <span style="text-decoration:underline;"><span style="color:#800000;"><a href="http://rubyonrails.org/"><span style="color:#800000;text-decoration:underline;">Ruby on Rails</span></a></span></span> web application framework.

When the forerunner of this book appeared eight years ago, it was titled <em>Ruby for Rails: Ruby Techniques for Rails Developers</em>. And R4R, as it is sometimes known, was well received in both the Ruby and Rails camps.

In 2009, the R4R book was revised and retitled <em>The Well-Grounded Rubyist</em>. "This new edition is Â a descendant of R4R but not exactly an update. Itâs more ofÂ a repurposing," the author, David A. Black, noted at the time. "<em>The Well-Grounded Rubyist</em> is a 'just Ruby' book, and itâs written to be read by anyoneÂ interested in Ruby."

<strong>That focus</strong>Â continues in this second edition, which has been updated to cover Ruby 2.1. Ruby newcomers can get startedÂ and advance quickly with this fine "just Ruby" book in hand. Ruby veterans also can use it to gain new knowledge and sharpen familiar skills.

Black approaches the process of explaining Ruby "as a kind of widening spiral, building on the familiar but always opening out into the unknown."

His well-written text does not try to be a "complete" language reference. Instead, reading <em><span style="text-decoration:underline;"><span style="color:#800000;"><a href="http://amzn.to/1oCshVV"><span style="color:#800000;text-decoration:underline;">The Well-Grounded Rubyist</span></a></span></span></em> is like having a well-experienced and patient mentor close at hand--a mentor who willingly offers up clear examples and explanations. You likely will want to keep this book around as a go-to how-to reference long after you have learned and begun to work with Ruby.

<strong>It does help</strong> to have at least a little experience with programming before you tackle Ruby and this book. And, if you already have an older version of Ruby installed on your computer, upgrade it to 2.1.x. (As this review is being written, 2.1.2 is the current version.)

Yes, Ruby can be usedÂ in several different programming paradigms, including functional and imperative. But <em><span style="text-decoration:underline;"><span style="color:#800000;"><a href="http://amzn.to/1oCshVV"><span style="color:#800000;text-decoration:underline;">The Well-Grounded Rubyist</span></a></span></span></em> is essentially all-object-oriented-all-the-time in its approach.

"Ruby is an object-oriented language, and the sooner you dive into howÂ Ruby handles objects, the better," Black states. "Accordingly, objects will serve both as a way toÂ bootstrap the discussion of the language (and your knowledge of it) and as aÂ golden thread leading us to further topics and techniques."
<h4>-- <em><span style="color:#800000;"><a href="https://www.linkedin.com/in/sidunn"><span style="color:#800000;">Si Dunn</span></a></span></em>
</h4>
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[3707]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[7175280]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/fbaKHb2Hfh]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5905832196429598720&type=U&a=xOF6]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>DRY Social Media Links</title>
  <link>http://bob-roberts.net/2014/08/20/dry-social-media-links/</link>
  <pubDate>Thu, 21 Aug 2014 03:25:30 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/08/20/dry-social-media-links/</guid>
  <description/>
  <content:encoded><![CDATA[Nice idea.  You could go one step further and have the social_media as a variable in your controller.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1208</wp:post_id>
  <wp:post_date>2014-08-20 20:25:30</wp:post_date>
  <wp:post_date_gmt>2014-08-21 03:25:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dry-social-media-links</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[150]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[56099290]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:22:"DRY Social Media Links";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-08-19 14:23:12";s:9:"permalink";s:55:"http://pareidoliax.ca/2014/08/19/dry-social-media-links";s:7:"content";s:2320:"<div class="reblogged-content">

I went a little crazy with social media links last night. I wanted to make a nice <em>nav</em> element full of them. First I found a great <a href="https://github.com/danleech/simple-icons">github repository</a> and <a href="http://simpleicons.org/">site</a> for the images called <a href="http://simpleicons.org/">simpleicons.org</a>.

With all those great icon options I ended up wanting to make nine links but I wanted to keep things <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">DRY</a> so I used an array and a loop. I was pretty pleased with the result.

<a href="https://gist.github.com/PareidoliaX/fa6c2fb9493f4fe0ab69#file-_footer-html-erb"><strong>_footer.html.erb</strong></a>
[code language="HTML"]
&lt;footer&gt;
  &lt;% social_media = [
    ["Github", "github-256.png", "https://github.com/PareidoliaX"],
    ["LinkedIn", "linkedin-256.png", "https://www.linkedin.com/pub/alexander-miller/2b/909/62b"],
    ["CodeSchool", "codeschool-256.png", "https://www.codeschool.com/users/336826"],
    ["Treehouse", "treehouse-256.png", "http://teamtreehouse.com/alexandermiller"],
    ["Khan Academy", "khanacademy-256.png", "https://www.khanacademy.org/profile/PareidoliaX/"],
    ["WordPress", "wordpress-256.png", "http://pareidoliax.ca/"],
    ["Steam", "steam-256.png", "http://steamcommunity.com/profiles/76561198025305101"],
    ["Twitter", "twitter-256.png", "https://twitter.com/PareidoliaX"],
    ["Facebook", "facebook-256.png", "https://www.facebook.com/xander.miller"]
    ] %&gt;
    &lt;div class="row"&gt;
      &lt;nav&gt;
        &lt;ul id="social-media"&gt;
          &lt;% social_media.each do |media| %&gt;
            &lt;li&gt;
              &lt;%= link_to media[2] { image_tag("https://s3-us-west-2.amazonaws.com/xander-mind/#{media[1]}", alt: "#{media[0]} Logo")} %&gt;
            &lt;/li&gt;
          &lt;% end %&gt;
        &lt;/ul&gt;
      &lt;/nav&gt;
    &lt;/div&gt;
  &lt;div class="row"&gt;
    &lt;p class="text-right"&gt;&amp;copy; 2014 &lt;em&gt;Xander Miller&lt;/em&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/footer&gt;
[/code]

This code is available in a <a href="https://gist.github.com/PareidoliaX/fa6c2fb9493f4fe0ab69#file-_footer-html-erb">github gist</a> for easy copying. Happy Coding!
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>RailsBridge Phoenix - Ruby on Rails for Women</title>
  <link>http://bob-roberts.net/2014/08/20/railsbridge-phoenix/</link>
  <pubDate>Thu, 21 Aug 2014 03:46:57 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1209</guid>
  <description/>
  <content:encoded><![CDATA[OK, everybody, it is time for us to give back to the Ruby/Rails community that has made many of us a enjoyable and profitable life....

We at Socialwhirled have decided to sponsor and host a <strong>RailsBridge</strong> event in Phoenix (<a href="http://railsbridge.org/">http://railsbridge.org/</a>) the 19th and 20th of September.

<strong>From their site:</strong>
<blockquote>We teach people to code because we believe that the people making technology should accurately reflect the diversity of those using it.

We want to push for all kinds of diversity in tech: gender, race, sexual orientation, ability, and class. Women were the first population we focused on, but aren't the last.

We value acceptance, enthusiasm, and hard work. The <strong>RailsBridge</strong> community thrives on optimism and a love for making great things.

What's a RailsBridge Workshop<strong>?</strong>

Our most well-known efforts are free weekend workshops where women learn Ruby on Rails from volunteers. The students at our workshops range from folks who are completely new to programming to QA engineers and professional developers who want to learn Rails. During the Installfest (usually on a Friday evening), we get students' laptops setup with the requisite technologies. The next day, we break into small group based on experience level and build a web app! (When we aren't teaching Ruby and Rails, we teach HTML &amp; CSS.)</blockquote>
<strong>Here is what we need:</strong>

Volunteers to assist in teaching as well as TA'ing.  I think we will need about 8 people that can teach a class using their curriculum and assistants to help attendees that are stuck.

Attendees to attend.  Spread the word to friends, strangers, social media, etc...

I will post the links as soon as I have them setup.  All social media should use the #railsbridge and #railsbridgeaz hashtags.

Most of us learned form others so lets return the favor.

Questions, comments, suggestions, want to volunteer, email me at <a href="mailto:broberts@socialwhirled.com">broberts@socialwhirled.com</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1209</wp:post_id>
  <wp:post_date>2014-08-20 20:46:57</wp:post_date>
  <wp:post_date_gmt>2014-08-21 03:46:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>railsbridge-phoenix</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/FDpX32VVsy]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=5908066496621338624&type=U&a=U-Ly]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_61c2d651712ea6a35fd683caad225474</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>From Capistrano 2.x to 3.x</title>
  <link>http://bob-roberts.net/2014/09/03/from-capistrano-2-x-to-3-x/</link>
  <pubDate>Thu, 04 Sep 2014 03:13:40 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/09/03/from-capistrano-2-x-to-3-x/</guid>
  <description/>
  <content:encoded><![CDATA[I have been putting off on upgrading Capy.  There were a lot of changes between 2 and 3.  I will have to try this out (if I get brave enough!!)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1212</wp:post_id>
  <wp:post_date>2014-09-03 20:13:40</wp:post_date>
  <wp:post_date_gmt>2014-09-04 03:13:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>from-capistrano-2-x-to-3-x</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[3]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[73510460]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:26:"From Capistrano 2.x to 3.x";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-08-29 19:15:47";s:9:"permalink";s:71:"http://silicon9east.wordpress.com/2014/08/24/from-capistrano-2-x-to-3-x";s:7:"content";s:6890:"<div class="reblogged-content">

This guide describes upgrading from capistrano version 2.x to 3.x. In our company we use capistrano to deploy rails 3 &amp; 4 applications on test- and production-server. Our servers run with apache and passenger gems apache module.

<h1>Why Upgrading To Capistrano 3.x</h1>

Well it is some work and you need to change a lot, this is true. The following reasons nevertheless convinced me to dive into this adventure:

<ul>
<li>Cap 3 has out of the box multistage support</li>
<li>As far as I know cap 2 support has ended. Last cap 2 gem update was 4. July 2013. The documentation of cap 2 <a href="https://github.com/capistrano/capistrano/wiki">(see)</a> is referred to as "legacy" documentation.</li>
<li>Cap 3 has a cleaner, more intuitive config file content structure and uses a news simpler DSL.</li>
</ul>
<h1>Let's Upgrade!</h1>

Now that I have your attention and hopefully have convinced you that upgrading to cap 3 is totally worth your time and effort, let's begin.

<h2>Capfile, Deploy File and Stages</h2>

As mentioned above cap 3 has a more intuitive config file content structure. The files itself are the same but their content changed. The Capfile is the home of all requirement statements and the deploy tasks. In the deploy file are global server config, repo config, and third party plugin config (rollbar, whenever, etc.). The stage files accommodate server config specific to that stage (e.g. server address, username, password).

<h2>From Old To New Capistrano</h2>

I followed roughly this <a href="http://capistranorb.com/documentation/upgrading/">guide</a> on official capistrano website. Essentially I did this:

<ul>
<li>Remove all traces of old cap from your Gemfile and add the following:</li>
</ul>

[code lang=ruby]
gem 'capistrano', '~&gt; 3.2.1'
gem 'rvm1-capistrano3', '~&gt; 1.2.5', require: false
gem 'capistrano-rails', '~&gt; 1.1.1'
[/code]

This adds cap 3 itself and rvm- and rails- support for capistrano. <code>capistrano-rails</code> includes predefined tasks for rails database migration and assets precompilation. Note we use <code>rvm1-capistrano3</code> gem. This is the successor of <code>rvm-capistrano</code> gem which is only compatible with cap 2. <code>rvm1-capistrano3</code> requires as it's name says rvm 1. Be sure to update rvm. Also update SSHKit gem to newest version. I had locked SSHKit to an old version and got nasty errors. As it turns out <code>rvm1-capistrano3</code> and <code>capistrano-bundler</code> gems are not compatible. Therefore here I only use <code>rvm1-capistrano3</code> gem, which has built-in bundle support. For details about what those gems exactly do, go to their github repos.

<ul>
<li>Backup old <code>Capfile</code>, deploy file and stage files.</li>
<li>Install new gems with <code>bundle install</code>.</li>
<li>Setup new capistrano with <code>cap install</code> this will also create <code>production.rb</code> and <code>staging.rb</code>.</li>
<li>Move content of old stage files to new stage files.</li>
<li>Move all content of old <code>Capfile</code> and all requirement statements and tasks of old <code>deploy.rb</code> to new <code>Capfile</code>.</li>
<li>Move remaining content of old deploy file to new deploy file. In your new deploy file should be neither a requirement statement nor a deploy task.</li>
</ul>
<h2>Refactor New Config Files</h2>

<h3>Capfile</h3>

<ul>
<li>Update requirement statements. The requirements for capistrano 3 and it's various support gems look like this:</li>
</ul>

[code lang=ruby]
require 'capistrano/setup'
require 'capistrano/deploy'
require 'rvm1/capistrano3'
require 'capistrano/rails'
[/code]

Requirements of third party gems may also be added.

<ul>
<li>Refactor deploy tasks to new DSL. As earlier mentioned cap 3 uses a new DSL. You have to refactor all your deploy tasks to new DSL or cap 3 will not work. This is a lot of work. Be aware that tasks for file or folder symlink creation can be dropped. Cap 3 has built in functionality for this, more on this later.</li>
<li>Example tasks for assets precompilation, assets cleanup and passenger server are <a href="https://gist.github.com/jruef/4bf108712040e7f034ae#file-cap-3-tasks">here</a>.</li>
<li>In capistrano 3 deploy flow changed, your task from cap 2 may not be in right position! See <a href="http://capistranorb.com/documentation/getting-started/flow/9">cap 3 deploy flow overview</a>.</li>
</ul>
<h5>Further Reading</h5>

<ul>
<li>How to write your <a href="http://capistranorb.com/documentation/getting-started/cold-start/">first cap 3 task</a>.</li>
<li>More <a href="https://github.com/capistrano/sshkit/blob/master/EXAMPLES.md">example tasks</a>.</li>
</ul>
<h3>Deploy File</h3>

Most settings can be left as they are. Most important changes are:

<ul>
<li>
<code>repository</code> variable is now called <code>repo_url</code>.</li>
<li>
<code>deploy_via :remote_cache</code> is obsolete. Cap 3 creates a a local mirror of your repo on your server.</li>
<li>Use <code>linked_dirs</code> and <code>linked_files</code> to link files and folders into shared dir. For example if you put <code>set :linked_files, %w{config/database.yml}</code> into your deploy file capistrano will link <code>shared/config/database.yml</code> to <code>current/config/database.yml</code>. Same way for dirs.</li>
<li>Ssh settings have different syntax, see example deploy file below.</li>
<li>You can find my example deploy file <a href="https://gist.github.com/jruef/4197eb066b6cc1bdae49#file-cap-3-deploy-file">here</a>.</li>
<li>
<strong>Important</strong> In cap 2 you just could write <code>var_name</code> to get the value of a variable. In cap 3 this has changed to <code>fetch(:var_name)</code>.</li>
</ul>
<h3>Stage Files</h3>

<ul>
<li>Remember that settings shared by all stages should be in deploy file not in stage files.</li>
<li>The general syntax for server config is <code>server 'example.com', roles: %w{my_role my_other_role}, my_property: :my_value</code>
</li>
<li>An example stage file is <a href="https://gist.github.com/jruef/7885a853fc965044e0e2#file-example-server-config-cap-3">here</a>. Note that I fetch all values from deploy file.</li>
</ul>
<h1>Last Steps</h1>

Congratulation in theory you have upgraded to cap 3. In practice you should now try to deploy on a test server and verify that all linkings of files and dirs are present and point to the right. Furthermore you should verify that all your custom deploy tasks do what you intended them to do.

<h1>Helpful Readings</h1>

<ul>
<li>A good overview over what is new in cap 3, also with comparison to how it was done in cap 2, this <a href="http://blog.huangzhimin.com/2013/11/02/upgrade-to-capistrano3/">post</a> by Richard Huang.</li>
<li>Helpful was also this <a href="https://semaphoreapp.com/blog/2013/11/26/capistrano-3-upgrade-guide.html">how to</a>.</li>
</ul>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/p0NOMzmgOz]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails Best Practices</title>
  <link>http://bob-roberts.net/2014/09/11/rails-best-practices/</link>
  <pubDate>Fri, 12 Sep 2014 03:45:05 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/09/11/rails-best-practices/</guid>
  <description/>
  <content:encoded><![CDATA[A couple of these tricks I wasnt aware of like the find_each.  Thanks for the write up ;)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1213</wp:post_id>
  <wp:post_date>2014-09-11 20:45:05</wp:post_date>
  <wp:post_date_gmt>2014-09-12 03:45:05</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-best-practices</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/B25TqOjBeP]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[5]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[74514439]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:20:"Rails Best Practices";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-09-10 18:52:59";s:9:"permalink";s:68:"http://niteshvarmablog.wordpress.com/2014/09/10/rails-best-practices";s:7:"content";s:13767:"<div class="reblogged-content">

<div dir="ltr" style="text-align:left;">
<div class="normal" style="text-align:center;" align="center">
<p style="text-align:left;">With the fast pace of today’s agile development industries, we know how important it is to complete a project on time. We also recognize the importance of other factors such as flexibility and readability &amp; most important performance of the application.</p>
<p style="text-align:left;"> Many times even experienced developers do not consider above points, which wont impact during initial stages of application, but will raise problems when the data in application grows exponentially and enhancement is to be done for existing application.</p>
<p style="text-align:left;"> Below are some best practices in Ruby on Rails, which should be considered at time of development in Rails framework.</p>
<p style="text-align:left;"> <strong>* </strong><strong>Use Eager Loading (Prevent N + 1 queries)</strong></p>
<p style="text-align:left;"> Most of the time new Rails developer not use eager loading of object in Rails.</p>
<p style="text-align:left;"> Eager Loading is highly recommended at the time of development in Rails.</p>
<p style="text-align:left;">It mainly resolved the common issues like N + 1 queries.</p>
<p style="text-align:left;">We can detect the N + 1 queries issues by using gem ‘Bullet’ in development environment.</p>
<p style="text-align:left;"> Poor:</p>

<pre style="text-align:left;"> 
  user has_one address
  users_controller
  def index
    @users = User.all
  end
</pre>
<p style="text-align:left;">  index.html.haml</p>

<pre style="text-align:left;">  
 - @users.each do |u|
   %p= u.address.phone_number
</pre>
<p style="text-align:left;">Above will first fire 1 query to find all the users and then for each user in each block will fire 1 query each (N queries where N is count of users record) to find phone_number from associated addresses table.</p>
<p style="text-align:left;">This will leads to increase load on the server &amp; DB when dealing with large scale application.</p>
<p style="text-align:left;">Solution:</p>

<pre style="text-align:left;">  @user = User.include(:address)</pre>
<p style="text-align:left;">Above will fire 1 query to  load all users object &amp; then 1 query to find associated addresses of all the users record, which will now reduce N + 1 queries to 2 queries.</p>
<p style="text-align:left;"><strong>* Don’t Rescue Exception, Rescue Standard Error</strong></p>
<p style="text-align:left;">Consider below  begin-rescue syntax</p>

<pre style="text-align:left;"> 
 begin
   method_call
 rescue Exception =&gt; e
  logger.info(“Error:- #{e}”)
 end
</pre>
<p style="text-align:left;">Explicitly rescuing Exception will also rescue code errors such as SyntaxError, LoadError etc.</p>
<p style="text-align:left;">If we do not use Exception type qualifier, then Ruby will catch only StandardError, which is probably what we want from begin-rescue:</p>

<pre style="text-align:left;"> 
 begin
   method_call
 rescue =&gt; e
   logger.info("Error: #{e}")
 end
</pre>
<p style="text-align:left;"><strong>* Use query attribute</strong></p>
<p style="text-align:left;">We always check if ActiveRecord's attributes exist or not by nil?, blank? or present? ? Rails provides a cleaner way for this by query attribute.</p>
<p style="text-align:left;">Suppose locked is boolean value of  users table.</p>
<p style="text-align:left;">General:</p>

<pre style="text-align:left;">  
  if @user.locked.present?
     ….
  end 
  if @user.locked.blank?
   …. 
  end

</pre>
<p style="text-align:left;">Re-factored:</p>
<pre style="text-align:left;">  
 if @user.locked?
   ….
 end
 unless @user.locked?
   ….
 end
</pre>
<p style="text-align:left;">The query attribute is almost the same as the present? method call on attribute, or the opposite of blank? method call. Each attribute of ActiveRecord's model has a query method, so we don't need to use the present? or blank? for ActiveRecord's attributes.</p>
<p style="text-align:left;"><strong>* Caching with instance variable or Use memoization</strong></p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  class Customer &lt; ActiveRecord::Base
    has_many :accounts, conditions =&gt; {:active =&gt; true}
    
    def total_balance
      #calculation over accounts to calculate total_balance
    end
  end
</pre>
<p style="text-align:left;">total_balance will be used multiple times in models, views and controllers, such as</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  - if @customer.total_balance &gt; 0
    %div.balance= @customer.total_balance
</pre>
<p style="text-align:left;">every time we use the total_balance, there should be a db query sent to retrieve all available accounts for the user, and then calculate amount as per accounts balance available.</p>
<p style="text-align:left;">How can we avoid the duplicated db query and duplicated calculation?</p>
<p style="text-align:left;">We can use following methods.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  class Customer &lt; ActiveRecord::Base
    has_many :accounts, conditions =&gt; {:active =&gt; true}
    
    def total_balance
      @total_balance ||= #calculation over accounts to calculate total_balance
    end
  end
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;">That means when first time we call total_balance, one db query will be sent, calculate the total balance then assign the result to the instance variable @total_balance. The second time when we call total_balance, no db query be sent and no calculation will be done, just return the @total_balance directly.</p>
<p style="text-align:left;">We can also do this with memoize</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
 class Customer &lt; ActiveRecord::Base
   extend ActiveSupport::Memoizable
   has_many :accounts, conditions =&gt; {:active =&gt; true}
   def total_balance
     #calculation over accounts to calculate total_balance
   end
   memoize :total_balance
 end
</pre>
<p style="text-align:left;">memoize method will help to cache the method result automatically, we don't need to change the method implementations anymore, here we just declare what methods should be memoization.</p>
<p style="text-align:left;">Note:- memoize  is deprecated from Rails 3.2 and removed in next measure version and added in gem <a href="https://github.com/matthewrudy/memoist">memoist</a> .</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">* Use batched finder for large data query</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">Suppose you have social network website containing millions of  user and you needs to send daily notification to them morning.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">General method:</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">You may find all the users, then send notifications to them one by one.</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  User.all.each do |user|
    user.send_notification
  end
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;">This code snippet will find all of the users and create a ruby object for each user row in table. But this will create huge load (memory consumption) on the application and server.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">Improved method:</p>
<p style="text-align:left;">find_each and find_in_batches are available for batched finder. We can use them to improve the performance when we needs to perform certain action on huge collection of records.</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  User.find_each do |user|
    user.send_notification! 
  end
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;">Using find_each, the application only finds 1000 users once, yield them, then handle the next 1000 users, until the last 1000 users. That means the application will only load 1000 user objects into memory each time.</p>
<p style="text-align:left;">1000 is the default batch size, if we want to change batch_size we can use :batch_size option to change it.</p>
<p style="text-align:left;">find_in_batches is similar to find_each except that it yields the array of objects</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  User.find_in_batches(:batch_size =&gt; 50) do |users|
    users.each {  |user|   user.send_notification! }
  end
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;">This method is very useful for large data query, saving the memory and time.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>
<p style="text-align:left;"><strong>* Prevent SQL Injections by using the ? in queries</strong></p>
<p style="text-align:left;"></p>
<p style="text-align:left;">User.where(“name != #{params[:name]}” )</p>
<p style="text-align:left;">User.where(‘name != ?’, params[:name] )</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">ActiveRecord will sanitize the given params, and prevent the sql injection.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"><strong>* Use caching</strong></p>
<p style="text-align:left;"></p>
<p style="text-align:left;">Using the cache will speed up the application response time a lot. When user will request the application pages, rails won't be requested, apache (server) will serve the cached pages, which decreases page response time and server load..</p>
<p style="text-align:left;">In your environment file (production.rb) file add :</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
config.action_controller.perform_caching = true
config.action_controller.cache_store = :file_store, Rails.root + ’/tmp/cache/’ 
config.action_controller.page_cache_directory = Rails.root + ‘/public/cache/’
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>
<p style="text-align:left;">And in the controllers where you want to activate page caching just add action names.</p>
<p style="text-align:left;">caches_page :index</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">So, next time when you will access the cached pages request will not go to the server.</p>
<p style="text-align:left;">Above will be good for full static pages, we can also use fragment caching to cache particular sections of pages.</p>
<p style="text-align:left;">For more details on Rails caching refer:</p>
<p style="text-align:left;">http://guides.rubyonrails.org/caching_with_rails.html</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"><strong>* Replace instance variable with local variable</strong></p>
<p style="text-align:left;"></p>
<p style="text-align:left;">Partial is a reusable view template, In partial view, we can use the instance variable directly, but it may be confused and make it hard to reuse anywhere, because we don't know exactly which instance variable can be used, so we can use the local variable in partial which will be explicitly assignment at the time of render.</p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  class UsersController &lt; ApplicationController
    def show 
      @user = User.find(params[:id])
    end
  end
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;">In show.html.haml</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">When using instance variable on partial</p>
<p style="text-align:left;">  = render :partial =&gt; ‘deatils’</p>
<p style="text-align:left;">Refactor  by using local variables.</p>
<p style="text-align:left;">  = render :partial =&gt; ‘details’, :locals =&gt; { :user =&gt; @user }</p>
<p style="text-align:left;">  or</p>
<p style="text-align:left;">  = render ‘details’, { :user =&gt; @user }</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">Now we can use the local variable user in partial details.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"><strong>* Use DB index on tables</strong></p>
<p style="text-align:left;"></p>
<p style="text-align:left;">Always add index for foreign key, columns that are used in  lookup fields and columns that are used in a GROUP BY. This can improve the performance for sql query. If you're not sure which column need to index , use https://github.com/plentz/lol_dba, which provide rake tasks to find missing indexes.</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>
<pre style="text-align:left;">
  class CreatePosts &lt; ActiveRecord::Migration
    def change
      create_table ‘posts’ do |t|
        t.string :content
        t.references :comment, :index =&gt; true
        t.references :user, :index =&gt; true
        t.boolean :active,  :index =&gt; true
      end
    end
  end
</pre>
<p style="text-align:left;"></p>
<p style="text-align:left;">We can add index explicitly as</p>
<p style="text-align:left;">  add_index :comments, :active</p>
<p style="text-align:left;"></p>
<p style="text-align:left;">We can also combine index like below</p>
<p style="text-align:left;">  add_index :comments, [:resource_id, :resource_type]</p>
<p style="text-align:left;"></p>
<p style="text-align:left;"></p>

</div>
</div>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_f33d5e8d83f332f698e37c406831f79b</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Best Resources for Beginners</title>
  <link>http://bob-roberts.net/2014/12/10/best-resources-for-beginners/</link>
  <pubDate>Thu, 11 Dec 2014 00:39:44 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/12/10/best-resources-for-beginners/</guid>
  <description/>
  <content:encoded><![CDATA[Good list.  I have never seen BaseRails before. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1214</wp:post_id>
  <wp:post_date>2014-12-10 17:39:44</wp:post_date>
  <wp:post_date_gmt>2014-12-11 00:39:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>best-resources-for-beginners</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[9]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[80250444]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:28:"Best Resources for Beginners";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-12-04 20:38:06";s:9:"permalink";s:83:"http://theselftaughtdeveloper.wordpress.com/2014/12/04/best-resources-for-beginners";s:7:"content";s:1759:"<div class="reblogged-content">

Ever since I began my Ruby On Rails journey I have followed countless Rails tutorials on countless websites. Sometimes I learned a lot, sometimes I came away just as confused as I had been before. If I could do it all over again I would narrow it down to a few handful of websites that have helped me tremendously on my Rails journey.

The following websites/tutorials are in the order they should be completed.

<a href="http://guides.rubyonrails.org/getting_started.html"><strong>Getting Started with Rails</strong></a> - This should have been my first tutorial. Incredibly simple and helpful. Do not move on from this tutorial until you have memorized most of the code.

<strong><a href="http://guides.railsgirls.com/">Rails Girls Guides</a></strong> - This is one site I plan on re-visiting. It has many short tutorials perfect for the beginner. When you're just beginning Rails, it's important to keep it simple. Keep to the basics. Open up your text editor and re-type code over and over until you start to memorize parts of it. Repetition helps with understanding how Rails works.

<a href="https://www.railstutorial.org/"><strong> Ruby On Rails Tutorial</strong></a> - The hardest tutorial on this list. I would not recommend this tutorial until you have finished the previous tutorials.

<a href="https://www.baserails.com/"><strong>BaseRails</strong></a> - This is by far the most helpful rails website I have found to date. So dang helpful with practical Rails applications that give you a sense of accomplishment. It's not free but it is absolutely worth the price. $25 dollars a month and worth every penny.

After finishing these tutorials you should be ready to start building your own stuff.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/PlTa6cok2F]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Deploy Ruby on Rails Tutorial (link)</title>
  <link>http://bob-roberts.net/2014/12/10/deploy-ruby-on-rails-tutorial-link/</link>
  <pubDate>Thu, 11 Dec 2014 03:29:55 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1215</guid>
  <description/>
  <content:encoded><![CDATA[As someone that finds it hard to make the time to post regularly, I am totally impressed with this tutorial for setting up a Rails server:

Props to Ruby Tree Software !!!

<a href="http://www.rubytreesoftware.com/courses/deploy-ruby-on-rails-tutorial" target="_blank">Deploy Ruby on Rails Tutorial</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1215</wp:post_id>
  <wp:post_date>2014-12-10 20:29:55</wp:post_date>
  <wp:post_date_gmt>2014-12-11 03:29:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>deploy-ruby-on-rails-tutorial-link</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/J0Krn7C2Tl]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Improving my developer workflow</title>
  <link>http://bob-roberts.net/2014/12/10/improving-my-developer-workflow/</link>
  <pubDate>Thu, 11 Dec 2014 03:41:59 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1217</guid>
  <description/>
  <content:encoded><![CDATA[From time to time, I look around the web to see what there are for new tools or add-ons to improve my workflow as a developer.  Last night I found two really awesome things!!!!

I am a big fan of HAML, SASS and trying to get on the CoffeeScript bandwagon ...  That being said, I work on legacy applications and find myself converting HTML to HAML and CSS to SASS.  There are some great free sites out there they will do these conversions.  Then I found <a href="https://sublime.wbond.net/packages/Rails%20Magic%20Clipboard" target="_blank">Rails Magic Clipboard</a> package for Sublime Text.  From their site:
<blockquote>Sublime text plugin to convert CSS, HTML or JavaScript in the clipboard to SASS, CoffeeScript or HAML on your screen</blockquote>
What? Seriously??  This kicks ass.  I now can copy a HTML page, change the page to .haml and paste the same code in as HAML code!!  Kudos to <a title="Nick Dowse twitter" href="http://www.twitter.com/nmdowse">@nmdowse</a> !!

The next thing is just an app for your Mac.  One way to improve your workflow is to use shortcuts.  Alias's or keyboard shortcuts or whatever.  Enter <a href="http://www.grandtotal.biz/CheatSheet/" target="_blank">CheatSheet</a>. It is easy to install, now I can just go to one of my applications (like Sublime Text), hold down the CMD key and boom!  A popup of the main shortcuts available.  No need for 50 different cheat sheets now!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1217</wp:post_id>
  <wp:post_date>2014-12-10 20:41:59</wp:post_date>
  <wp:post_date_gmt>2014-12-11 03:41:59</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>improving-my-developer-workflow</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/1teMBeuJmZ]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>How to easily create a simple static page on a Ruby on Rails Website</title>
  <link>http://bob-roberts.net/2014/12/26/how-to-easily-create-a-simple-static-page-on-a-ruby-on-rails-website/</link>
  <pubDate>Sat, 27 Dec 2014 00:48:46 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/12/26/how-to-easily-create-a-simple-static-page-on-a-ruby-on-rails-website/</guid>
  <description/>
  <content:encoded><![CDATA[Simple and easy.  I have seen this over thought majorly before.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1222</wp:post_id>
  <wp:post_date>2014-12-26 17:48:46</wp:post_date>
  <wp:post_date_gmt>2014-12-27 00:48:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-easily-create-a-simple-static-page-on-a-ruby-on-rails-website</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[85]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[80331159]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:68:"How to easily create a simple static page on a Ruby on Rails Website";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-12-24 00:49:42";s:9:"permalink";s:103:"http://rubywarriors.com/2014/12/24/how-to-easily-create-a-simple-static-page-on-a-ruby-on-rails-website";s:7:"content";s:6160:"<div class="reblogged-content">

<span style="color:#333333;">I don't know about you, but I've done a few tutorials, studied a few materials, and none of them just put this all into one place. </span><!--more-->

<span style="color:#333333;">All you want to do is create a new page, right? Well, as always, I do highly recommend learning the "why's" of anything you do in Ruby on Rails, and I will explain <em>some</em> of the why's in this post, but not all. </span>

<span style="color:#333333;">If you want to fill in any gaps in your knowledge, <a title="Michael Hartl's &quot;Ruby On Rails Tutorial&quot;" href="https://www.railstutorial.org/book/" target="_blank">here</a> is a good place to start.  However, I hope this serves as a useful starting point for you, or a good reference document for now and in the future.</span>
<h3>1. <span style="text-decoration:underline;">Setup a Branch (optional)</span>
</h3>
<span style="color:#333333;">You may or may not want to start a branch for this. However, I recommend it, because adding a static page shouldn't create any conflicts when merging back into your master branch; it's a simple, clean branch. The branch/merge procedure I describe in <a title="How to Branch with Git" href="http://rubywarriors.com/2014/12/21/how-to-branch-with-git/" target="_blank">this post</a> should work perfectly for this exercise.</span>
<h3>2. <span style="text-decoration:underline;">Make a Controller using the 'generate' command</span>
</h3>
<span style="color:#333333;">In this situation, the "PagesController" is going to be the thing that contains the <em>actions </em>'home' and 'about', because we want to create a page called 'home' and a page called 'about'.</span>

<span style="color:#333333;">To accomplish this, we use the 'generate' command:</span>
<p style="padding-left:30px;"><strong><span style="color:#008000;"><code>$ rails generate controller Pages home about</code></span></strong></p>
<span style="color:#333333;">Like many things in Rails, many things are done for us, but it's much better if you actually understand what those things are. So...</span>

<span style="color:#333333;">First of all, this command has created a file, <em>app/controllers/<strong>pages_controller.rb</strong></em> , which looks like this:</span>
<p style="padding-left:30px;"><span style="color:#333333;"><code>class Pages &lt; ApplicationController</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>def home</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>end</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>def about</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>end</code></span></p>
<p style="padding-left:30px;"><span style="color:#333333;"><code>end</code></span></p>
<span style="color:#333333;">The two <em>actions</em>: 'home' and 'about', actually carry a load of invisible functionality; basically they render the views <em>app/views/pages/<strong>home.html.erb</strong> </em>and <em>app/views/pages/<strong>about.html.erb</strong> .</em>The 'generate' command you did earlier created these files.</span>
<h3><span style="text-decoration:underline;">Display the Pages on your Website</span></h3>
<span style="color:#333333;">You can already see these pages by going to localhost:3000<em>/pages/home</em> and <em>localhost:3000/pages/about </em>in your browser. This is because the 'generate' command also placed the appropriate lines of code in your <em>config/routes.rb</em> file. They will look something like this:</span>
<p style="padding-left:30px;"><span style="color:#333333;"><code>get 'pages/home'</code></span></p>
<p style="padding-left:30px;"><span style="color:#333333;"><code>get 'pages/about'</code></span></p>
<span style="color:#333333;">To link to one of these pages in your html, all you have to do is use a piece of embedded Ruby, using the appropriate path. For example: </span>
<p style="padding-left:30px;"><span style="color:#333333;"><code>&lt;%= link_to "About", about_path %&gt;</code></span></p>
<span style="color:#333333;">For a typical example of how this might be used:</span>
<p style="padding-left:30px;"><span style="color:#333333;"><code>&lt;nav&gt;</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>&lt;li&gt;&lt;%= link_to "About", about_path %&gt;&lt;/li&gt;</code></span></p>
<p style="padding-left:30px;"><span style="color:#333333;"><code>&lt;/nav&gt;</code></span></p>

<h3><span style="text-decoration:underline;">How to <em>add</em> a page when pages already exist</span></h3>
<span style="color:#333333;">In most cases, this is dead simple.</span>

<span style="color:#333333;">1. Locate your pages controller. It will probably be named similarly to the above example. Then, just add an extra method, with a name of your choosing. For example:</span>
<p style="padding-left:30px;"><span style="color:#333333;"><code>class Pages &lt; ApplicationController</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>def home</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>end</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>def about</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>end</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>def contact</code></span></p>
<p style="padding-left:60px;"><span style="color:#333333;"><code>end</code></span></p>
<p style="padding-left:30px;"><span style="color:#333333;"><code>end</code></span></p>
 <span style="color:#333333;">2. Add a line to your routes.rb file, such as:</span>
<p style="padding-left:30px;"><span style="color:#333333;"><code>get 'pages/contact'</code></span></p>
<span style="color:#333333;">3. Create a new file in your <em>app/views/pages/ </em>folder called "<em>contact.html.erb</em>". </span>

<span style="color:#333333;">4. Put whatever html you like in that file.<em> </em></span>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/zDjS401FdE]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Pretend to generate without really generating!</title>
  <link>http://bob-roberts.net/2014/12/26/pretend-to-generate-without-really-generating/</link>
  <pubDate>Sat, 27 Dec 2014 00:50:02 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/12/26/pretend-to-generate-without-really-generating/</guid>
  <description/>
  <content:encoded><![CDATA[Hmmmm, I never knew this :(]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1223</wp:post_id>
  <wp:post_date>2014-12-26 17:50:02</wp:post_date>
  <wp:post_date_gmt>2014-12-27 00:50:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>pretend-to-generate-without-really-generating</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[17]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[80331159]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:46:"Pretend to generate without really generating!";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-12-22 00:21:18";s:9:"permalink";s:80:"http://rubywarriors.com/2014/12/22/pretend-to-generate-without-really-generating";s:7:"content";s:902:"<div class="reblogged-content">

When running 'rails generate', you can add a -p (pretend) flag at the end of the command to see what the output will look like, without actually running it. Very handy!<!--more-->
<p style="padding-left:30px;"><code>rails generate model todo_item todo_list:references content:string <strong>-p</strong>
</code></p>
<p style="padding-left:60px;">The console will then show you what would happen if you ran the command for real. In this particular case, my console returned this:</p>
<p style="padding-left:60px;"><code>invoke active_record
create db/migrate/20141206004158_create_todo_items.rb
create app/models/todo_item.rb
invoke rspec
create spec/models/todo_item_spec.rb</code></p>
Then, if everything looks fine, you can just press the up arrow (to repeat your last command), delete the '<code>-p</code>' and press enter, to run the command for real.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/2PINhlOjEr]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Creating a Simple Form with Rails</title>
  <link>http://bob-roberts.net/2014/12/26/creating-a-simple-form-with-rails/</link>
  <pubDate>Sat, 27 Dec 2014 00:53:50 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2014/12/26/creating-a-simple-form-with-rails/</guid>
  <description/>
  <content:encoded><![CDATA[This is a great write up that I thought that I would share ;)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1224</wp:post_id>
  <wp:post_date>2014-12-26 17:53:50</wp:post_date>
  <wp:post_date_gmt>2014-12-27 00:53:50</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>creating-a-simple-form-with-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0541122a46a71df0d2c6eb96964ed2df</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[122]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[80171830]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:33:"Creating a Simple Form with Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-12-10 20:24:43";s:9:"permalink";s:82:"https://cindiwritescode.wordpress.com/2014/12/10/creating-a-simple-form-with-rails";s:7:"content";s:10466:"<div class="reblogged-content">

Form helpers are designed to make working with resources much easier compared to plain HTML.

http://guides.rubyonrails.org/form_helpers.html
http://api.rubyonrails.org/ - search for "form_for" to find under ActionView::Helpers::FormHelper

We can use a <strong>form builder</strong> to create a form within an .erb template. The main form builder for Rails is provided by a helper method called "form_for".  Example code:

[code]
&lt;%= form_for :article do |f| %&gt;
            &lt;p&gt;
                        &lt;%= f.label :title %&gt;&lt;br&gt;
                        &lt;%= f.text_field :title %&gt;
            &lt;/p&gt;
            &lt;p&gt;
                        &lt;%= f.label :text %&gt;&lt;br&gt;
                        &lt;%= f.text_area :text %&gt;
            &lt;/p&gt;
            &lt;p&gt;
                        &lt;%= f.submit %&gt;
            &lt;/p&gt;
&lt;% end %&gt;
[/code]

The <strong>form_for</strong> helper creates a form that allows the user to create or update the attributes of a specific model object.

The method can be used in several slightly different ways, depending on how much you wish to rely on Rails to infer automatically from the model how the form should be constructed. For a generic model object, a form can be created by passing form_for a string or symbol representing the object we are concerned with.

In the example above, we are passing in the article object (":article").

The variable f yielded to the block is a FormBuilder object that incorporates the knowledge about the model object represented by :article passed to form_for.

Methods defined on the FormBuilder are used to generate fields bound to this model. Thus, for example,

&lt;%= f.text_field :title %&gt;

will get expanded to

&lt;%= text_field :article, :title %&gt;

which results in an html &lt;input&gt; tag whose name attribute is article[title]. This means that when the form is submitted, the value entered by the user will be available in the controller as params[:article][:title].

The code listed above generates the following HTML code source on my local dev:

[code]
&lt;form accept-charset="UTF-8" action="/articles/new" method="post"&gt;&lt;div style="display:none"&gt;&lt;input name="utf8" type="hidden" value="?" /&gt;&lt;input name="authenticity_token" type="hidden" value="lltuS9krcq8mW/Zm3j8f8SR7rTbkqdc7pWMfQZEUQtc=" /&gt;&lt;/div&gt;
            &lt;p&gt;
                        &lt;label for="article_title"&gt;Title&lt;/label&gt;&lt;br&gt;
                        &lt;input id="article_title" name="article[title]" type="text" /&gt;
            &lt;/p&gt;
            &lt;p&gt;
                        &lt;label for="article_text"&gt;Text&lt;/label&gt;&lt;br&gt;
                        &lt;textarea id="article_text" name="article[text]"&gt;&lt;/textarea&gt;
            &lt;/p&gt;
            &lt;p&gt;
                        &lt;input name="commit" type="submit" value="Save Article" /&gt;
            &lt;/p&gt;
&lt;/form&gt;
[/code]

You will see that the action attribute for the form is pointing at /articles/new. This is a problem because this route goes to the very page that you're on right at the moment, and that route should only be used to <strong>display</strong> the form for a new article.

The form needs to use a different URL in order to go somewhere else. This can be done quite simply with the <strong>:url</strong> option of form_for. Typically in Rails, the action that is used for new form submissions like this is called "create", and so the form should be pointed to that action.

We'll update the code to look like this on the first line:

[code]
&lt;%= form_for :article, url: articles_path do |f| %&gt;
[/code]

That passes the articles_path helper to the :url option. The articles_path helper tells Rails to point the form to the URI Pattern associated with the articles prefix; and the form will (by default) send a POST request to that route. This is associated with the create action of the current controller, the ArticlesController.

If you run "rake routes", you can see this association:

POST   /articles(.:format)          articles#create

Now we need to create an action in the ArticlesController for this create action to work. You can define a create action within the ArticlesController class in app/controllers/articles_controller.rb.

[code]
class ArticlesController &lt; ApplicationController
  def new
  end

  def create
  end
end
[/code]

If you re-submit the form after defining the "create" action in the ArticlesController, you'll see an error that a template is missing, but that is alright because the create action should be saving the new article to the database, not displaying a view template.

Fields of the form are sent to Rails as parameters and these parameters can then be referenced inside the controller actions. For example:

[code]
def create
  render plain: params[:article].inspect
end
[/code]

Resubmitting the form after adding that line to the create action in the ArticlesController outputs this on the web page:

{"title"=&gt;"Cindi", "text"=&gt;"Test"}

This action is now displaying the parameters for the article that are coming in from the form. We still need to do something useful with the form values, right now it's only displaying them.

<strong>Creating the Model</strong>

Models in Rails are singular and the corresponding database table should be plural. For example

Model name: Article
Database table name: Articles

Rails has a generator for creating models, which you can use by running the following command in terminal or command prompt:

rails generate model Article title:string text:text

That tells Rails that we want an Article model with a <strong>title</strong> attribute of type string and a <strong>text</strong> attribute of type text. Those attributes are automatically added to the articles table in the database and mapped to the Article model. From this command, Rails will create several files. Here is sample output from the command line:

invoke  active_record

create    db/migrate/20141210195344_create_articles.rb

create    app/models/article.rb

invoke    test_unit

create      test/models/article_test.rb

create      test/fixtures/articles.yml

Now we'll take a look at these two files:

app/models/article.rb
/migrate/20141210195344_create_articles.rb - this file creates the database structure

Note that Active Record knows how to automatically map column names to model attributes, so you don't have to declare attributes inside of Rails models.

<strong>What is a Migration?</strong>

Migrations are Ruby classes that are designed to make it simple to create and modify database tables. Migration filenames include a timestamp to ensure they are processed in the order that they are created.

Example migration file: /migrate/20141210195344_create_articles.rb

[code]
class CreateArticles &lt; ActiveRecord::Migration
  def change
    create_table :articles do |t|
      t.string :title
      t.text :text
      t.timestamps
    end
  end
end
[/code]

This migration class contains a method named "change" which will be called when you run the migration. It will create an "articles" table with one string column and a text column, It will also create two timestamp fields to all Rails to track article creation and update times.

There is much more to cover on Rails Database Migrations which I will review at a later date. That is the basics of what happens within this file though.

Now that we have a migration file, we can use a rake command to run the migration:

rake db:migrate

Now that we have the articles table in the database, we'll need to modify the ArticlesController to save the data in the database.

Edit app/controllers/articles_controller.rb and update the "create" action to look as follows:

[code]
def create
            @article = Article.new(article_params)
            @article.save
            redirect_to @article
end

private
            def article_params
                        params.require(:article).permit(:title, :text)
            end
[/code]

Here we define exactly what params can be passed through when initializing the new Article object (see the "permit" arguments, then calling the save method on it, then redirecting to the created article. The definition of the private method keeps hackers from setting the model's attributes by manipulating the hash passed to the model. It's one of several security features that help you write secure applications.

<strong>Showing Articles</strong>

We'll also have to add the "show" action to the controller. As we saw in the output of "rake routes", the route for the "show" action expects an ":id" parameter, which in this case is the id of the article. Add the show action/method to the articles controller file.

[code]
def show
  @article = Article.find(params[:id])
end
[/code]

Use Article.find to find the article we are looking for, passing in "params[:id]" to get the :id parameter from the request. We are also using an instance variable (@article) to hold a reference to the article object because Rails will pass all instance variables to the view.

Now, we have to create a new file /app/views/articles/show.html.erb with the following content:

[code]
&lt;p&gt;
            &lt;strong&gt;Title:&lt;/strong&gt;
            &lt;%= @article.title %&gt;
&lt;/p&gt;
&lt;p&gt;
            &lt;strong&gt;Text:&lt;/strong&gt;
            &lt;%= @article.text %&gt;
&lt;/p&gt;
[/code]

Now, when we submit the form, it will save the article data to the database and go to the newly created article ID: http://localhost:3000/articles/1 and display the HTML code that we set up in the show.html.erb file.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8a26850fd8c6ba21241a51e4a19f12e1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8a26850fd8c6ba21241a51e4a19f12e1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8a26850fd8c6ba21241a51e4a19f12e1</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_0541122a46a71df0d2c6eb96964ed2df</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d5d9b4bd2358c99cf98e5c3dc04a382c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/4ZvSatIOXY]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8186afa2405aa4f1d33f1a038e9bd158</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>2014 in review</title>
  <link>http://bob-roberts.net/2014/12/31/2014-in-review/</link>
  <pubDate>Wed, 31 Dec 2014 21:00:28 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">https://bobspython.wordpress.com/?p=1225</guid>
  <description/>
  <content:encoded><![CDATA[The WordPress.com stats helper monkeys prepared a 2014 annual report for this blog.

<a href="http://bob-roberts.net/2014/annual-report/"><img src="//s0.wp.com/wp-content/mu-plugins/annual-reports/img/2014-emailteaser.png" alt="" width="100%" /></a>

Here's an excerpt:
<blockquote>The concert hall at the Sydney Opera House holds 2,700 people. This blog was viewed about <strong>13,000</strong> times in 2014. If it were a concert at Sydney Opera House, it would take about 5 sold-out performances for that many people to see it.</blockquote>
<a href="http://bob-roberts.net/2014/annual-report/">Click here to see the complete report.</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1225</wp:post_id>
  <wp:post_date>2014-12-31 14:00:28</wp:post_date>
  <wp:post_date_gmt>2014-12-31 21:00:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>2014-in-review</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>wpcom_recap</wp:meta_key>
    <wp:meta_value><![CDATA[2014]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>wpcom_recap_2014</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/kKuHxHPqCb]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_facebook</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_google_plus</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_tumblr</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_path</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>What Ruby On Rails is, and the only other three things you really need to understand to get started</title>
  <link>http://bob-roberts.net/2015/01/05/what-ruby-on-rails-is-and-the-only-other-three-things-you-really-need-to-understand-to-get-started/</link>
  <pubDate>Tue, 06 Jan 2015 02:48:16 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/01/05/what-ruby-on-rails-is-and-the-only-other-three-things-you-really-need-to-understand-to-get-started/</guid>
  <description/>
  <content:encoded><![CDATA[My favorite quote:
"The terminal is a piece of voodoo"
I totally felt that way the first time in a console!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1228</wp:post_id>
  <wp:post_date>2015-01-05 19:48:16</wp:post_date>
  <wp:post_date_gmt>2015-01-06 02:48:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>what-ruby-on-rails-is-and-the-only-other-three-things-you-really-need-to-understand-to-get-started</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[4]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[80331159]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:99:"What Ruby On Rails is, and the only other three things you really need to understand to get started";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2014-12-17 22:30:56";s:9:"permalink";s:56:"http://rubywarriors.com/2014/12/05/what-is-ruby-on-rails";s:7:"content";s:3326:"<div class="reblogged-content">

<h3>What is Ruby On Rails?</h3>
Ruby is a programming language. Hardcore code - the stuff that's impossible to understand for an untrained person. You can do stuff with this language; anything, really. You can program stuff, write software with it etc.

Rails is bit like a piece of software you use to <!--more-->program stuff. It uses Ruby. People use it because it makes things a lot easier. When you build something with it, it makes things a lot easier, because it does a lot of the programming and all kinds of other stuff for you, in the background.

So, although it's useful to know some Ruby, the main battle is learning how to use Rails, or 'Ruby <em>on</em> Rails'.

When you program in Ruby, you write text files in the Ruby language. Rails then interprets that language and does stuff with it.

It's a bit like when you speak. You speak in English, for example, to someone else, and their brain, being equipped with the ability to understand English, interprets the sound you produce and carries out your orders. You are writing in Ruby, and Rails is interpreting that text and carrying your orders.

Rails can also understand other languages, too.
<h3>What is Sublime Text?</h3>
Sublime Text is a text editor (Windows Notepad is a text editor, too!). However, it's a text editor made for programmers so, handily, it shows all the relevant folders you're using at the side, so you can get to them quickly and the files therein. Also, when displaying your text files, it colours the text in different colours, making it easier to read the code.

You use Sublime Text to create and edit the text files that Rails uses to do stuff.
<h3>What is the "Terminal"?</h3>
The terminal is a piece of voodoo. But it only seems that way because you're not used to it. What you <em>are</em> used to is <em>also</em> a piece of voodoo, you just don't think it is, because you've been using it for years. You just accept it, rather than think about how it's working too much. This is what you have to do with the terminal. Don't question it too much.

The terminal is a way to <em>textually</em> interact with your computer, instead of using your mouse for everything.

Why is it used? Well, actually, once you've used it quite a lot, you'll see that it's actually <em>better</em> <em>and easier</em> for doing the stuff you need to do when you're using Ruby On Rails. Once you're reasonably fluent with it, you won't want a point-and-click interface for when you're warrioring around.

"warrior around" - phrasal verb: to work on a Ruby On Rails application.
<h3>What is a Web Application / Web App?</h3>
This one's a bit annoying - people say it and never think to explain what it means.

A web <em>page</em> doesn't really <em>do</em> anything - you read it and look at it. If it's a website that does something, you <em>could</em> call it a web app.

See, you don't need Ruby On Rails to make a web page, but it's one of the things you can use to make a web app i.e. a website that does something. Facebook is a web app, so is flickr, twitter, your blog.

If it's just a page that you can look at, but can't interact with in any way, it's a web page. If it's something you can log into and/or do something with, it's a web app / web application.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/K8iCJHBBYK]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails 4: Flash message persists for the next page view</title>
  <link>http://bob-roberts.net/2015/02/09/rails-4-flash-message-persists-for-the-next-page-view/</link>
  <pubDate>Tue, 10 Feb 2015 01:43:58 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/02/09/rails-4-flash-message-persists-for-the-next-page-view/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1230</wp:post_id>
  <wp:post_date>2015-02-09 18:43:58</wp:post_date>
  <wp:post_date_gmt>2015-02-10 01:43:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-4-flash-message-persists-for-the-next-page-view</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[403]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[72115131]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:54:"Rails 4: Flash message persists for the next page view";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-01-10 17:03:25";s:9:"permalink";s:96:"https://cbabhusal.wordpress.com/2015/01/10/rails-4-flash-message-persists-for-the-next-page-view";s:7:"content";s:1460:"<div class="reblogged-content">

The <span style="color:#0000ff;"><code>flash</code></span> variable is intended to be used before a <span style="color:#0000ff;"><code>redirect</code></span>, and it persists on the resulting page for one request. This means that if we do not <span style="color:#0000ff;"><code>redirect</code></span>, and instead simply <span style="color:#0000ff;"><code>render</code></span> a page, the <code><span style="color:#0000ff;">flash</span> </code>message will persist for two requests: it appears on the rendered page but is still waiting for a redirect (i.e., a second request), and thus the message will appear again if you click a link.

To avoid this weird behavior, when rendering rather than redirecting we use <code><span style="color:#0000ff;">flash</span>.<span style="color:#0000ff;">now</span></code> instead of <span style="color:#0000ff;"><code>flash</code></span>.

The <code><span style="color:#0000ff;">flash</span>.<span style="color:#0000ff;">now</span></code> object is used for displaying <span style="color:#0000ff;"><code>flash</code></span> messages on a rendered page. As per my assumption, if you ever find a random <span style="color:#0000ff;"><code>flash</code></span> message where you do not expect it, you can resolve it by replacing <span style="color:#0000ff;"><code>flash</code></span> with <code><span style="color:#0000ff;">flash</span>.<span style="color:#0000ff;">now</span></code>.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/rOeRExq10G]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Refactor: A clever way to DRY up your create action</title>
  <link>http://bob-roberts.net/2015/02/09/refactor-a-clever-way-to-dry-up-your-create-action/</link>
  <pubDate>Tue, 10 Feb 2015 01:46:40 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/02/09/refactor-a-clever-way-to-dry-up-your-create-action/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1231</wp:post_id>
  <wp:post_date>2015-02-09 18:46:40</wp:post_date>
  <wp:post_date_gmt>2015-02-10 01:46:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>refactor-a-clever-way-to-dry-up-your-create-action</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[54]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[69542792]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:51:"Refactor: A clever way to DRY up your create action";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-01-02 19:40:46";s:9:"permalink";s:81:"http://briandear.co/2015/01/02/refactor-a-clever-way-to-dry-up-your-create-action";s:7:"content";s:1644:"<div class="reblogged-content">

Anyone that has spent at least 5 minutes with Ruby on Rails will recognize the following code:
<pre>class PersonController

  ...

  def create
    if person.save
      flash[:success] = 'Person saved!'
      redirect_to person
    else
      flash[:error] = 'Person not saved.'
      render :new
    end
  end

  ...

end
</pre>
It's probably the single most common method in a rails controller and since it follows the same pattern in each controller, it's ripe for DRYing up!

Here's how:

In your application_controller.rb add the following method:
<pre>def save_and_redirect(new_object, success_msg, error_msg, redirect_path)
  if new_object.save
    flash[:success] = success_msg
     redirect_to redirect_path
  else
    flash[:error] = error_msg
    render :new
  end
end
</pre>
Then in your controllers call the method like this:
<pre>def create
 save_and_redirect(person, 'Person added!', 'Person not added.', person)
 end</pre>
And that's how it's done.

Also, in case anyone was wondering where my @person = Person.new(params[:person]) went and why I don't use instance variables; I use Decent Exposure. <a href="https://github.com/hashrocket/decent_exposure">Check it out!</a>

However, the above method will also work with the more conventional create action. Simply change the controller method to this:
<pre>def create
  @person = Person.new(params[:person])
  save_and_redirect(@person, 'Person added!', 'Person not added.', person)
end
</pre>
..and you're good to go.

Do you have any clever refactors? Share them in the comments below..</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/CEs1Zg5DmW]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>High Charts Interactive Grids</title>
  <link>http://bob-roberts.net/2015/03/04/high-charts-interactive-grids/</link>
  <pubDate>Thu, 05 Mar 2015 05:14:58 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/03/04/high-charts-interactive-grids/</guid>
  <description/>
  <content:encoded><![CDATA[We use High Charts as well.  Excellent tool imho]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1233</wp:post_id>
  <wp:post_date>2015-03-04 22:14:58</wp:post_date>
  <wp:post_date_gmt>2015-03-05 05:14:58</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>high-charts-interactive-grids</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/ETqDU0b8bU]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[156]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[28403862]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:29:"High Charts Interactive Grids";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-03-03 22:03:02";s:9:"permalink";s:73:"https://stephenemo.wordpress.com/2015/03/03/high-charts-interactive-grids";s:7:"content";s:1536:"<div class="reblogged-content">

Now that my web site has been live for a couple of months I have had time to go back and see some improvements I can make. The first thing I noticed was regarding the Highchart graphs, I noticed that you could filter out the lines of the graph that you where not interested in by clicking on the related legend. So I updated the graph so that clicking on it does not move you to a new page which meant this useful dynamic legend filter functionality could be used. You can still move pages by clicking on the left hand side grid boxes

[caption id="attachment_157" align="alignnone" width="300"]<a href="https://bobspython.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png"><img class="size-medium wp-image-157" src="https://bobspython.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png" alt="Interact with the High Charts Graphs" width="300" height="157" data-originalSrc="https://stephenemo.files.wordpress.com/2015/03/screenshot-from-2015-03-03-214817.png?w=300" data-rehosted="1"></a> Interact with the High Charts Graphs[/caption]

The second thing I noticed was that smaller towns ended up with the highest price. This was due to the low volumes of sales in the area. This meant a single site valued at 600,000 pounds would give high average price as it was the only one available. I do need some sorted of weighted average. Any suggestions would be welcome.

Check out <a href="http://www.propertytrackerni.co.uk">http://www.propertytrackerni.co.uk</a>
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b143370cef753f90bbb09cc49eaac7c4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Railsbricks Setup</title>
  <link>http://bob-roberts.net/2015/04/09/railsbricks-setup/</link>
  <pubDate>Fri, 10 Apr 2015 03:24:30 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/04/09/railsbricks-setup/</guid>
  <description/>
  <content:encoded><![CDATA[Cool cool find.  Kudos to Nico Schuele for creating this gem]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1235</wp:post_id>
  <wp:post_date>2015-04-09 20:24:30</wp:post_date>
  <wp:post_date_gmt>2015-04-10 03:24:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>railsbricks-setup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[37]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[86306782]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:17:"Railsbricks Setup";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-04-08 21:21:35";s:9:"permalink";s:48:"http://troyleak.com/2015/04/08/railsbricks-setup";s:7:"content";s:952:"<div class="reblogged-content">

Today I found out about <a href="http://www.railsbricks.net">railsbricks</a>. It's a ruby gem that does the complicated task of setting up trivial functionality for your site like user logins, database configuration, admin pages, and other things like that. Extremely helpful in that endeavor was <a href="http://www.developingandrails.com/2015/02/a-social-network-in-rails-gem-by-gem.html">this blog</a> post, which helped me parse some of the options I was presented with.

I did run into one problem that was not covered in his post, however. It seems the team that makes Postgresql keep moving around their psql.conf file and that causes your application to flip out without some extra configuration. As this was a test application, I went with SQLite3 for my database for simplicity's sake.

Overall, though, railsbricks is another extremely helpful tool in creating rails apps quickly and conveniently.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/XvQUCIfSzG]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Learning Ruby (and why I should have learned it earlier)</title>
  <link>http://bob-roberts.net/2015/04/17/learning-ruby-and-why-i-should-have-learned-it-earlier/</link>
  <pubDate>Fri, 17 Apr 2015 07:06:12 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/04/17/learning-ruby-and-why-i-should-have-learned-it-earlier/</guid>
  <description/>
  <content:encoded><![CDATA[I learned Rails from a Rails expert that did not know Ruby very well :(  I learned so much Ruby just from messing around in Rails console. ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1236</wp:post_id>
  <wp:post_date>2015-04-17 00:06:12</wp:post_date>
  <wp:post_date_gmt>2015-04-17 07:06:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>learning-ruby-and-why-i-should-have-learned-it-earlier</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[85]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[86593464]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:56:"Learning Ruby (and why I should have learned it earlier)";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-04-14 14:18:42";s:9:"permalink";s:97:"https://erikjenks.wordpress.com/2015/04/14/learning-ruby-and-why-i-should-have-learned-it-earlier";s:7:"content";s:1672:"<div class="reblogged-content">

The Internet has said it over and over. Did I listen? Not right away. The almighty Interwebs have said “LEARN RUBY FIRST!” Nah, I do things my way, I do what I want. I should have listened.

I spent the past week and a half sitting down, learning the basics of Ruby, and guess what. Rails makes SO MUCH MORE SENSE NOW! So I should have listened to the wise words of those who have come before me.

Actually, I think that attempting to learn Rails before Ruby helped some. I understood some of the concepts, but then after diving deep into Ruby it all started to click.

The use of hashes, arrays, classes, and all the verbiage that came with Ruby became a snowball in my mind. Once the ball began rolling I was able to comprehend even more. I went back through some of my projects that I had done originally and just read my code.

It sounds like a very noob-ish mistake, but I should have learned Ruby right from the beginning. I’m a stubborn guy though sometimes, and like I said, I wanted to do what I wanted to do. Now, I will say that I am not a Ruby expert per say, but I think that I have enough of the basics down that I can go look at <a href="http://ruby-doc.org">Ruby-doc</a> and pick my way through them to get what I want.

My next project for myself will be going through and refactoring my code that is just messy and not clean. I also am working on a personal project that I will hopefully debut in the next few months.

Short post, but it’s something I felt I needed to get out. Also, thanks to <a href="http://teamtreehouse.com">Treehouse</a> for their great resources and helping me learn Ruby!</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/NqGsDY21yX]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Mongodump cron job for nightly backup</title>
  <link>http://bob-roberts.net/2015/04/29/mongodump-cron-job-for-nightly-backup/</link>
  <pubDate>Thu, 30 Apr 2015 03:40:27 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1237</guid>
  <description/>
  <content:encoded><![CDATA[I recently looked for a way to automatically backup Mongodb database nightly.  There are some nice bash scripts out there but I wanted to just do it in a cron job.  After some struggling with taring the huge db directory I came up with this:

0 0 * * * /bin/bash -l -c 'cd /my_project_path &amp;&amp; mongodump --host 0.0.0.0 -d mydb --username mayusername --password mypassword --out /var/dbbackups/backup_$(date +\%Y\%m\%d) &amp;&amp; cd /var/dbbackups &amp;&amp; tar -zcf backup_$(date +\%Y\%m\%d).tar.gz backup_$(date +\%Y\%m\%d)/mydb

The first part is the cron for midnight daily:

0 0 * * *

Then it cd's into the rails project directory and gets ready to run bash:

/bin/bash -l -c 'cd /my_project_path

Then mongodump adding the date on the dump directory:

mongodump --host 0.0.0.0 -d mydb --username mayusername --password mypassword --out /var/dbbackups/backup_$(date +\%Y\%m\%d)

And finally, cd into that directory and tar (compress) the directory:

cd /var/dbbackups &amp;&amp; tar -zcf backup_$(date +\%Y\%m\%d).tar.gz backup_$(date +\%Y\%m\%d)/mydb

Notice that I added the database name on the directory to tar.  Mongodump will create the backup_20150429/mydb directory with all of the .bson files in it.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1237</wp:post_id>
  <wp:post_date>2015-04-29 20:40:27</wp:post_date>
  <wp:post_date_gmt>2015-04-30 03:40:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>mongodump-cron-job-for-nightly-backup</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_pending</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_url</wp:meta_key>
    <wp:meta_value><![CDATA[http://t.co/tMBYBLKvGO]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:2516516912;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>4297</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Christenson II]]></wp:comment_author>
    <wp:comment_author_email>m3talsmith@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>70.162.42.187</wp:comment_author_IP>
    <wp:comment_date>2015-04-30 16:14:52</wp:comment_date>
    <wp:comment_date_gmt>2015-04-30 23:14:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[If it helps any, I have a cron job that I do hourly backups to S3. Not only does it provide for backups off site, but having it on S3 andhourly makes it easier for me to test locally with close to the latest data before deploying or when working on a tough bug.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430435692.65386295318603515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"m3talsmith";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_notqueued</wp:meta_key>
      <wp:meta_value>1430435692</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_jobid</wp:meta_key>
      <wp:meta_value>10140564997</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>email_notification_queued</wp:meta_key>
      <wp:meta_value>1430440688</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1430440688</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1430440688.7630279064178466796875;s:7:"message";s:49:"broberts65 changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:10:"broberts65";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>How to Set Up Flash Hashes and Error Messages in Rails</title>
  <link>http://bob-roberts.net/2015/05/20/how-to-set-up-flash-hashes-and-error-messages-in-rails/</link>
  <pubDate>Thu, 21 May 2015 06:06:17 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/05/20/how-to-set-up-flash-hashes-and-error-messages-in-rails/</guid>
  <description/>
  <content:encoded><![CDATA[So simple but so many do not use this.  We have a legacy app that has NO error messages.  Try to login with wrong email, it just does not work but no message to tell you why.  Seems like this should be a standard thing.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1241</wp:post_id>
  <wp:post_date>2015-05-20 23:06:17</wp:post_date>
  <wp:post_date_gmt>2015-05-21 06:06:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-set-up-flash-hashes-and-error-messages-in-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[26]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[91461367]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:54:"How to Set Up Flash Hashes and Error Messages in Rails";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-05-15 04:15:23";s:9:"permalink";s:108:"https://christopherrdoddcode.wordpress.com/2015/05/15/how-to-set-up-flash-hashes-and-error-messages-in-rails";s:7:"content";s:2170:"<div class="reblogged-content">

<strong>Notices</strong>

<strong>1. Setting a notice</strong>

Setting a flash notice is as easy as assigning it to the <strong><em>flash </em></strong>object
<pre>flash[:notice] = "The subject was created successfully"</pre>
<em>Where should you put it?</em>

A good place to put it is in the controller after the object successfully saves or is destroyed. For example:
<pre>def create
  @subject = Subject.new(subject_params)

  if @subject.save
    flash[:notice] = "Subject '#{@subject.name}' created Successfully"
    redirect_to root_path

  else
    render('new')
  end
end</pre>
<strong>2. Displaying the notice</strong>

If using <a href="http://getbootstrap.com/">Bootstrap</a> and <a href="http://haml.info/">HAML</a>, you can put this in the view where the user gets redirected to
<pre>-if !flash[:notice].blank?
  .row
    .notice.alert.alert-success
      =flash[:notice]</pre>
If you're not using <a href="http://getbootstrap.com/">Bootstrap</a> or <a href="http://haml.info/">HAML</a>, try this:
<pre>&lt;% if !flash[:notice].blank? %&gt;
   &lt;div class="notice"&gt;&lt;%= flash[:notice] %&gt;&lt;/div&gt;
&lt;% end %&gt;</pre>
<strong>Errors</strong>

<strong>1. Write your validations</strong>

For there to be errors, you need validations. If you haven't built validations, I suggest you do this now.

<strong>2. Generate a partial for displaying your errors</strong>
<pre><em>#app/views/application/_error_messages.html.haml</em>
-if object &amp;&amp; object.errors.size &gt; 0
  #error-explanation
    %h3
      = pluralize(object.errors.size, 'error')
      prohibited this record from being saved
    %p problems with the following fields:
    %ul
      - object.errors.full_messages.each do |msg|
        %li= msg</pre>
<b>3. Create a custom helper method</b>
<pre><em>#app/helpers/application_helper.rb</em>
def error_messages_for(object)
  render(:partial =&gt; 'application/error_messages', :locals =&gt; {:object =&gt; object})
end</pre>
<strong>3. Call the helper on the view with the form</strong>
<pre>= error_messages_for(@subject)</pre>
</div>";}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Managing Developers - How not to suck</title>
  <link>http://bob-roberts.net/2015/06/06/managing-developers-how-not-to-suck/</link>
  <pubDate>Sat, 06 Jun 2015 22:23:25 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/06/06/managing-developers-how-not-to-suck/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1243</wp:post_id>
  <wp:post_date>2015-06-06 15:23:25</wp:post_date>
  <wp:post_date_gmt>2015-06-06 22:23:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>managing-developers-how-not-to-suck</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[253]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[10731750]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:37:"Managing Developers - How not to suck";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2011-03-09 04:19:55";s:9:"permalink";s:79:"https://foredecker.wordpress.com/2011/03/05/managing-developers-how-not-to-suck";s:7:"content";s:2519:"<div class="reblogged-content">

I’ve been a development manager for 15 years. I have had the privilege to manage some great people – many of whom have become lifelong friends. I’ve also managed people I never want to hear from again. I've had some good mentors along the way and I've worked for some great mangers, a couple of crummy mangers, and one psychopath. It’s been both a rewarding and challenging experience. People who have worked for me tell me I'm a pretty good development manger.

Along the way, I’ve gotten to know many other development mangers. I've seen a few really good ones, and many bad ones. I have enjoyed working for a world class manger at Microsoft. I’ve also seen a couple of mangers who have been fired for how badly they manage people.

Managing developers is really hard. Why? Because software development is fundamentally a creative activity, like music, art, architecture, math and writing: Yes, yes yes…. there are strong engineering and scientific aspects to software development. Good engineering, and sometimes a scientific approach makes good developers better. But at the end of the day writing good software is a creative exercise and managing creative people is simply hard.

We pay developers to do two things: think and be creative. Good thinking and being creative cannot be mandated, both must be <em>enabled</em>. 80% of a development mangers job is enabling people to do their best thinking, and be creative, with good continuity over time. Its is impossible to plan, manage or schedule thinking and creativity.

The other 80% of our collective job is shipping stuff.  At some point in time we need to ship our software to the people who will use it.  Shipping can be engineered, planned, scheduled and managed. The challenge is that enabling people to think and be creative is requires a very different skill set than shipping.

If you want to be a good development manger, then your first task is to simply not suck.  Sucking at some management aspect is like a golfer who can’t putt.  A golfer can have a miracle drive, long and straight, a great approach game, but if they can’t putt – their drunk buddies who <em>can</em> putt will beat them.

<a href="http://foredecker.wordpress.com/series-managin%C3%A2%C2%80%C2%A6ow-not-to-suck/" target="_blank">This series of posts</a> is my advice on how not to suck as a development manager.

I hope you enjoy this series as much as I enjoy writing it.

Best Regards
-Foredecker</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/607311867405410305";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"OIKFDL0S01";s:4:"date";s:29:"Sat, 06 Jun 2015 22:23:30 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"pyPOkVpG5RPwCxqIfCsAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=134:u=40:i=1433629411:t=1433630762:s=AQFlmmg67a3uPbe1Yp0elfRWDmgdegfA"; Expires=Sat, 06 Jun 2015 22:46:02 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "OIKFDL0S01",
  "status": 401,
  "timestamp": 1433629411267
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=134:u=40:i=1433629411:t=1433630762:s=AQFlmmg67a3uPbe1Yp0elfRWDmgdegfA"";s:7:"expires";i:1433630762;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Offshore, nearshore, come ashore - Bringing Rails Team in house</title>
  <link>http://bob-roberts.net/2015/06/23/offshore-nearshore-come-ashore-bringing-rails-team-in-house/</link>
  <pubDate>Wed, 24 Jun 2015 02:19:48 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1244</guid>
  <description/>
  <content:encoded><![CDATA[I just made my first year where I work and it has been crazy fun and challenging.

When I started a year ago, our application was in the hands of near shore developers.  They had just taken over from off shore developers a couple months prior to my coming on board.  They were by far still in the learning curve.  The first deployment we did after I got there was a team effort and a load of finger crossing.

The near shore team did an excellent job learning the application and where churning out user stories like mad.  As they were all located in Mexico there was no time difference to speak of and with the help of Skype and daily standups, we were able to work efficiently.

Shortly after I started working here, I started to build my in house team.  Finding good available Rails developers in the Phoenix area is quite impossible.

My first hire was somebody that was previously one of my interns for my company.  I had to pay pretty good to convince him to come on board.  He was quite happy with his current employer.

From there the search was difficult.  We ended up bringing on a couple of interns from ASU and I just had the pleasure recently to hire one of them on full time.  Another developer that was in the learning phase keep hounding me and we brought him on as a junior Rails developer where he has continued to excel.  Another developer expressed interest in working with us.  We brought him on as an intern and was recently made a full time employee as well.

Other additions to the team were a top notch Project Manager and a Senior SysAdmin to handle the multiple servers.

Last month the contract for the near shore developers was up.

We are all in house now and working on site.  The old saying cant teach a dog new tricks really means something sometimes with senior developers.  They sometimes get stuck in their ways.  New junior developers looking to make a living programming are generally eager to learn and so far I have had success with 5 out of 7 interns.

They cant get hired without experience and can't get experience if they don't get hired.

Try hiring a developer intern.  Check out the local universities that have CS programs.  If you can't find great developers; build them.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1244</wp:post_id>
  <wp:post_date>2015-06-23 19:19:48</wp:post_date>
  <wp:post_date_gmt>2015-06-24 02:19:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>offshore-nearshore-come-ashore-bringing-rails-team-in-house</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11975100570]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/613531952281317376";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"Q2UQ7QY3W5";s:4:"date";s:29:"Wed, 24 Jun 2015 02:19:55 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"yp52qR6L6hNAX71MMysAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=152:u=42:i=1435112395:t=1435189425:s=AQET_e5Xhfe6DKVw9A7o9A7zpoyCzLb2"; Expires=Wed, 24 Jun 2015 23:43:45 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "Q2UQ7QY3W5",
  "status": 401,
  "timestamp": 1435112395196
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=152:u=42:i=1435112395:t=1435189425:s=AQET_e5Xhfe6DKVw9A7o9A7zpoyCzLb2"";s:7:"expires";i:1435189425;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>The venture capital firms that are best at spotting unicorns</title>
  <link>http://bob-roberts.net/2015/06/23/the-venture-capital-firms-that-are-best-at-spotting-unicorns/</link>
  <pubDate>Wed, 24 Jun 2015 02:57:15 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/1246/the-venture-capital-firms-that-are-best-at-spotting-unicorns/</guid>
  <description/>
  <content:encoded><![CDATA[ ]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1246</wp:post_id>
  <wp:post_date>2015-06-23 19:57:15</wp:post_date>
  <wp:post_date_gmt>2015-06-24 02:57:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>the-venture-capital-firms-that-are-best-at-spotting-unicorns</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[433184]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[39587363]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/613541369030668288";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[1247]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:60:"The venture capital firms that are best at spotting unicorns";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-06-23 19:54:23";s:9:"permalink";s:81:"http://qz.com/433184/the-venture-capital-firms-that-are-best-at-spotting-unicorns";s:7:"content";s:4232:"<div class="reblogged-content">

<em>This post has been updated.</em>

Last month, Quartz went hunting for the biggest "<a href="http://qz.com/410348/the-biggest-unicorn-makers-in-tech-ranked/">unicorn makers</a>" in the venture capital world. By analyzing data from research firm Pitchbook, the goal was to find out which firms participated in rounds that directly pushed a startup's valuation to $1 billion or more.

Accel Partners and Insight Venture Partners came out on top, each with seven deals that helped propel a startup to "unicorn" status. But since the scope was late-stage deals, some readers noted, rightly so, that these firms were <a href="https://twitter.com/oss8/status/602865400422932480">simply riding the wave</a>, investing in fast-growing-yet-established startups, such as <a href="http://qz.com/385379/slack-just-doubled-its-valuation-proving-enterprise-software-can-be-sexy/">Slack</a>. For investors with deep enough pockets, it's easy to go "<a href="http://goinglongblog.com/private-late-stage-valuations-skyrocketing/?utm_content=bufferf19c3&amp;utm_medium=social&amp;utm_source=twitter.com&amp;utm_campaign=buffer">logo shopping</a>" and invest in hot startups, solely to be associated with them. (The data, however, did include follow-on deals, or subsequent investments in startups the firms already had a stake in.)

But getting in early is often where the biggest returns are. Making those types of investments also requires guts and foresight since they're bets on startups that might have a barely working prototype—or perhaps just an idea.

So this time, Quartz looked at early-stage investments—seed and series A rounds—in startups that ultimately became billion-dollar companies, using Pitchbook's data from 2000 to June 10, 2015. Sequoia Capital led with 10 investments—including LinkedIn, Dropbox, Airbnb, Stripe—followed by SV Angel with nine and First Round Capital with eight. (<span class="s1">The data from Pitchbook did not include companies that eventually went public with valuations of $1 billion or more. For example, a representative from Sequoia said the firm invested in 18 unicorns if public companies were included.)</span>

[caption id="attachment_434296" align="alignnone" width="640"]<img class="size-medium-desktop wp-image-434296" src="https://bobspython.files.wordpress.com/2015/06/atlas_v1zepit82x-1.png" alt="atlas_V1ZePiT8@2x (1)" width="640" height="959" data-originalSrc="https://qzprod.files.wordpress.com/2015/06/atlas_v1zepit82x-1.png?w=640" data-rehosted="1"><!-- caption placeholder -->[/caption]

Sequoia has a reputation for being the <a href="https://www.cbinsights.com/blog/billion-dollar-startup-venture-capital/">best at spotting unicorns</a>. When looking solely at the number of billion-dollar startups in its portfolio, that's true. But the firm has also invested in 653 early-stage companies since 2000, which results in a 1.5% unicorn-spotting rate. Almost all the firms that got in early with at least four unicorns tout a rate of 1% to 3%, with two exceptions. Y Combinator invested in the most number of early-stage startups (808), deflating its unicorn-spotting rate to 0.7%. The other is Union Square Ventures, which got in early with five startups (Etsy, Twitter, Zynga, MongoDB, Twilio) eventually worth at least $1 billion. It had only invested in 75 early-stage companies—a whopping rate of 6.7%.

[caption id="attachment_434266" align="alignnone" width="640"]<img class="size-medium-desktop wp-image-434266" src="https://bobspython.files.wordpress.com/2015/06/atlas_41x60jp82x2.png" alt="atlas_41X60jp8@2x" width="640" height="619" data-originalSrc="https://qzprod.files.wordpress.com/2015/06/atlas_41x60jp82x2.png?w=640" data-rehosted="1"><!-- caption placeholder -->[/caption]

<strong>Update (June 23): </strong>This post has been updated to clarify that the data from Pitchbook did not include companies that went public with a valuation of $1 billion or more, and to include a comment from a Sequoia representative.
<h2>Read this next: <a href="http://qz.com/410348/the-biggest-unicorn-makers-in-tech-ranked/">The biggest unicorn makers in tech, ranked</a>
</h2>
</div>";s:15:"images_mirrored";i:3;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"UD3QE6D2DB";s:4:"date";s:29:"Wed, 24 Jun 2015 02:57:18 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"zjGZGSmN6hNAho1MMysAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=152:u=42:i=1435114638:t=1435189425:s=AQEp-Ry3fsfkSEc3MbTp2H2fR59m4jf8"; Expires=Wed, 24 Jun 2015 23:43:45 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "UD3QE6D2DB",
  "status": 401,
  "timestamp": 1435114638998
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=152:u=42:i=1435114638:t=1435189425:s=AQEp-Ry3fsfkSEc3MbTp2H2fR59m4jf8"";s:7:"expires";i:1435189425;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_29da18e00a8a503a9bf7b9edabe03866</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_2d43538d7c933caccc9716f7ece99acb</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Why Use Ruby On Rails?</title>
  <link>http://bob-roberts.net/2015/06/23/why-use-ruby-on-rails/</link>
  <pubDate>Wed, 24 Jun 2015 03:01:28 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/06/23/why-use-ruby-on-rails/</guid>
  <description/>
  <content:encoded><![CDATA[Nice short read on benefits of Rails]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1250</wp:post_id>
  <wp:post_date>2015-06-23 20:01:28</wp:post_date>
  <wp:post_date_gmt>2015-06-24 03:01:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-use-ruby-on-rails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/613542437160488960";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[148]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[67845089]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[1251]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:22:"Why Use Ruby On Rails?";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-06-22 01:19:38";s:9:"permalink";s:67:"https://socialzinger.wordpress.com/2015/06/22/why-use-ruby-on-rails";s:7:"content";s:6221:"<div class="reblogged-content">

When it comes to having software developed, thereâs no lack of options when it comes to the technologies you can use. But depending on what you need your application to do, certain technologies are going to be a better match. For most of the custom applications to build, a lot of developersÂ use Ruby on Rails. Hereâs a quick background on Rails, why its a good match for most web applications, and why you might want to consider it if you have a web application project in mind.

[caption id="" align="aligncenter" width="426"]<a href="http://www.bullhornreach.com/job/2053589_ruby-on-rails-developer-chicago-il"><img class="featured-image wp-post-image" title="rubyonrails" src="http://cdn.business2community.com/wp-content/uploads/2014/02/go-to-tools.jpg" alt="Ruby on Rails" width="426" height="291"></a> Ruby On Rails[/caption]

In cases, business owners needed something much more customized, with specific features based on their business needs. When this comes up in business, my go-to tool for building these types of web applications is Ruby on Rails.
<blockquote>Note: I want to be clear that Iâm not necessarily saying that Rails is the best option for all types of projects. But for most web applications, it includes the functionality and features necessary to quickly develop this type of software.</blockquote>
<h3>Quick Background on Ruby on Rails</h3>
Ruby on Rails is whatâs called a âweb frameworkâ written in a programming language called âRubyâ (hence the name). The term âweb frameworkâ just means that Ruby on Rails is a collection of tools, libraries, and additions to the Ruby programming language that enable developers to quickly create web-based software. It was developed by a company called 37signals and is used on tens of thousands of websites, including Github, Shopify, Groupon, LivingSocial, YellowPages and more.

 
<h3>3 Reasons Why to Use Ruby on Rails</h3>
Ruby on Rails can make it more affordable to create and maintain web-based software. Here are some of the main reasons for using Ruby on Rails for your web application project:
<ol>
<li>
<strong>Faster development time</strong>: Ruby on Rails was created with a concept in mind called âconvention over configurationâ. In some other technologies, developers need to spend a significant amount of time making decisions about how an application will be setup (e.g., file structure for the project, how code will talk to the database, or various settings in configuration files).The Rails approach is that it comes with these decisions already made, by way of âsensible defaultsâ or conventions that work well in the majority of applications. That means developers can spend the bulk of their time on the unique aspects of the problem theyâre trying to solve by creating their application, not the mundane aspects of setting it up.

Rails also embraces a concept known as âdonât repeat yourselfâ or DRY. The idea behind DRY is that you shouldnât duplicate your code. Instead, you should organize it in such a way that code needed in multiple places can be written once, then shared wherever its needed.

This helps avoid âcopy/paste codingâ and makes maintaining code and making changes easier down the road. And while DRY is not a concept unique to Rails (or Ruby for that matter), it is a best practice on which the the Rails community places a high value.</li>
	<li>
<strong>Modular design</strong>: Rails also has a modular design. Itâs common in most programming languages to find libraries that allow you to add specific functionality to your software and Ruby / Rails are no different. Rubyâs libraries are called âgemsâ and can be used to add all sorts of functionality to your web applications.You can think of gems as something similar to plugins in WordPress, except they generally allow a developer to more easily add features versus being something that the end user can add and use directly.

Some common gems I use include adding features for:
<ul>
<li>User login / logout functionality</li>
	<li>Creating PDF files</li>
	<li>Displaying information on Google Maps</li>
	<li>Integrating with social media sites like Twitter and Facebook</li>
	<li>Integrating with third-party services (email newsletter services, text messaging, etc)</li>
</ul>
</li>
	<li>
<strong>Automated Testing</strong>: Another thing the Rails community is passionate about is testing. And although testing can be taken too far, in general it is absolutely a good idea and something I incorporate with all of the code I write.Its common to have features that are complex enough that they need to be broken up into separate parts. As you build each part, you want to be that it works like it should. And you also want to be sure that as you continue building on new functionality, you donât break what was already working.

Thatâs essentially what automated testing allows you to do, by writing code that tests your application. That test code can be run with a single command and can quickly test all of the various cases for your application to be sure everything is still working correctly. This is significantly better (and more accurate) than just clicking around in a web browser testing things out.</li>
</ol>
<h3>Faster Development, Easier Maintenance</h3>
The bottom line is that Rails is optimized for creating feature-rich web applications in minimal time. Thereâs a large ecosystem of libraries for more common functionality you might need in a web appâ¦and a skilled developer can create their own libraries if needed. New features can be added quickly and maintaining applications over time can also be more cost-effective.

I am looking for Solid Ruby on rails Developers for roles in Chicago. Check out the details here, would love to get in contact with Ruby on Rails experts in the areaÂ <a href="http://www.bullhornreach.com/job/2053589_ruby-on-rails-developer-chicago-il" target="_blank">http://www.bullhornreach.com/job/2053589_ruby-on-rails-developer-chicago-il</a>

 

Check out our other roles here <a href="http://recruitingsniper.com" target="_blank">http://recruitingsniper.com</a>
</div>";s:15:"images_mirrored";i:1;}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"19XW6ABUV1";s:4:"date";s:29:"Wed, 24 Jun 2015 03:01:33 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"pJ+ramSN6hOw4M+b0ioAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=152:u=42:i=1435114893:t=1435189425:s=AQHr9o3G6avBk2gXSGtH4zkgSwJN_d0B"; Expires=Wed, 24 Jun 2015 23:43:45 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "19XW6ABUV1",
  "status": 401,
  "timestamp": 1435114893765
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=152:u=42:i=1435114893:t=1435189425:s=AQHr9o3G6avBk2gXSGtH4zkgSwJN_d0B"";s:7:"expires";i:1435189425;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d8dcd2fbfa6b7fb7ba8c6549a696ee2a</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c33f8d0a299e08f958f1aa160be94fac</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_b757575f34a10c3f8efec9eccc54f114</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8dbd0052065aad5521c04fd61a7a88f4</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Ruby on Rails for Beginners</title>
  <link>http://bob-roberts.net/2015/06/23/ruby-on-rails-for-beginners/</link>
  <pubDate>Wed, 24 Jun 2015 03:06:32 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/06/23/ruby-on-rails-for-beginners/</guid>
  <description/>
  <content:encoded><![CDATA[Super deep RoR for Beginners]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1253</wp:post_id>
  <wp:post_date>2015-06-23 20:06:32</wp:post_date>
  <wp:post_date_gmt>2015-06-24 03:06:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ruby-on-rails-for-beginners</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[123]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[93770222]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":7:{s:5:"title";s:27:"Ruby on Rails for Beginners";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-06-18 08:29:56";s:9:"permalink";s:81:"https://ashishpatilwebtricks.wordpress.com/2015/06/18/ruby-on-rails-for-beginners";s:7:"content";s:26455:"<div class="reblogged-content">

If you’re like me, you’re reading this on your bright-red custom-built laptop in a soothing rosemary-scented bubble bath, and you’re wondering, “Why do I want another interpreted programming language? I can find my way around Perl and PHP and maybe a little Python. <i>And</i> Unix shell scripting. I feel fine. Why do people keep <a class="external text" title="http://del.icio.us/tag/ruby/" href="http://del.icio.us/tag/ruby/" target="_blank" rel="nofollow">talking about Ruby</a>?”
<table id="toc" class="toc" summary="Contents"><tbody><tr>
<td>
<div id="toctitle">
<h2>Contents</h2>
</div>
<ol>
<li>Why Ruby is Cool</li>
	<li>Why Rails Is Cool</li>
	<li>Installing Ruby and Rails</li>
	<li>Using It
<ol>
<li>Step one:Set up the database</li>
	<li>Step two:Create the scaffolding</li>
	<li>Steps three and beyond:Customize the application</li>
</ol>
</li>
</ol>
</td>
</tr></tbody></table>
<a name="Why_Ruby_is_Cool"></a>
<h3><span class="mw-headline">Why Ruby is Cool</span></h3>
Like so many of the very coolest things, Ruby was invented in Japan in the ’90s. Ruby is purely object-oriented; even things like integers and strings have intrinsic methods and properties. So, for example, <tt>print "Webmonkey".reverse</tt> outputs “yeknombeW”. It’s a clean, pretty language, with a flexible, predictable syntax that’s easy to read and write, and comfortable for people coming from Perl or C.

It’s more than easy to learn and use though — it’s fun, especially if you use <a class="external text" title="http://poignantguide.net/ruby/" href="http://poignantguide.net/ruby/" target="_blank" rel="nofollow">Why’s (Poignant) Guide to Ruby</a>, an engrossing, whimsical adventure story that reads like a collaboration between <a class="external text" title="http://en.wikipedia.org/wiki/Stanislaw_Lem" href="http://en.wikipedia.org/wiki/Stanislaw_Lem" target="_blank" rel="nofollow">Stanislaw Lem</a> and <a class="external text" title="http://en.wikipedia.org/wiki/Edward_Lear" href="http://en.wikipedia.org/wiki/Edward_Lear" target="_blank" rel="nofollow">Ed Lear</a> and just happens to teach the reader Ruby (and the love of Ruby). (Note to editor:can you get this guy to write for Webmonkey?)

<a name="Why_Rails_Is_Cool"></a>
<h3><span class="mw-headline">Why Rails Is Cool</span></h3>
Much of the attention being heaped on Ruby these days is fueled by <a class="external text" title="http://rubyonrails.com/" href="http://rubyonrails.com/" target="_blank" rel="nofollow">Rails</a>, a framework for using Ruby to make web applications. Ruby on Rails has been used for a handful of high-profile sites, such as <a class="external text" title="http://www.basecamphq.com/" href="http://www.basecamphq.com/" target="_blank" rel="nofollow">Basecamp</a> and <a class="external text" title="http://www.backpackit.com/" href="http://www.backpackit.com/" target="_blank" rel="nofollow">Backpack</a>.

Rails is much more than just a tube of glue with which to stick Ruby on the web. And of course, it’s possible to program web apps in Ruby without getting Rails involved — just tell Apache to invoke your Ruby scripts via CGI. Rails is a programming toolbox, with a wealth of pre-written code that implements the structure and many of the common functions of a database-driven site. That eliminates much of the preliminary busywork necessary to create such a site, but also enforces a tight, sane structure on the code, which has the effect of making development very facile. It’s like working in a well-organized company:it takes a little time to figure out who sits where and what they do, but once you understand the structure, you can use it to your advantage without having to make lots of micro-managerial decisions all the time.

Rails uses a <a class="external text" title="http://en.wikipedia.org/wiki/MVC" href="http://en.wikipedia.org/wiki/MVC" target="_blank" rel="nofollow">model-view-controller</a> style of architecture, in which the database and its representation (“model”), the user interface (“view”), and the functional logic (“controller”) of the application are all kept neatly separate. The advantages of this architecture can be debated, but at least it means you have to try pretty hard if you want to make an application that’s not clean, portable, and sharable.

And easy. All over the web you’ll find testaments to how “The first time I ever looked at Ruby on Rails, I built a mobile-platform, social-networked auction site in six hours with one hand, while making this awesome Ajax-enabled to-do-list manager with the other!”

Regardless of Rails’s actual merits, the enthusiasm — fueled by things like the Rails Day festival, in which hundreds of competing developers had 24 hours to build a web app — is contagious. Let’s join the party!

<a name="Installing_Ruby_and_Rails"></a>
<h3><span class="mw-headline">Installing Ruby and Rails</span></h3>
For integration into an existing web setup, Rails can run under Apache via CGI or <a class="external text" title="http://www.fastcgi.com/" href="http://www.fastcgi.com/" target="_blank" rel="nofollow">FastCGI</a>. It also comes conveniently bundled with its own web server software, WEBrick, which is written in Ruby and serves sites on port 3000 by default, making it easy to test RoR apps on a development machine.

Cool people who manage their own web servers can install first Ruby and then Rails (you’ll also need a database, like MySQL or PostgreSQL) and get started — the <a class="external text" title="http://wiki.rubyonrails.com/rails/show/GettingStartedWithRails" href="http://wiki.rubyonrails.com/rails/show/GettingStartedWithRails" target="_blank" rel="nofollow">official installation instructions</a> are more comprehensive, platform by platform, than I could ever hope to be. Rails hasn’t become a popular offering on hosting services the way Perl and PHP are. If you pay for hosting on a shared server, your experience may vary. You can beg the host to install it on the server, or install your own Rails and work around snags you encounter. If you just want a version to play around with on your local Windows machine, Curt Hibbs goes into painstaking detail <a class="external text" title="http://www.onlamp.com/pub/a/onlamp/2005/01/20/rails.html" href="http://www.onlamp.com/pub/a/onlamp/2005/01/20/rails.html" target="_blank" rel="nofollow">here</a>. We can just use the built-in web server to start with, and you can configure it to work with your Apache installation later.

<a name="Using_It"></a>
<h3><span class="mw-headline">Using It</span></h3>
However you get your RoR on your system, the procedure is pretty simple once it’s installed. Let’s take a stroll through building a basic application. How about a bookmark manager? We’re only going to walk through the starter steps, so if you want an actual full-featured bookmark manager at the end of the day, I am not your guy. I can only teach you to fish; poaching the result in a nice court-bouillon is up to you.

Grab your stopwatches — let’s see how long it takes to get this site off the ground.

<a name="Step_one:Set_up_the_database"></a>
<h4><span class="mw-headline">Step one:Set up the database</span></h4>
Let’s create the MySQL database that Rails is going to use to store our bookmarks. Rails is particular about certain things. Mainly, it likes the primary key in the database table to be an auto-incremented integer called ‘id’, and the database table to have a plural name (i.e., ending in ‘s’). Ours will be “bookmarks”; woe unto you if you want Rails to organize your gooses. Me, I want the table to store a URL, a name, and a description for each bookmark. So, using my command-line MySQL interface, I create the database:
<div id="highlighter_630022" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">mysql&gt; CREATE DATABASE bookmarker;</code></td>
</tr></tbody></table>
</div>
</div>
</div>
and then create and populate the table within it:
<div id="highlighter_243624" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">mysql&gt; USE DATABASE bookmarker;</code></td>
</tr></tbody></table>
</div>
</div>
</div>
<i>note:</i> some versions of MySQL don’t require the <b>DATABASE</b> keyword.
<div id="highlighter_79642" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>01</code></td>
<td class="content"><code class="plain">mysql&gt; CREATE TABLE bookmarks (</code></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>02</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>03</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>04</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>05</code></td>
<td class="content">
<code class="spaces">  </code><code class="plain">-&gt;  id SMALLINT (5) NOT NULL auto_increment,</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>06</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>07</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>08</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>09</code></td>
<td class="content">
<code class="spaces">  </code><code class="plain">-&gt;  url VARCHAR (255),</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>10</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>11</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>12</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>13</code></td>
<td class="content">
<code class="spaces">  </code><code class="plain">-&gt;  name VARCHAR (100),</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>14</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>15</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>16</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>17</code></td>
<td class="content">
<code class="spaces">  </code><code class="plain">-&gt;  description VARCHAR (255),</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>18</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>19</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>20</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>21</code></td>
<td class="content">
<code class="spaces">  </code><code class="plain">-&gt;  PRIMARY KEY (id)</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>22</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>23</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>24</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>25</code></td>
<td class="content">
<code class="spaces">  </code><code class="plain">-&gt; );</code>
</td>
</tr></tbody></table>
</div>
</div>
</div>
If you have a mouse and like to administer your MySQL in some snazzier way, feel free to use that instead.

<a name="Step_two:Create_the_scaffolding"></a>
<h4><span class="mw-headline">Step two:Create the scaffolding</span></h4>
Now the magic begins. Regardless of the nature of a Rails app, the first step, once the database is in place, is to create a starter framework. In a nice fresh directory, we type the magic words on the command line:
<div id="highlighter_85920" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">rails Bookmarker</code></td>
</tr></tbody></table>
</div>
</div>
</div>
And Rails automatically creates a directory called Bookmarker containing eleven subdirectories which constitute our budding application. Let’s pause here to take a brief look at what goes into a Rails app.
<div id="highlighter_220138" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">$ ls Bookmarker</code></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>2</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>3</code></td>
<td class="content"><code class="plain">CHANGELOG README Rakefile app/ components/ config/ db/ doc/ lib/ log/ public/ script/ test/ vendor/</code></td>
</tr></tbody></table>
</div>
</div>
</div>
<tt>public</tt> is the public face of the application. It’s the only directory of the bunch that the web server has access to. It contains the dispatch scripts, which are the intermediaries between the browser and the application, and the directories where we’ll put images, JavaScript and CSS.

The <tt>app</tt> directory contains the meat of our application, including some elements you may remember from a few sections ago:
<div id="highlighter_749442" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">ls Bookmarker/app</code></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>2</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>3</code></td>
<td class="content">
<code class="spaces"> </code><code class="plain">apis/  controllers/  helpers/  models/  views/</code>
</td>
</tr></tbody></table>
</div>
</div>
</div>
Within this directory, <tt>controllers</tt> contains the functional Ruby code that drives the application, <tt>models</tt> contains a description of the database, and <tt>views</tt> contains <tt>.rhtml</tt> template files that control the visible HTML output of the methods. There is one template for each method of our application.

What else? <tt>log</tt> contains logs, <tt>doc</tt> will contain documentation. <tt>script</tt> contains some helpful executable scripts for working with Rails. <tt>config</tt> contains configuration info, which we’ll set up right now.

<tt>config/database.yml</tt> is a <a class="external text" title="http://www.yaml.org/" href="http://www.yaml.org/" rel="nofollow">YAML</a> file that tells Rails where the database is. We open it in a text editor and modify the first stanza to reflect the database we created above:
<div id="highlighter_668162" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>01</code></td>
<td class="content"><code class="plain">development:</code></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>02</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>03</code></td>
<td class="content">
<code class="spaces">   </code><code class="plain">adapter:mysql</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>04</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>05</code></td>
<td class="content">
<code class="spaces">   </code><code class="plain">database:bookmarker</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>06</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>07</code></td>
<td class="content">
<code class="spaces">   </code><code class="plain">host:localhost</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>08</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>09</code></td>
<td class="content">
<code class="spaces">   </code><code class="plain">username:root</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>10</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>11</code></td>
<td class="content">
<code class="spaces">   </code><code class="plain">password:</code><code class="string">''</code><code class="plain">s3cr3t</code><code class="string">''</code>
</td>
</tr></tbody></table>
</div>
</div>
</div>
Next we use one of the included tools to generate the components of our application:
<div id="highlighter_778918" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">$ ruby ./Bookmarker/script/generate scaffold Bookmark</code></td>
</tr></tbody></table>
</div>
</div>
</div>
Models are capitalized, controllers are not. Don’t ask me why. Again, if your app delivers synergetic enterprise solutions leveraging seminal proto-alternative band fIREHOSE, you’re on your own.

We have just created a controller, a model and a handful of views. Let’s fire up WEBrick, Rails’ built-in web server software, on port 3000, so we can check out the site we just MADE! For the record, make sure there’s no firewall between you and WEBrick.
<div id="highlighter_213266" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">$ ruby ./Bookmarker/script/server</code></td>
</tr></tbody></table>
</div>
</div>
</div>
Now we point our browser to <a class="external free" title="http://oursite.org:3000/bookmarks" href="http://oursite.org:3000/bookmarks" rel="nofollow">http://oursite.org:3000/bookmarks</a> (because “bookmarks” is the name of the <i>controller</i>) and wow! We have a working bookmark manager. The scaffolding we created with a single line of typing already includes functions to create, delete and edit bookmarks. Stop the stopwatches! Do you see yet why people say this is easy? All that remains is customization.

<a name="Steps_three_and_beyond:Customize_the_application"></a>
<h4><span class="mw-headline">Steps three and beyond:Customize the application</span></h4>
All the functions of the application — create, edit, destroy — are Ruby methods, defined in <tt>app/controllers/bookmarks_controller.rb</tt>, and each is displayed by an .rhtml template in the <tt>models</tt> directory. The core of Rails development involves modifying these files with custom code, to turn a basic Show-Edit-Destroy database front-end into a <a class="external text" title="http://tadalist.com" href="http://tadalist.com" rel="nofollow">Ta-Da List</a>. Let’s add a clickable link to each bookmark that points to the relevant URL. Let us take a look at <tt>views/list.rhtml</tt>.

Ruby’s .rhtml templates are <a class="external text" title="http://api.rubyonrails.com/classes/ActionView/Base.html" href="http://api.rubyonrails.com/classes/ActionView/Base.html" rel="nofollow">Embedded Ruby</a>, which uses <tt> %=</tt> and <tt> %</tt> tags to interpolate Ruby code into HTML documents. The former is used when you want the Ruby’s output displayed in the browser, the latter when you just want to run some method behind the scenes and not output anything. So in <tt>views/bookmark.rb</tt>, we see:
<div id="highlighter_493302" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content">
<code class="plain">&lt;td&gt;&lt;%= link_to </code><code class="string">'Show'</code><code class="plain">, :action =&gt; </code><code class="string">'show'</code><code class="plain">, :id =&gt; bookmark</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>2</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>3</code></td>
<td class="content"><code class="plain">%&gt;&lt;/td&gt;</code></td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>4</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>5</code></td>
<td class="content">
<code class="plain">&lt;td&gt;&lt;%= link_to </code><code class="string">'Edit'</code><code class="plain">, :action =&gt; </code><code class="string">'edit'</code><code class="plain">, :id =&gt; bookmark</code>
</td>
</tr></tbody></table>
</div>
<div class="line alt2">
<table><tbody><tr>
<td class="number"><code>6</code></td>
<td class="content"></td>
</tr></tbody></table>
</div>
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>7</code></td>
<td class="content"><code class="plain">%&gt;&lt;/td&gt;</code></td>
</tr></tbody></table>
</div>
</div>
</div>
That code, which runs once for each bookmark in the database table, uses Ruby’s <a class="external text" title="http://api.rubyonrails.com/classes/ActionView/Helpers/UrlHelper.html#M000304" href="http://api.rubyonrails.com/classes/ActionView/Helpers/UrlHelper.html#M000304" rel="nofollow">link_to()</a> method to create <tt>a href</tt> link tags on the page that invoke the show and edit methods. Let’s add another link, pointing to the bookmarked page, for each bookmark:
<div id="highlighter_623876" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content">
<code class="plain">&lt;td&gt;&lt;%= link_to </code><code class="string">'Open'</code><code class="plain">, bookmark[</code><code class="string">"url"</code><code class="plain">] %&gt;&lt;/td&gt;</code>
</td>
</tr></tbody></table>
</div>
</div>
</div>
Simply enough, that creates a link whose text is “Open” and whose target is the URL value for the current bookmark.

Let’s look at one slightly more complicated example before we go our separate ways today. Since the bookmark manager just has users typing in URLs, we should check (at the very least) whether they have an “http://” prefix already before throwing up a link to them. As with many commonly desirable features, Rails has a pre-existing way to do that. In <tt>models/bookmark.rb</tt>, we add a method call to the class definition:
<div id="highlighter_948909" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table><tbody><tr>
<td class="number"><code>1</code></td>
<td class="content">
<code class="plain">validates_format_of :url, :</code><code class="keyword">with</code> <code class="plain">=&gt; /^http:</code><code class="comments">///, :message =&gt; "needs to begin with 'http'."</code>
</td>
</tr></tbody></table>
</div>
</div>
</div>
Now, when the user tries to create a new bookmark, that method will check the URL attribute against the regular expression, and, if it doesn’t begin with “http://”, then our little error message will be displayed. Documentation for the <tt>validates_format_of()</tt> method is available <a class="external text" title="http://api.rubyonrails.com/classes/ActiveRecord/Validations/ClassMethods.html#M000644" href="http://api.rubyonrails.com/classes/ActiveRecord/Validations/ClassMethods.html#M000644" rel="nofollow">on the application site</a>.

Go ahead and keep polishing the bookmarker app. Learn some Ruby — it almost learns itself! Add CSS to <tt>public/stylesheets/scaffold.css</tt>, add new functionality to the controller, modify the database model, hook in an Ajax bookmarklet, whatever you’d like.

Rails’ cleverness — things like auto-naming submit buttons after their actions — and Ruby’s flexibility — you can rewrite any method you don’t quite like — form a powerful combo. Because of Ruby’s reasonably intuitive way of doing things, getting from a starter scaffolding to a finished application is a short and pleasurable journey. If Rails sometimes seems like a domineering older sibling, insisting that you build your project the way it wants you to, well then, both of you probably still have some growing to do.</div>";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/613543711146795008";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"ZYHX8QC11P";s:4:"date";s:29:"Wed, 24 Jun 2015 03:06:36 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"7JFCGquN6hPQQHPA0ioAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=152:u=42:i=1435115197:t=1435189425:s=AQFWIMf5kHnqDQUS6V8jveSPV_W39LaC"; Expires=Wed, 24 Jun 2015 23:43:45 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "ZYHX8QC11P",
  "status": 401,
  "timestamp": 1435115197351
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=152:u=42:i=1435115197:t=1435189425:s=AQFWIMf5kHnqDQUS6V8jveSPV_W39LaC"";s:7:"expires";i:1435189425;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_d81ec26dd3d78e46f810e03f86c2aa37</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_9f356ee57deafd14dbb68243e0e5e7e5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails - complex rake task</title>
  <link>http://bob-roberts.net/2015/06/23/rails-complex-rake-task/</link>
  <pubDate>Wed, 24 Jun 2015 03:54:39 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1254</guid>
  <description/>
  <content:encoded><![CDATA[I had to write a pretty complex rake task this evening.  I made some seriously big changes to my client app and need to run some processes to update some big changes in the database.

The first question I had was where to add a method that the rake task could call.  While this seemed a pretty easy thing to do, a google search led me no where so I went with trial and error.  In the end I found that the method needed to go AFTER the task do block and not in it.
<pre>desc 'this is the description of the task'</pre>
<pre>task do_something: :environment do
 my_objects.all.each do |object|
   object.do_something_cool
 end
end</pre>
<pre>def do_something_cool
 something_cool
end</pre>
The next thing I want to do was to use an existing helper that was in my Rails project.  This was easily found with Google.

You simply need to require the helper file and include it.  I added this between the dec and the task do block:
<pre>require "#{Rails.root}/app/helpers/my_helper"
include MyHelper</pre>
Hope this helps :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1254</wp:post_id>
  <wp:post_date>2015-06-23 20:54:39</wp:post_date>
  <wp:post_date_gmt>2015-06-24 03:54:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-complex-rake-task</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[11977078808]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/613555817220943872";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"KH5II7YDVV";s:4:"date";s:29:"Wed, 24 Jun 2015 03:54:43 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"6OanKUuQ6hNwS+ib0ioAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=152:u=42:i=1435118083:t=1435189425:s=AQE_-pdPbYZN3QZddu34vbh16EC8VgwV"; Expires=Wed, 24 Jun 2015 23:43:45 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "KH5II7YDVV",
  "status": 401,
  "timestamp": 1435118083838
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=152:u=42:i=1435118083:t=1435189425:s=AQE_-pdPbYZN3QZddu34vbh16EC8VgwV"";s:7:"expires";i:1435189425;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Tesla's Model S Gets "Ludicrous" Mode, Will Do 0-60 In 2.8 Seconds</title>
  <link>http://bob-roberts.net/2015/07/17/teslas-model-s-gets-ludicrous-mode-will-do-0-60-in-2-8-seconds/</link>
  <pubDate>Sat, 18 Jul 2015 00:39:40 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2015/07/17/teslas-model-s-gets-ludicrous-mode-will-do-0-60-in-2-8-seconds/</guid>
  <description/>
  <content:encoded><![CDATA[Insane!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1260</wp:post_id>
  <wp:post_date>2015-07-17 17:39:40</wp:post_date>
  <wp:post_date_gmt>2015-07-18 00:39:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>teslas-model-s-gets-ludicrous-mode-will-do-0-60-in-2-8-seconds</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_pushup-notifications-push-setting</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:4:"time";i:0;s:6:"status";s:8:"unpushed";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_tc_show_video_icon</wp:meta_key>
    <wp:meta_value><![CDATA[]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tc_full_width_featured_image</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tc_post_json_aol_markup</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{i:0;s:101:"https://s0.wp.com/wp-content/themes/pub/nuntius/assets/images/techcrunch.global.thumb-placeholder.png";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>is_reblog</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>post_id</wp:meta_key>
    <wp:meta_value><![CDATA[1184438]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>blog_id</wp:meta_key>
    <wp:meta_value><![CDATA[24588526]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/622204056874778624";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_thumbnail_id</wp:meta_key>
    <wp:meta_value><![CDATA[1261]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"T52CJZO15B";s:4:"date";s:29:"Sat, 18 Jul 2015 00:39:45 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"WM7WL5Xj8RNAySJkiisAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=173:u=42:i=1437179986:t=1437266386:s=AQG48n9ACEopqe-iaFv64OQ2KlOdaCUm"; Expires=Sun, 19 Jul 2015 00:39:46 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "T52CJZO15B",
  "status": 401,
  "timestamp": 1437179986088
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=173:u=42:i=1437179986:t=1437266386:s=AQG48n9ACEopqe-iaFv64OQ2KlOdaCUm"";s:7:"expires";i:1437266386;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>reblog_snapshot</wp:meta_key>
    <wp:meta_value><![CDATA[O:8:"stdClass":8:{s:5:"title";s:66:"Tesla's Model S Gets "Ludicrous" Mode, Will Do 0-60 In 2.8 Seconds";s:4:"type";s:4:"post";s:9:"mime_type";s:0:"";s:6:"format";b:0;s:12:"modified_gmt";s:19:"2015-07-17 21:04:39";s:9:"permalink";s:95:"http://techcrunch.com/2015/07/17/teslas-model-s-gets-ludicrous-mode-will-do-0-60-in-2-8-seconds";s:7:"content";s:2094:"<div class="reblogged-content">

<img class="aligncenter size-full wp-image-1184441" src="https://bobspython.files.wordpress.com/2015/07/s1.png" alt="s" width="824" height="526" data-originalSrc="https://tctechcrunch2011.files.wordpress.com/2015/07/s.png" data-rehosted="1">

Tesla's Model S P85D is well known for its wonderfully named "Insane" mode, which tunes the car to go from 0 to 60 in 3.1 seconds.

Not insane enough for you? Now the Model S is getting a "Ludicrous" mode. Seriously.

The aptly named Ludicrous mode will do 0-60 in <em>2.8 seconds</em>. According to Tesla CEO Elon Musk, that acceleration pins you to the seat at a 1.1 Gs. "It's faster than falling," he adds. "It's like having your own private roller coaster."

One catch: unlike most Tesla Model S tuning enhancements, this one isn't a software update — and it's not free. Why? Because Tesla had to make new, physical hardware to make this possible. Specifically, they had to make a fuse that didn't melt when you pulled ridiculously high amperages over it.

The fuse upgrade will be a $10k option for new buyers, and cost $5k (before installation) for existing P85D owners.

<strong>
Musk also announced two other bits of news surrounding the Model S:</strong>
<ol>
<li>They're introducing the Model S 70, a new single motor 70 kWH model for $70,000</li>
	<li>A $3,000 90kWh battery pack upgrade option for the 85kWh Model S. This upgrade is primarily meant for new buyers; while existing owners <em>can</em> purchase it, Elon suggests that current owners wait until an upgrade is necessary as the range will only improve in time.</li>
</ol>
Also mentioned in passing were very limited details on Tesla's electric SUV — the Model X — and their more affordable compact option, the Model 3. The first Model X's will ship "in two months," while Elon promises Model 3s will roll out "in just over two years."

<em>(Fun note: before the press call began, Tesla had Ludacris playing on loop — now we know why. How very Apple-y of them.)</em>

https://www.youtube.com/watch?v=ygE01sOhzz0</div>";s:15:"images_mirrored";i:2;}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails On Linux On Windows With Vagrant</title>
  <link>http://bob-roberts.net/2015/09/29/rails-on-linux-on-windows-with-vagrant/</link>
  <pubDate>Wed, 30 Sep 2015 04:45:09 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1264</guid>
  <description/>
  <content:encoded><![CDATA[Source: <a href="https://bruceoutdoors.wordpress.com/2015/09/18/rails-on-linux-on-windows-with-vagrant/">Rails On Linux On Windows With Vagrant</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1264</wp:post_id>
  <wp:post_date>2015-09-29 21:45:09</wp:post_date>
  <wp:post_date_gmt>2015-09-30 04:45:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-on-linux-on-windows-with-vagrant</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
</item>
<item>
  <title>Why software startups are like the Marine Corps ….</title>
  <link>http://bob-roberts.net/2015/12/01/why-software-startups-are-like-the-marine-corps/</link>
  <pubDate>Wed, 02 Dec 2015 04:34:01 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1273</guid>
  <description/>
  <content:encoded><![CDATA[<p class="p1"><span class="s1">“Improvise, Adapt, Overcome” is the unofficial motto of the Marine Corps and should be the motto for a software startup if they are to be successful.</span></p>
<p class="p1"><span class="s1">I would imagine that more times than not, the original “idea” for a money-making software application, is nothing at all what the end product will be.<span class="Apple-converted-space">  </span>In the freelance world, it is common to perform a “needs assessment” when talking with a new/future client.<span class="Apple-converted-space">  </span>It is the developers job to fully outline everything that the client wants for their dream software application to be and look like.<span class="Apple-converted-space">  </span>Myself, I prefer to do a full user story workshop.<span class="Apple-converted-space">  </span>This entails getting down to the nitty gritty of what every part of the app should look like and do.<span class="Apple-converted-space">  </span>This is all done with the current/existing vision that the client has.<span class="Apple-converted-space">  </span>And then development begins …</span></p>
<p class="p1"><span class="s1">If I use a store bought box cake mix, I imagine that I can add all of the ingredients and it will come out just fine.<span class="Apple-converted-space">  </span>If I do it from scratch, well there will be somewhat of a trial and error with the ingredients.<span class="Apple-converted-space">  </span>Too sweet, not sweet enough, all this can change before the cake is done. Just like software.</span></p>
<p class="p1"><span class="s1">With software development, there is a general direction that you go.<span class="Apple-converted-space">  </span>This is based on the clients needs/wants.<span class="Apple-converted-space">  </span>But the reality of it is that once you start and they see things begin to take shape, the idea that they had in their head morphs.<span class="Apple-converted-space">  </span>“I thought it would look good like this but now that I see it I do not like that …. “<span class="Apple-converted-space">  </span>Suddenly the straight line from start to finished product twists this way and that.</span></p>
<p class="p1"><span class="s1">Many factors can cause a “change in direction” when developing a software application.<span class="Apple-converted-space">  </span>In the beginning their will be more input once it starts to take shape.<span class="Apple-converted-space">  </span>Beta testers and market research can cause changes to be necessary.</span></p>
<p class="p1"><span class="s1">In addition to changes with the software, there will be changes to the team.<span class="Apple-converted-space">  </span>Hiring more, cutting back, hiring again… All of this is possible.<span class="Apple-converted-space">  </span>In the pursuit of a self sustaining product (one that pays the bills) many of these changes might be necessary. </span></p>
<p class="p1"><span class="s1">It isn't easy, but in order to make it work, be ready to improvise on what your are building, adapt to trends and changes, and overcome any and all obstacles that get in the way.</span></p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1273</wp:post_id>
  <wp:post_date>2015-12-01 21:34:01</wp:post_date>
  <wp:post_date_gmt>2015-12-02 04:34:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>why-software-startups-are-like-the-marine-corps</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/671910191168753665";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[17391375418]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"94733KDB6Y";s:4:"date";s:29:"Wed, 02 Dec 2015 04:34:08 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:9:"x-li-uuid";s:24:"i3g7L+H9GxTAnToHdisAAA==";s:10:"set-cookie";s:154:"lidc="b=TB23:g=277:u=72:i=1449030848:t=1449092028:s=AQGnHTIkQZlcUYd2k4GUPzvOGqkEPmxS"; Expires=Wed, 02 Dec 2015 21:33:48 GMT; domain=.linkedin.com; Path=/";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1408945124610",
  "requestId": "94733KDB6Y",
  "status": 401,
  "timestamp": 1449030848767
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:80:""b=TB23:g=277:u=72:i=1449030848:t=1449092028:s=AQGnHTIkQZlcUYd2k4GUPzvOGqkEPmxS"";s:7:"expires";i:1449092028;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Issues with ex-employee</title>
  <link>http://bob-roberts.net/2015/12/23/issues-with-ex-employee/</link>
  <pubDate>Thu, 24 Dec 2015 06:29:41 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1276</guid>
  <description/>
  <content:encoded><![CDATA[So here is a question for all of you out there. You recently had to let go an employee due to cutbacks. This employee was chosen to be let go due to bad work ethics and bad attitude when others were able to keep their jobs.

Since then this ex-employee has been harassing your company by signing up with fake users and with harassing statements made on the companies platform live chat. Now none of these are "illegal activities" per se but nevertheless childish and immature.  I mean, I am not sure if it is illegal.  What defines harassment when it comes to the web these days?  Maybe it is illegal and legal action could and maybe should be taken.

What do you think the proper thing to do would be.  It goes without saying that I am sure that you would not give them a good reference every, but what else?  What would you do?]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1276</wp:post_id>
  <wp:post_date>2015-12-23 23:29:41</wp:post_date>
  <wp:post_date_gmt>2015-12-24 06:29:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>issues-with-ex-employee</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[18080105412]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/679911826620940288";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7777887</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_linkedin_url</wp:meta_key>
    <wp:meta_value><![CDATA[https://www.linkedin.com/updates?discuss=&scope=336165323&stype=M&topic=6085677520865288192&type=U&a=U6fT]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails : Martin Fowler’s Tell Don’t Ask principle in Ruby</title>
  <link>http://bob-roberts.net/2015/12/28/rails-martin-fowlers-tell-dont-ask-principle-in-ruby/</link>
  <pubDate>Tue, 29 Dec 2015 04:40:35 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1278</guid>
  <description/>
  <content:encoded><![CDATA[Source: <a href="https://cbabhusal.wordpress.com/2015/12/19/rails-martin-fowlers-tell-dont-ask-principle-in-ruby/">Rails : Martin Fowler’s Tell Don’t Ask principle in Ruby</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1278</wp:post_id>
  <wp:post_date>2015-12-28 21:40:35</wp:post_date>
  <wp:post_date_gmt>2015-12-29 04:40:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-martin-fowlers-tell-dont-ask-principle-in-ruby</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
</item>
<item>
  <title>Create and integrate SSL certificate in Rails app Using [ Godaddy + Nginx(1.8) + Puma + Ubuntu Server(14.04 LTS) ]</title>
  <link>http://bob-roberts.net/2016/01/26/create-and-integrate-ssl-certificate-in-rails-app-using-godaddy-nginx1-8-puma-ubuntu-server14-04-lts/</link>
  <pubDate>Wed, 27 Jan 2016 02:01:56 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1281</guid>
  <description/>
  <content:encoded><![CDATA[Source: <a href="https://taimoorchangaizpucitian.wordpress.com/2016/01/25/create-and-integrate-ssl-certificate-in-rails-app-using-godaddy-nginx1-8-puma-ubuntu-server14-04-lts/">Create and integrate SSL certificate in Rails app Using [ Godaddy + Nginx(1.8) + Puma + Ubuntu Server(14.04 LTS) ]</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1281</wp:post_id>
  <wp:post_date>2016-01-26 19:01:56</wp:post_date>
  <wp:post_date_gmt>2016-01-27 02:01:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>create-and-integrate-ssl-certificate-in-rails-app-using-godaddy-nginx1-8-puma-ubuntu-server14-04-lts</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
</item>
<item>
  <title>Yo ho, yo ho, a freelancer's life for me</title>
  <link>http://bob-roberts.net/2016/04/26/yo-ho-yo-ho-a-freelancers-life-for-me/</link>
  <pubDate>Tue, 26 Apr 2016 22:04:21 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1294</guid>
  <description/>
  <content:encoded><![CDATA[<p style="text-align:justify;">It has been quite a while since I posted anything.  Lots of things going on and finding time to blog and the desire to blog has been hard.</p>
<p style="text-align:justify;">After 2 years working for a company, I am back to Ruby on Rails freelancing.  Why choose freelancing?  Aren't regular jobs more secure and stable?  There are lots of remote job? Why???</p>
<p style="text-align:justify;">Well, to answer the issue of stability, I have to say that there is not anything in life that is stable, least of which companies.  Startups start and end.  Intel just cut 12,000 jobs. Companies are down sized, resized, bought and sold, so no, no job is secure and stable.</p>
<p style="text-align:justify;">My long time client is a remote gig but as a freelancer.  I have worked remotely for a company before.  There are lots of Rails (and other programming languages) jobs for remote workers.  Probably due to what I was looking for I found that companies that I liked, did not want me and the ones that I wasn't too excited about did.</p>
<p style="text-align:justify;">I also looked at the available company jobs in the Phoenix area and honestly only saw a couple that seemed like a cool place to work and had something cool to work on.</p>
<p style="text-align:justify;">So freelance it is.  While I wish that there was a place that programmers could go to to find projects to work on, there is not.  Now, I know that there are freelance developer sites out there.  If you are ok with bidding low and earning low, go for it.  The competition is crazy and you are competing with developers all over the world.  This includes countries with a much much lower cost of living, hence they can afford to bid low.</p>
<p style="text-align:justify;">How do you find work?  Networking, networking and networking.  Tell people that you know what you are doing.  Go to developer meetups.  Meet people and spread the word that you are a freelance developer!  Of course there is a lot more to it than that but that is the basics, imho.</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1294</wp:post_id>
  <wp:post_date>2016-04-26 15:04:21</wp:post_date>
  <wp:post_date_gmt>2016-04-26 22:04:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>yo-ho-yo-ho-a-freelancers-life-for-me</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[22199775018]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"SORPCCQVC0";s:4:"date";s:29:"Tue, 26 Apr 2016 22:04:26 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"prod-ltx1";s:8:"x-li-pop";s:9:"prod-ltx1";s:10:"set-cookie";s:155:"lidc="b=TB23:g=429:u=146:i=1461708267:t=1461794667:s=AQF6_g-9ShK087qkkogzihWiB8hcEWub"; Expires=Wed, 27 Apr 2016 22:04:27 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"4oEapewHSRRgIOW2ryoAAA==";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1456122547321",
  "requestId": "SORPCCQVC0",
  "status": 401,
  "timestamp": 1461708267074
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:81:""b=TB23:g=429:u=146:i=1461708267:t=1461794667:s=AQF6_g-9ShK087qkkogzihWiB8hcEWub"";s:7:"expires";i:1461794667;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[15714693]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>geo_public</wp:meta_key>
    <wp:meta_value><![CDATA[0]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/725083136883707904";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Rails : Single Sign-On : Omniauth : Facebook — My Daily Technical Notes [ Ruby, Rails, Gems, Server Ops]</title>
  <link>http://bob-roberts.net/2016/07/30/rails-single-sign-on-omniauth-facebook-my-daily-technical-notes-ruby-rails-gems-server-ops/</link>
  <pubDate>Sat, 30 Jul 2016 17:21:48 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2016/07/30/rails-single-sign-on-omniauth-facebook-my-daily-technical-notes-ruby-rails-gems-server-ops/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="https://cbabhusal.wordpress.com/2016/07/03/rails-single-sign-on-omniauth-facebook/"><img src="https://cbabhusal.files.wordpress.com/2016/07/omni_auth.png?w=1440&amp;quality=80&amp;strip=info" /></a>
<blockquote>It is very easy to customize devise to implement single-sign-on with facebook. Assumption: You have setup the devise gem fully usable. Devise Omni-Auth In Gemfile: gem ‘omniauth-facebook’ This technique is applicable to any type of Oauth Provider: For a full list of these providers, please check OmniAuth’s list of strategies. $ rails g migration AddOmniauthToUsers provider:string uid:string $ […]</blockquote>
via <a href="https://cbabhusal.wordpress.com/2016/07/03/rails-single-sign-on-omniauth-facebook/">Rails : Single Sign-On : Omniauth : Facebook — My Daily Technical Notes [ Ruby, Rails, Gems, Server Ops]</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1299</wp:post_id>
  <wp:post_date>2016-07-30 10:21:48</wp:post_date>
  <wp:post_date_gmt>2016-07-30 17:21:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>rails-single-sign-on-omniauth-facebook-my-daily-technical-notes-ruby-rails-gems-server-ops</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"DM1NXV3R3S";s:4:"date";s:29:"Sat, 30 Jul 2016 17:21:58 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"PROD-ELA4";s:8:"x-li-pop";s:9:"prod-ltx1";s:10:"set-cookie";s:155:"lidc="b=LB23:g=563:u=173:i=1469899318:t=1469920525:s=AQHRNy97fwqIbC0XaFYqjsu1BqP-ytJp"; Expires=Sat, 30 Jul 2016 23:15:25 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"X1nag6QhZhTgsZbuVCsAAA==";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1456122547321",
  "requestId": "DM1NXV3R3S",
  "status": 401,
  "timestamp": 1469899318973
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:81:""b=LB23:g=563:u=173:i=1469899318:t=1469920525:s=AQHRNy97fwqIbC0XaFYqjsu1BqP-ytJp"";s:7:"expires";i:1469920525;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[25310810772]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/759438898615291904";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Web development company, Take 2</title>
  <link>http://bob-roberts.net/2016/08/17/web-development-company-take-2/</link>
  <pubDate>Thu, 18 Aug 2016 01:44:27 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/?p=1300</guid>
  <description/>
  <content:encoded><![CDATA[A couple of months ago the startup that I was working for closed up shop.  A few weeks later the salesman, another developer and I decided to start our own web development shop in Phoenix.  Skorpion Software, LLC was born.

Seeing as we have great experience working at a startup, we can transition that knowledge to helping other startups get to market with their minimum viable product (MVP) quickly and as inexpensively as possible.  Ruby on Rails is the perfect programming language to quickly create a fully working 'prototype' as an MVC.  The startup can go to market and then add on the 'bells and whistles' gradually as they have the money to do so.

We have also been doing some WordPress sites which are great for what they are made for.  Once you get to where you need more than WordPress can handle you need to step up to a full blown web application and Rails is perfect for that.

Although we can develop native apps like iOS and Android, I think that if you design a web app in the correct manner and develop it as mobile first, you might not have the need for additional native apps.  With some planning and skill, the mobile version of a web app looks, feels and works great.

So wish the 3 of us luck as we turn the page to a new chapter and venture down a new path :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1300</wp:post_id>
  <wp:post_date>2016-08-17 18:44:27</wp:post_date>
  <wp:post_date_gmt>2016-08-18 01:44:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>web-development-company-take-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:5:{s:7:"headers";a:11:{s:6:"server";s:17:"Apache-Coyote/1.1";s:15:"x-li-request-id";s:10:"J29WZ6B7DT";s:4:"date";s:29:"Thu, 18 Aug 2016 01:44:34 GMT";s:4:"vary";s:1:"*";s:11:"x-li-format";s:4:"json";s:12:"content-type";s:30:"application/json;charset=UTF-8";s:16:"content-encoding";s:4:"gzip";s:11:"x-li-fabric";s:9:"PROD-ELA4";s:8:"x-li-pop";s:9:"PROD-ELA4";s:10:"set-cookie";s:155:"lidc="b=LB23:g=582:u=181:i=1471484674:t=1471487880:s=AQEqLt7L3_qsjjP1qC45bbZhhkAeRzcZ"; Expires=Thu, 18 Aug 2016 02:38:00 GMT; domain=.linkedin.com; Path=/";s:9:"x-li-uuid";s:24:"oSrn6YPDaxRgZHRwQisAAA==";}s:4:"body";s:175:"{
  "errorCode": 0,
  "message": "[unauthorized]. Expired access token. Timestamp: 1456122547321",
  "requestId": "J29WZ6B7DT",
  "status": 401,
  "timestamp": 1471484674688
}";s:8:"response";a:2:{s:4:"code";i:401;s:7:"message";s:12:"Unauthorized";}s:7:"cookies";a:1:{i:0;O:14:"WP_Http_Cookie":5:{s:4:"name";s:4:"lidc";s:5:"value";s:81:""b=LB23:g=582:u=181:i=1471484674:t=1471487880:s=AQEqLt7L3_qsjjP1qC45bbZhhkAeRzcZ"";s:7:"expires";i:1471487880;s:4:"path";s:1:"/";s:6:"domain";s:13:".linkedin.com";}}s:8:"filename";N;}}}s:10:"error_data";a:0:{}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[25893540971]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/766088359357718530";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Nice and Simple :)</title>
  <link>http://bob-roberts.net/2017/03/02/nice-and-simple/</link>
  <pubDate>Thu, 02 Mar 2017 23:57:52 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2017/03/02/nice-and-simple/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="https://deadsimpleror.wordpress.com/2017/02/19/facebook-omniauth-integration-ror/"><img src="https://deadsimpleror.files.wordpress.com/2017/02/dsr_fb_integ_whitebg.png?quality=80&amp;strip=info&amp;w=1600" /></a>
<blockquote>To integrate Facebook signup and login in your application you need to do the followings.</blockquote>
via <a href="https://deadsimpleror.wordpress.com/2017/02/19/facebook-omniauth-integration-ror/">Dead Simple Facebook Integration With Your ROR App — Dead Simple Ruby On Rails</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1317</wp:post_id>
  <wp:post_date>2017-03-02 16:57:52</wp:post_date>
  <wp:post_date_gmt>2017-03-02 23:57:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>nice-and-simple</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[2441433669]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/837451957182816261";}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title/>
  <link>http://bob-roberts.net/2017/03/02/1318/</link>
  <pubDate>Fri, 03 Mar 2017 00:00:26 +0000</pubDate>
  <dc:creator>broberts65</dc:creator>
  <guid isPermaLink="false">http://bob-roberts.net/2017/03/02/1318/</guid>
  <description/>
  <content:encoded><![CDATA[<a href="http://gabriellidenor.com/2017/02/02/how-to-build-an-api-using-rails-part-1/"><img src="https://gabriellidenor.files.wordpress.com/2017/02/bildschirmfoto-2017-02-02-um-09-00-14.png?quality=80&amp;strip=info&amp;w=1600" /></a>
<blockquote>The Rails 5 is out, and of course it came with a lot of new features and improvements, on this tutorial I’m going to cover the Rails API feature. With all the Javascript stuff coming out, we have a lot of tools for building APIs these days, we have Express, Sails Js and many others. How about […]</blockquote>
via <a href="http://gabriellidenor.com/2017/02/02/how-to-build-an-api-using-rails-part-1/">How to build an API using Rails – Part 1 — Gabriel Lidenor</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>1318</wp:post_id>
  <wp:post_date>2017-03-02 17:00:26</wp:post_date>
  <wp:post_date_gmt>2017-03-03 00:00:26</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>1318</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="ruby-on-rails"><![CDATA[Ruby on Rails]]></category>
  <wp:postmeta>
    <wp:meta_key>_publicize_failed_7776411</wp:meta_key>
    <wp:meta_value><![CDATA[O:13:"Keyring_Error":2:{s:6:"errors";a:1:{s:21:"keyring-request-error";a:1:{i:0;a:6:{s:7:"headers";O:42:"Requests_Utility_CaseInsensitiveDictionary":1:{s:7:"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_7639684</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_7641025</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[bobr_az]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_published</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_rest_api_client_id</wp:meta_key>
    <wp:meta_value><![CDATA[-1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_job_id</wp:meta_key>
    <wp:meta_value><![CDATA[2441492522]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:7641025;s:53:"https://twitter.com/bobr_az/status/837452595971121152";}}]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
